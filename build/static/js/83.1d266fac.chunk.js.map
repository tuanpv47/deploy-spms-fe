{"version":3,"sources":["views/common/DSCTDT/DSCTDT.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/readOnlyError.js","api/admin/adminQLCTDTApi.js"],"names":["DSCTDT","props","t","useTranslation","history","useParams","id","useHistory","isCancelled","useRef","useState","isLoading","contents","page","total","ctdt","setCtdt","limit","search","maCTDT","updatedAt","conditions","useEffect","a","adminQLCTDTApi","getCTDTwithConditions","response","current","loaiHinh","ten","trinhDo","tongTinChi","doiTuong","quiTrinhDaoTao","dieuKienTotNghiep","className","toUpperCase","style","display","onClick","push","RoutesString","COMMON_VIEW_CTNDT","color","i18n","hover","map","item","index","e","COMMON_QLCTDT","replace","scope","_readOnlyError","name","Error","getCTDT","url","axiosClient","get","updateCTDT","put","getNganhDaoTaoTuCTDT","data"],"mappings":"wRAiJeA,UAtIA,SAACC,GAAW,IACfC,EAAMC,cAAND,EAEJE,GADSC,cAAPC,GACQC,eACRC,EAAcC,kBAAO,GAJL,EAKYC,oBAAS,GALrB,mBAKfC,EALe,aAMED,mBAAS,CAC7BE,SAAU,GACVC,KAAM,EACNC,MAAO,KATW,mBAMfC,EANe,KAMTC,EANS,OAWcN,mBAAS,CACzCG,KAAM,EACNI,MAAO,EACPC,OAAQ,GACRC,OAAQ,GACRC,UAAW,QAhBO,mBAWfC,EAXe,UAkBtBC,qBAAU,WAaN,OAZA,sBAAC,4BAAAC,EAAA,+EAE8BC,IAAeC,sBAClCJ,GAHX,OAEaK,EAFb,OAKYlB,EAAYmB,SACbX,EAAQU,GANnB,mHAAD,GAYO,WACHlB,EAAYmB,SAAU,KAE3B,IAlCmB,MAmCoBjB,mBAAS,CAC/CS,OAAQ,GACRS,SAAU,GACVC,IAAK,GACLC,QAAS,GACTC,WAAY,EACZC,SAAU,GACVC,eAAgB,GAChBC,kBAAmB,KA3CD,6BA8CtB,OACI,mCACKvB,EACG,cAAC,IAAD,IAEA,qBAAKwB,UAAU,yCAAf,SACI,cAAC,IAAD,CAAKA,UAAU,qEAAf,SACI,eAAC,IAAD,WACI,sBAAKA,UAAU,iBAAf,UACI,oBAAIA,UAAU,aAAd,SACKjC,EAAE,qBAAqBkC,gBAE5B,qBAAKC,MAAO,CAAEC,QAAS,QAAvB,SAsBI,cAAC,IAAD,CACIC,QAAS,WACLnC,EAAQoC,KACJC,IAAaC,oBAGrBC,MAAM,UACNR,UAAU,OAPd,SASKS,IAAK1C,EAAE,+BAInBa,EAAKD,MACF,eAAC,IAAD,CAAOqB,UAAU,OAAOU,OAAK,EAA7B,UACI,gCACI,+BACI,qCACA,6BAAK3C,EAAE,kBACP,6BAAKA,EAAE,kBACP,6BAAKA,EAAE,uBAGda,EAAKH,SAASkC,KAAI,SAACC,EAAMC,GAAP,OACf,gCACI,qBACIT,QAAS,SAACU,GAAD,OACL7C,EAAQoC,KACJC,IAAaS,cAAcC,QACvB,MADJ,OAEIJ,QAFJ,IAEIA,OAFJ,EAEIA,EAAMzC,MALtB,UAUI,oBAAI8C,MAAM,MAAV,SAAiBJ,EAAQ,IACzB,oCAAKD,QAAL,IAAKA,OAAL,EAAKA,EAAM5B,SACX,oCAAK4B,QAAL,IAAKA,OAAL,EAAKA,EAAMlB,MACX,6BAAKkB,EAAKhB,iBAdNiB,SAoBpB,c,iCCvIjB,SAASK,EAAeC,GACrC,MAAM,IAAIC,MAAM,IAAOD,EAAO,kB,YCC1B9B,EAAiB,CACrBgC,QAAS,SAAClD,GACR,IAAMmD,EAAM,wBAA0BnD,EACtC,OAAOoD,IAAYC,IAAIF,IAEzBhC,sBAAuB,SAACJ,GACtB,IAAMoC,EAAG,oCAAgCpC,EAAWR,KAA3C,kBAAyDQ,EAAWJ,MAApE,sBAAuFI,EAAWD,WAO3G,MAN0B,KAAtBC,EAAWH,SACbuC,IAAG,2BAAepC,EAAWH,UAEL,KAAtBG,EAAWF,SACbsC,IAAG,2BAAepC,EAAWF,UAExBuC,IAAYC,IAAIF,IAEzBG,WAAY,SAACtD,EAAIS,GACf,IAAM0C,EAAM,wBAA0BnD,EACtC,OAAOoD,IAAYG,IAAIJ,EAAK1C,IAE9B+C,qBAAsB,SAACC,GACrB,IAAMN,EAAG,0CAAsCM,GAC/C,OAAOL,IAAYC,IAAIF,KAGZjC","file":"static/js/83.1d266fac.chunk.js","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Button, Col, Row, Table } from \"reactstrap\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport adminQLCTDTApi from \"api/admin/adminQLCTDTApi\";\r\nimport i18n from \"i18n/i18n\";\r\nimport { RoutesString } from \"pages/routesString\";\r\nimport LoadingBar from \"components/common/LoadingBar/LoadingBar\";\r\n\r\nimport \"./DSCTDT.css\";\r\n\r\nconst DSCTDT = (props) => {\r\n    const { t } = useTranslation();\r\n    let { id } = useParams();\r\n    let history = useHistory();\r\n    const isCancelled = useRef(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [ctdt, setCtdt] = useState({\r\n        contents: [],\r\n        page: 0,\r\n        total: 0,\r\n    });\r\n    const [conditions, setConditions] = useState({\r\n        page: 0,\r\n        limit: 0,\r\n        search: \"\",\r\n        maCTDT: \"\",\r\n        updatedAt: \"ASC\",\r\n    });\r\n    useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                const response = await adminQLCTDTApi.getCTDTwithConditions(\r\n                    conditions\r\n                );\r\n                if (!isCancelled.current) {\r\n                    setCtdt(response);\r\n                }\r\n            } catch (err) {\r\n                throw err;\r\n            }\r\n        })();\r\n        return () => {\r\n            isCancelled.current = true;\r\n        };\r\n    }, []);\r\n    const [initialValues, setInitialValues] = useState({\r\n        maCTDT: \"\",\r\n        loaiHinh: \"\",\r\n        ten: \"\",\r\n        trinhDo: \"\",\r\n        tongTinChi: 0,\r\n        doiTuong: \"\",\r\n        quiTrinhDaoTao: \"\",\r\n        dieuKienTotNghiep: \"\",\r\n    });\r\n\r\n    return (\r\n        <>\r\n            {isLoading ? (\r\n                <LoadingBar />\r\n            ) : (\r\n                <div className=\"ManageProgramEducationBasic__container\">\r\n                    <Row className=\"ManageProgramEducation_background ManageProgramEducation__contents\">\r\n                        <Col>\r\n                            <div className=\"manage_headers\">\r\n                                <h4 className=\"item-label\">\r\n                                    {t(\"LIST_MAJOR_DETAIL\").toUpperCase()}\r\n                                </h4>\r\n                                <div style={{ display: \"flex\" }}>\r\n                                    {/* <Button\r\n                                        onClick={() => {\r\n                                            history.push(\r\n                                                RoutesString.ADMIN_DSCTDT_CREATE\r\n                                            );\r\n                                        }}\r\n                                        color=\"primary\"\r\n                                    >\r\n                                        {i18n.t(\"admin.common.ADD\")}\r\n                                    </Button> */}\r\n                                    {/* <Button\r\n                                        onClick={() => {\r\n                                            history.push(\r\n                                                RoutesString.ADMIN_DSCTDT_CREATE_FLOW\r\n                                            );\r\n                                        }}\r\n                                        color=\"primary\"\r\n                                        className=\"btn_\"\r\n                                    >\r\n                                        {i18n.t(\"CREATE_CTDT.CREATE_NEW_CTDT\")}\r\n                                    </Button> */}\r\n                                    <Button\r\n                                        onClick={() => {\r\n                                            history.push(\r\n                                                RoutesString.COMMON_VIEW_CTNDT\r\n                                            );\r\n                                        }}\r\n                                        color=\"primary\"\r\n                                        className=\"btn_\"\r\n                                    >\r\n                                        {i18n.t(\"CREATE_CTDT.VIEW_PDF\")}\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n                            {ctdt.total ? (\r\n                                <Table className=\"mt-4\" hover>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>STT</th>\r\n                                            <th>{t(\"PROGRAM_CODE\")}</th>\r\n                                            <th>{t(\"PROGRAM_NAME\")}</th>\r\n                                            <th>{t(\"TOTAL_CREDIT\")}</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    {ctdt.contents.map((item, index) => (\r\n                                        <tbody key={index}>\r\n                                            <tr\r\n                                                onClick={(e) =>\r\n                                                    history.push(\r\n                                                        RoutesString.COMMON_QLCTDT.replace(\r\n                                                            \":id\",\r\n                                                            item?.id\r\n                                                        )\r\n                                                    )\r\n                                                }\r\n                                            >\r\n                                                <th scope=\"row\">{index + 1}</th>\r\n                                                <td>{item?.maCTDT}</td>\r\n                                                <td>{item?.ten}</td>\r\n                                                <td>{item.tongTinChi}</td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    ))}\r\n                                </Table>\r\n                            ) : (\r\n                                \"\"\r\n                            )}\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default DSCTDT;\r\n","export default function _readOnlyError(name) {\n  throw new Error(\"\\\"\" + name + \"\\\" is read-only\");\n}","import axiosClient from \"api/common/axiosClient\";\r\n\r\nconst adminQLCTDTApi = {\r\n  getCTDT: (id) => {\r\n    const url = \"chuong-trinh-dao-tao/\" + id;\r\n    return axiosClient.get(url);\r\n  },\r\n  getCTDTwithConditions: (conditions) => {\r\n    const url = `chuong-trinh-dao-tao?page=${conditions.page}&limit=${conditions.limit}&updatedAt=${conditions.updatedAt}`;\r\n    if (conditions.search !== \"\") {\r\n      url += `search=&${conditions.search}`;\r\n    }\r\n    if (conditions.maCTDT !== \"\") {\r\n      url += `maCTDT=&${conditions.maCTDT}`;\r\n    }\r\n    return axiosClient.get(url);\r\n  },\r\n  updateCTDT: (id, ctdt) => {\r\n    const url = \"chuong-trinh-dao-tao/\" + id;\r\n    return axiosClient.put(url, ctdt);\r\n  },\r\n  getNganhDaoTaoTuCTDT: (data) => {\r\n    const url = `nganh-dao-tao?chuongTrinhDaoTao=${data}`;\r\n    return axiosClient.get(url);\r\n  },\r\n};\r\nexport default adminQLCTDTApi;\r\n"],"sourceRoot":""}