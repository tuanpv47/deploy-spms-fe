{"version":3,"sources":["views/admin/role/RoleList/services/export-csv.js","views/admin/role/RoleList/components/PageHeader/PageHeader.js","views/admin/role/RoleList/components/TableHeader/TableHeader.js","views/admin/role/RoleList/components/TableTools/TableTools.js","views/admin/role/RoleList/components/TableFooter/TableFooter.js","views/admin/role/RoleList/components/TableBody/TableBody.js","views/admin/role/RoleList/RoleList.js","components/admin/Breadcrumbs/Breadcrumbs.js","components/admin/ConfirmModal/ConfirmModal.js","components/user/MyPagination/MyPagination.js","utils/export-csv.js","api/common/role.js"],"names":["exportHead","head","push","exportRow","data","row","value","name","isDeleted","createdAt","updatedAt","PageHeader","headerTitle","addPageUrl","t","useTranslation","history","useHistory","className","toUpperCase","Button","color","onClick","e","preventDefault","TableHeader","deleteBtnIsHidden","handleDeleteOnClick","handleExportCSVOnClick","handleRefreshOnClick","Row","Col","lg","title","fill","TableTools","currentLimit","currentSearchKey","handleLimitOnChange","handleSearchOnChange","handleSearchOnClick","Input","type","onChange","InputGroup","placeholder","InputGroupAddon","addonType","TableFooter","currentUrl","currentStartPage","currentPage","currentTotal","MyPagination","url","startPage","page","limit","total","TableBody","titles","detailTitles","items","currentSorter","handleCheckItemOnChange","handleCheckAllOnChange","handleSortOnClick","handleEditOnClick","handleShowDetailOnClick","Table","responsive","bordered","id","map","index","data-value","icon","text","sortBy","sortType","item","field","Badge","lodash","style","marginLeft","RoutesString","ADMIN_ROLE_PERMISSION","replace","colSpan","detailTitle","isDate","formatTimestamp","RoleList","location","useLocation","useState","isLoading","setIsLoading","sorter","searchKey","filter","pageable","setPageable","roles","setRoles","setTotal","setDeleteBtnIsHidden","confirmModal","setConfirmModal","confirmToggle","useEffect","parsed","queryString","parse","window","search","pageableParam","parseInt","updateTable","currentPageable","a","roleAPI","getList","res","contents","response","status","String","message","toast","error","removeCheckAction","rows","document","getElementsByClassName","checkboxs","getElementsByName","i","length","classList","remove","checked","handleOkButtonOnClick","deleteById","success","i18n","includes","exportCSVUtil","LoadingBar","Breadcrumbs","currentItem","ADMIN_ROLE_EDIT","ConfirmModal","modal","toggle","bodyContent","handleCancelButtonOnClick","newPageable","target","getElementById","add","isChecked","newSortBy","newSortType","showDetailBtn","detailRow","contains","ReactDOM","render","ADMIN_ROLE_LIST","pageableObj","query","stringify","buildUrlWithoutPagination","active","to","WELCOME","href","isModalDelete","titleOk","titleCancel","isOpen","disabled","first","previous","next","last","exportToCSV","filename","dataset","csv","join","csvFile","Blob","downloadLink","createElement","download","URL","createObjectURL","display","body","appendChild","click","downloadCSV","tableName","getAll","axiosClient","get","getById","post","JSON","putById","put","delete","getRolePermission","roleId","Object","keys"],"mappings":"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","file":"static/js/37.8b75adcd.chunk.js","sourcesContent":["export function exportHead() {\n  const head = [];\n  head.push(\"Code\");\n  head.push(\"Name\");\n  head.push(\"Available status\");\n  head.push(\"Created at\");\n  head.push(\"Updated at\");\n  return head;\n}\n\nexport function exportRow(data) {\n  const row = [];\n  row.push(data.value);\n  row.push(data.name);\n  row.push(data.isDeleted ? \"Deleted\" : \"Available\");\n  row.push(data.createdAt);\n  row.push(data.updatedAt);\n  return row;\n}\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { FaPlus } from \"react-icons/fa\";\nimport { Button } from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\n\nimport \"./PageHeader.css\";\n\nexport default function PageHeader({ headerTitle, addPageUrl }) {\n  const { t } = useTranslation();\n\n  const history = useHistory();\n\n  const handleAddOnClick = function (e) {\n    e.preventDefault();\n    history.push(addPageUrl);\n  };\n\n  return (\n    <div className=\"page-header\">\n      <div className=\"d-flex flex-wrap justify-content-between\">\n        <h1>{headerTitle.toUpperCase()}</h1>\n        <div className=\"align-self-center\">\n          <Button color=\"success\" onClick={handleAddOnClick}>\n            <FaPlus /> {t(\"admin.common.ADD\")}\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { FaDatabase, FaSync, FaTrash } from \"react-icons/fa\";\nimport { Button, Col, Row } from \"reactstrap\";\n\nimport \"./TableHeader.css\";\n\nexport default function TableHeader({\n  headerTitle,\n  deleteBtnIsHidden,\n  handleDeleteOnClick,\n  handleExportCSVOnClick,\n  handleRefreshOnClick,\n}) {\n  const { t } = useTranslation();\n\n  return (\n    <Row className=\"table-header\">\n      <Col lg={6} className=\"container\">\n        <div className=\"vertical-center\">{headerTitle}</div>\n      </Col>\n      <Col lg={6} className=\"text-right\">\n        <Button\n          color=\"light\"\n          title={t(\"admin.common.DELETE\")}\n          onClick={handleDeleteOnClick}\n          className={deleteBtnIsHidden ? \"d-none\" : \"\"}\n        >\n          <FaTrash fill=\"red\" />\n        </Button>\n        &nbsp;\n        <Button\n          color=\"light\"\n          title={t(\"admin.common.EXPORT_CSV\")}\n          onClick={handleExportCSVOnClick}\n        >\n          <FaDatabase fill=\"orange\" />\n        </Button>\n        &nbsp;\n        <Button\n          color=\"light\"\n          title={t(\"admin.common.REFRESH\")}\n          onClick={handleRefreshOnClick}\n        >\n          <FaSync fill=\"green\" />\n        </Button>\n      </Col>\n    </Row>\n  );\n}\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { FaSearch } from \"react-icons/fa\";\nimport {\n  Button,\n  Col,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  Row,\n} from \"reactstrap\";\n\nimport \"./TableTools.css\";\n\nexport default function TableTools({\n  currentLimit,\n  currentSearchKey,\n  handleLimitOnChange,\n  handleSearchOnChange,\n  handleSearchOnClick,\n}) {\n  const { t } = useTranslation();\n\n  return (\n    <Row className=\"table-tools\">\n      <Col lg={6} className=\"d-flex\">\n        <div className=\"align-self-center\">{t(\"admin.common.DISPLAY\")}</div>\n        &nbsp;\n        <div>\n          <Input\n            type=\"select\"\n            value={currentLimit}\n            onChange={handleLimitOnChange}\n          >\n            <option value={8}>8</option>\n            <option value={16}>16</option>\n            <option value={32}>32</option>\n          </Input>\n        </div>\n        &nbsp;\n        <div className=\"align-self-center\">{t(\"admin.common.ROWS\")}</div>\n      </Col>\n      <Col lg={6} className=\"text-right\">\n        <InputGroup>\n          <Input\n            type=\"text\"\n            placeholder={t(\"admin.common.SEARCH_PLACEHOLDER\")}\n            value={currentSearchKey}\n            onChange={handleSearchOnChange}\n          />\n          <InputGroupAddon addonType=\"prepend\">\n            <Button onClick={handleSearchOnClick}>\n              <FaSearch /> {t(\"admin.common.SEARCH\")}\n            </Button>\n          </InputGroupAddon>\n        </InputGroup>\n      </Col>\n    </Row>\n  );\n}\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Col, Row } from \"reactstrap\";\n\nimport \"./TableFooter.css\";\n\nimport MyPagination from \"components/user/MyPagination/MyPagination\";\n\nexport default function TableFooter({\n  currentUrl,\n  currentStartPage,\n  currentPage,\n  currentLimit,\n  currentTotal,\n}) {\n  const { t } = useTranslation();\n\n  return (\n    <Row className=\"table-footer\">\n      <Col lg={6}>\n        {t(\"admin.common.DISPLAY\")}&nbsp;\n        <b>{(currentPage - 1) * currentLimit + 1}</b>&nbsp; -&nbsp;\n        <b>\n          {currentTotal < currentPage * currentLimit\n            ? currentTotal\n            : currentPage * currentLimit}\n        </b>\n        &nbsp;\n        {t(\"admin.common.ON\")} &nbsp;\n        <b>{currentTotal}</b>&nbsp;\n        {t(\"admin.common.ITEMS\")}\n      </Col>\n      <Col lg={6} className=\"table-pagination\">\n        <MyPagination\n          url={currentUrl}\n          startPage={currentStartPage}\n          page={currentPage}\n          limit={currentLimit}\n          total={currentTotal}\n        />\n      </Col>\n    </Row>\n  );\n}\n","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {\r\n    FaAngleDoubleDown,\r\n    FaCog,\r\n    FaEdit,\r\n    FaSort,\r\n    FaSortDown,\r\n    FaSortUp,\r\n    FaUniversalAccess,\r\n} from \"react-icons/fa\";\r\nimport { Badge, Button, Col, Input, Row, Table } from \"reactstrap\";\r\nimport * as lodash from \"lodash\";\r\n\r\nimport \"./TableBody.css\";\r\nimport { useHistory } from \"react-router\";\r\nimport { RoutesString } from \"pages/routesString\";\r\nimport { formatTimestamp } from \"utils/utils\";\r\n\r\nexport default function TableBody({\r\n    titles,\r\n    detailTitles,\r\n    items,\r\n    currentSorter,\r\n    handleCheckItemOnChange,\r\n    handleCheckAllOnChange,\r\n    handleSortOnClick,\r\n    handleEditOnClick,\r\n    handleShowDetailOnClick,\r\n}) {\r\n    const { t } = useTranslation();\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <div className=\"table-body\">\r\n            <Table responsive bordered>\r\n                <thead>\r\n                    <tr>\r\n                        <th className=\"align-middle\">\r\n                            <Input\r\n                                type=\"checkbox\"\r\n                                className=\"align-checkbox\"\r\n                                id=\"check-all\"\r\n                                onChange={handleCheckAllOnChange}\r\n                            />\r\n                        </th>\r\n                        {titles &&\r\n                            titles.map((title, index) => (\r\n                                <th data-value={title.name} key={index}>\r\n                                    {title.icon}&nbsp;{title.text}\r\n                                    <div\r\n                                        className=\"pull-right\"\r\n                                        onClick={() =>\r\n                                            handleSortOnClick(title.name)\r\n                                        }\r\n                                    >\r\n                                        {title.name &&\r\n                                            currentSorter.sortBy !==\r\n                                                title.name && <FaSort />}\r\n                                        {title.name &&\r\n                                            currentSorter.sortBy ===\r\n                                                title.name &&\r\n                                            currentSorter.sortType ===\r\n                                                \"ASC\" && <FaSortUp />}\r\n                                        {title.name &&\r\n                                            currentSorter.sortBy ===\r\n                                                title.name &&\r\n                                            currentSorter.sortType ===\r\n                                                \"DESC\" && <FaSortDown />}\r\n                                    </div>\r\n                                </th>\r\n                            ))}\r\n                        <th data-value=\"options\">\r\n                            <FaCog /> {t(\"admin.common.OPTIONS\")}\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                    {items &&\r\n                        items.map((item) => {\r\n                            return (\r\n                                <>\r\n                                    <tr\r\n                                        key={`row-${item.id}`}\r\n                                        className=\"row-table\"\r\n                                        id={`row-${item.id}`}\r\n                                    >\r\n                                        <td className=\"align-middle\">\r\n                                            <Input\r\n                                                type=\"checkbox\"\r\n                                                className=\"align-checkbox\"\r\n                                                name=\"row-checkbox\"\r\n                                                id={`checkbox-${item.id}`}\r\n                                                value={item.id}\r\n                                                onChange={() =>\r\n                                                    handleCheckItemOnChange(\r\n                                                        item.id\r\n                                                    )\r\n                                                }\r\n                                            />\r\n                                        </td>\r\n                                        {titles &&\r\n                                            titles.map((title, index) => {\r\n                                                if (\r\n                                                    title.field === \"isDeleted\"\r\n                                                ) {\r\n                                                    return (\r\n                                                        <td key={index}>\r\n                                                            {item.isDeleted ? (\r\n                                                                <Badge color=\"dark\">\r\n                                                                    {t(\r\n                                                                        \"admin.common.DELETED\"\r\n                                                                    )}\r\n                                                                </Badge>\r\n                                                            ) : (\r\n                                                                <Badge color=\"light\">\r\n                                                                    {t(\r\n                                                                        \"admin.common.AVAILABLE\"\r\n                                                                    )}\r\n                                                                </Badge>\r\n                                                            )}\r\n                                                        </td>\r\n                                                    );\r\n                                                }\r\n                                                return (\r\n                                                    <td key={index}>\r\n                                                        {lodash.get(\r\n                                                            item,\r\n                                                            title.field\r\n                                                        )}\r\n                                                    </td>\r\n                                                );\r\n                                            })}\r\n                                        <td>\r\n                                            <Button\r\n                                                color=\"light\"\r\n                                                title={t(\"admin.common.EDIT\")}\r\n                                                onClick={() =>\r\n                                                    handleEditOnClick(item.id)\r\n                                                }\r\n                                            >\r\n                                                <FaEdit fill=\"blue\" />\r\n                                            </Button>\r\n                                            &nbsp;\r\n                                            <Button\r\n                                                color=\"light\"\r\n                                                title={t(\r\n                                                    \"admin.common.SHOW_DETAIL\"\r\n                                                )}\r\n                                                id={`show-detail-${item.id}`}\r\n                                                onClick={() =>\r\n                                                    handleShowDetailOnClick(\r\n                                                        item.id\r\n                                                    )\r\n                                                }\r\n                                            >\r\n                                                <FaAngleDoubleDown fill=\"green\" />\r\n                                            </Button>\r\n                                            <Button\r\n                                                color=\"light\"\r\n                                                title={t(\r\n                                                    \"admin.common.PERMISSION_DETAIL\"\r\n                                                )}\r\n                                                id={`show-detail-${item.id}`}\r\n                                                style={{ marginLeft: \"10px\" }}\r\n                                                onClick={() =>\r\n                                                    history.push(\r\n                                                        RoutesString.ADMIN_ROLE_PERMISSION.replace(\r\n                                                            \":roleId\",\r\n                                                            item.id\r\n                                                        )\r\n                                                    )\r\n                                                }\r\n                                            >\r\n                                                <FaUniversalAccess fill=\"\" />\r\n                                            </Button>\r\n                                        </td>\r\n                                    </tr>\r\n\r\n                                    <tr\r\n                                        key={`detail-row-${item.id}`}\r\n                                        className=\"detail-row d-none\"\r\n                                        id={`detail-row-${item.id}`}\r\n                                    >\r\n                                        <td colSpan={1000}>\r\n                                            <Row className=\"table-detail\">\r\n                                                <Col lg={12}>\r\n                                                    {detailTitles &&\r\n                                                        detailTitles.map(\r\n                                                            (\r\n                                                                detailTitle,\r\n                                                                index\r\n                                                            ) => {\r\n                                                                if (\r\n                                                                    detailTitle.field ===\r\n                                                                    \"isDeleted\"\r\n                                                                ) {\r\n                                                                    return (\r\n                                                                        <Row\r\n                                                                            key={\r\n                                                                                index\r\n                                                                            }\r\n                                                                        >\r\n                                                                            <Col\r\n                                                                                lg={\r\n                                                                                    4\r\n                                                                                }\r\n                                                                                className=\"info-name\"\r\n                                                                            >\r\n                                                                                {t(\r\n                                                                                    \"admin.common.AVAILABLE_STATUS\"\r\n                                                                                )}\r\n                                                                            </Col>\r\n                                                                            <Col\r\n                                                                                lg={\r\n                                                                                    8\r\n                                                                                }\r\n                                                                                className=\"info-value\"\r\n                                                                            >\r\n                                                                                <span>\r\n                                                                                    {item.isDeleted ? (\r\n                                                                                        <Badge color=\"dark\">\r\n                                                                                            {t(\r\n                                                                                                \"admin.common.DELETED\"\r\n                                                                                            )}\r\n                                                                                        </Badge>\r\n                                                                                    ) : (\r\n                                                                                        <Badge color=\"light\">\r\n                                                                                            {t(\r\n                                                                                                \"admin.common.AVAILABLE\"\r\n                                                                                            )}\r\n                                                                                        </Badge>\r\n                                                                                    )}\r\n                                                                                </span>\r\n                                                                            </Col>\r\n                                                                        </Row>\r\n                                                                    );\r\n                                                                }\r\n                                                                return (\r\n                                                                    <Row\r\n                                                                        key={\r\n                                                                            index\r\n                                                                        }\r\n                                                                    >\r\n                                                                        <Col\r\n                                                                            lg={\r\n                                                                                4\r\n                                                                            }\r\n                                                                            className=\"info-name\"\r\n                                                                        >\r\n                                                                            {\r\n                                                                                detailTitle.text\r\n                                                                            }\r\n                                                                        </Col>\r\n                                                                        <Col\r\n                                                                            lg={\r\n                                                                                8\r\n                                                                            }\r\n                                                                            className=\"info-value\"\r\n                                                                        >\r\n                                                                            <span>\r\n                                                                                {detailTitle?.isDate ? formatTimestamp(lodash.get(\r\n                                                                                    item,\r\n                                                                                    detailTitle.field\r\n                                                                                )) :  lodash.get(\r\n                                                                                    item,\r\n                                                                                    detailTitle.field\r\n                                                                                )}\r\n                                                                            </span>\r\n                                                                        </Col>\r\n                                                                    </Row>\r\n                                                                );\r\n                                                            }\r\n                                                        )}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </td>\r\n                                    </tr>\r\n                                </>\r\n                            );\r\n                        })}\r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {\r\n    FaAngleDoubleDown,\r\n    FaAngleDoubleUp,\r\n    FaCode,\r\n    FaRemoveFormat,\r\n    FaTextWidth,\r\n} from \"react-icons/fa\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\nimport queryString from \"query-string\";\r\n\r\nimport \"./RoleList.css\";\r\n\r\nimport { RoutesString } from \"pages/routesString\";\r\nimport { exportHead, exportRow } from \"./services/export-csv\";\r\nimport exportCSVUtil from \"utils/export-csv\";\r\nimport roleAPI from \"api/common/role\";\r\nimport Breadcrumbs from \"components/admin/Breadcrumbs/Breadcrumbs\";\r\nimport LoadingBar from \"components/common/LoadingBar/LoadingBar\";\r\nimport ConfirmModal from \"components/admin/ConfirmModal/ConfirmModal\";\r\nimport PageHeader from \"./components/PageHeader/PageHeader\";\r\nimport TableFilter from \"./components/TableFilter/TableFilter\";\r\nimport TableHeader from \"./components/TableHeader/TableHeader\";\r\nimport TableTools from \"./components/TableTools/TableTools\";\r\nimport TableFooter from \"./components/TableFooter/TableFooter\";\r\nimport TableBody from \"./components/TableBody/TableBody\";\r\nimport i18n from \"i18n/i18n\";\r\n\r\nexport default function RoleList() {\r\n    const { t } = useTranslation();\r\n\r\n    const history = useHistory();\r\n\r\n    const location = useLocation();\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [pageable, setPageable] = useState({\r\n        startPage: 1,\r\n        page: 1,\r\n        limit: 8,\r\n        sorter: {\r\n            sortBy: null,\r\n            sortType: null,\r\n        },\r\n        searchKey: \"\",\r\n        filter: {\r\n            isDeleted: null,\r\n        },\r\n    });\r\n    const titles = [\r\n        {\r\n            field: \"value\",\r\n            name: \"value\",\r\n            text: t(\"admin.role_list.NAME\"),\r\n            icon: <FaCode />,\r\n        },\r\n        {\r\n            field: \"name\",\r\n            name: \"name\",\r\n            text: t(\"admin.role_list.CODE\"),\r\n            icon: <FaTextWidth />,\r\n        },\r\n    ];\r\n    const detailTitles = [\r\n        {\r\n            field: \"value\",\r\n            text: t(\"admin.role_list.NAME\"),\r\n        },\r\n        {\r\n            field: \"name\",\r\n            text: t(\"admin.role_list.CODE\"),\r\n        },\r\n        {\r\n            field: \"createdAt\",\r\n            text: t(\"admin.common.CREATED_AT\"),\r\n            isDate: true\r\n        },\r\n        {\r\n            field: \"updatedAt\",\r\n            text: t(\"admin.common.UPDATED_AT\"),\r\n            isDate: true\r\n        },\r\n    ];\r\n    const [roles, setRoles] = useState([]);\r\n    const [total, setTotal] = useState(0);\r\n    const [deleteBtnIsHidden, setDeleteBtnIsHidden] = useState(true);\r\n    const [confirmModal, setConfirmModal] = useState(false);\r\n    const confirmToggle = function () {\r\n        setConfirmModal(!confirmModal);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const parsed = queryString.parse(window.location.search);\r\n        const pageableParam = {\r\n            startPage: parsed.startPage\r\n                ? parseInt(parsed.startPage)\r\n                : pageable.startPage,\r\n            page: parsed.page ? parseInt(parsed.page) : pageable.page,\r\n            limit: parsed.limit ? parseInt(parsed.limit) : pageable.limit,\r\n            sorter: {\r\n                sortBy: parsed.sortBy ? parsed.sortBy : pageable.sorter.sortBy,\r\n                sortType: parsed.sortType\r\n                    ? parsed.sortType\r\n                    : pageable.sorter.sortType,\r\n            },\r\n            searchKey: parsed.searchKey ? parsed.searchKey : pageable.searchKey,\r\n            filter: {\r\n                isDeleted: parsed.isDeleted\r\n                    ? parsed.isDeleted === \"true\"\r\n                    : pageable.filter.isDeleted,\r\n            },\r\n        };\r\n        setPageable(pageableParam);\r\n\r\n        updateTable(pageableParam);\r\n    }, [location]);\r\n\r\n    const updateTable = async function (currentPageable) {\r\n        setIsLoading(true);\r\n        try {\r\n            const res = await roleAPI.getList(currentPageable);\r\n            setRoles(res.contents);\r\n            setTotal(res.total);\r\n        } catch (err) {\r\n            if (err.response) {\r\n                if (err?.response?.status === 403 || String(err?.response?.message) === 'NOT_OWNER') {\r\n                    toast.error(t(\"RESPONSE_MESSAGE403\"));\r\n                  }\r\n                else if (err?.response?.status === 401) {\r\n                    toast.error(t(\"RESPONSE_MESSAGE401\"));\r\n                } else if (err?.response?.status === 400) {\r\n                    toast.error(t(\"RESPONSE_MESSAGE400\"));\r\n                } else if (err?.response?.status === 409) {\r\n                    toast.error(t(\"RESPONSE_MESSAGE409\"));\r\n                } else if (err?.response?.status === 404) {\r\n                    toast.error(t(\"RESPONSE_MESSAGE404\"));\r\n                } else {\r\n                    toast.error(t(\"RESPONSE_MESSAGE500\"));\r\n                }\r\n            }\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    const buildUrlWithoutPagination = function (pageable) {\r\n        const url = RoutesString.ADMIN_ROLE_LIST;\r\n        const pageableObj = {\r\n            sortBy: pageable.sorter.sortBy,\r\n            sortType: pageable.sorter.sortType,\r\n            searchKey: pageable.searchKey,\r\n            isDeleted: pageable.filter.isDeleted,\r\n        };\r\n        const query = queryString.stringify(pageableObj);\r\n\r\n        return `${url}?${query}&`;\r\n    };\r\n\r\n    const removeCheckAction = function () {\r\n        const rows = document.getElementsByClassName(\"row-table\");\r\n        const checkboxs = document.getElementsByName(\"row-checkbox\");\r\n        setDeleteBtnIsHidden(true);\r\n        for (let i = 0; i < rows.length; i++) {\r\n            rows[i].classList.remove(\"selected-row\");\r\n            checkboxs[i].checked = false;\r\n        }\r\n    };\r\n\r\n    const handleIsDeletedFilterOnChange = function (e) {\r\n        const newPageable = {\r\n            ...pageable,\r\n            startPage: 1,\r\n            page: 1,\r\n            filter: {\r\n                ...pageable.filter,\r\n                isDeleted:\r\n                    parseInt(e.target.value) === -1 ? null : e.target.value,\r\n            },\r\n        };\r\n        setPageable(newPageable);\r\n    };\r\n\r\n    const handleFilterOnClick = function () {\r\n        removeCheckAction();\r\n        updateTable(pageable);\r\n    };\r\n\r\n    const handleDeleteOnClick = function (e) {\r\n        e.preventDefault();\r\n        confirmToggle();\r\n    };\r\n\r\n    const handleOkButtonOnClick = async function (e) {\r\n        e.preventDefault();\r\n        const checkboxs = document.getElementsByName(\"row-checkbox\");\r\n        for (let i = 0; i < checkboxs.length; i++) {\r\n            if (checkboxs[i].checked) {\r\n                try {\r\n                    setIsLoading(true);\r\n                    const res = await roleAPI.deleteById(checkboxs[i].value);\r\n                    updateTable(pageable);\r\n                    toast.success(i18n.t(\"admin.common.DELETED\"));\r\n                } catch (err) {\r\n                    confirmToggle();\r\n                    if (err.response) {\r\n                        if (err?.response?.status === 403 || String(err?.response?.message) === 'NOT_OWNER') {\r\n                            toast.error(t(\"RESPONSE_MESSAGE403\"));\r\n                          }\r\n                        else if (err?.response?.status === 401) {\r\n                            toast.error(t(\"RESPONSE_MESSAGE401\"));\r\n                        } else if (err?.response?.status === 400) {\r\n                            toast.error(t(\"DELETE_ERROR\") + \": \" + t(\"RESPONSE_MESSAGE400\"));\r\n                        } else if (err?.response?.status === 409) {\r\n                            toast.error(t(\"DELETE_ERROR\") + \": \" + t(\"RESPONSE_MESSAGE409\"));\r\n                        } else if (err?.response?.status === 404) {\r\n                            toast.error(t(\"DELETE_ERROR\") + \": \" + t(\"RESPONSE_MESSAGE404\"));\r\n                        } else {\r\n                            if (String(err?.response?.data?.error)?.includes(\"ID_NOT_FOUND\")) {\r\n                                toast.error(t(\"RESPONSE_MESSAGE404\"));\r\n                            } else {\r\n                                toast.error(t(\"DELETE_ERROR\") + \": \" + t(\"RESPONSE_MESSAGE500\"));\r\n                            }\r\n                        }\r\n                    }\r\n                } finally {\r\n                    setIsLoading(false);\r\n                }\r\n            }\r\n        }\r\n        confirmToggle();\r\n        removeCheckAction();\r\n    };\r\n\r\n    const handleCancelButtonOnClick = function (e) {\r\n        e.preventDefault();\r\n        confirmToggle();\r\n    };\r\n\r\n    const handleExportCSVOnClick = async function () {\r\n        setIsLoading(true);\r\n        try {\r\n            const currentPageable = {\r\n                ...pageable,\r\n                page: 1,\r\n                limit: null,\r\n            };\r\n            const res = await roleAPI.getList(currentPageable);\r\n            const filename = \"Untitle.csv\";\r\n            exportCSVUtil(filename, res.contents, exportHead, exportRow);\r\n        } catch (err) {\r\n            toast.error(t(\"RESPONSE_MESSAGE500\"));\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleRefreshOnClick = function () {\r\n        removeCheckAction();\r\n        const newPageable = {\r\n            startPage: 1,\r\n            page: 1,\r\n            limit: 8,\r\n            sorter: {\r\n                sortBy: null,\r\n                sortType: null,\r\n            },\r\n            searchKey: \"\",\r\n            filter: {\r\n                isDeleted: null,\r\n            },\r\n        };\r\n        setPageable(newPageable);\r\n        updateTable(newPageable);\r\n    };\r\n\r\n    const handleLimitOnChange = function (e) {\r\n        removeCheckAction();\r\n        const newPageable = {\r\n            ...pageable,\r\n            startPage: 1,\r\n            page: 1,\r\n            limit: e.target.value,\r\n        };\r\n        setPageable(newPageable);\r\n        updateTable(newPageable);\r\n    };\r\n\r\n    const handleSearchOnChange = function (e) {\r\n        setPageable({ ...pageable, searchKey: e.target.value });\r\n    };\r\n\r\n    const handleSearchOnClick = function (e) {\r\n        if (pageable.searchKey) {\r\n            removeCheckAction();\r\n            const newPageable = {\r\n                ...pageable,\r\n                startPage: 1,\r\n                page: 1,\r\n            };\r\n            setPageable(newPageable);\r\n            updateTable(newPageable);\r\n        }\r\n    };\r\n\r\n    const handleSortOnClick = function (newSortBy) {\r\n        removeCheckAction();\r\n        let newSortType = \"ASC\";\r\n        if (newSortBy === pageable.sorter.sortBy) {\r\n            if (pageable.sorter.sortType === \"ASC\") {\r\n                newSortType = \"DESC\";\r\n            }\r\n        }\r\n        const newPageable = {\r\n            ...pageable,\r\n            startPage: 1,\r\n            page: 1,\r\n            sorter: {\r\n                sortBy: newSortBy,\r\n                sortType: newSortType,\r\n            },\r\n        };\r\n        setPageable(newPageable);\r\n        updateTable(newPageable);\r\n    };\r\n\r\n    const handleCheckItemOnChange = function (id) {\r\n        const row = document.getElementById(\"row-\" + id);\r\n        const checkbox = document.getElementById(\"checkbox-\" + id);\r\n        if (checkbox.checked) {\r\n            setDeleteBtnIsHidden(false);\r\n            row.classList.add(\"selected-row\");\r\n        } else {\r\n            const checkAll = document.getElementById(\"check-all\");\r\n            checkAll.checked = false;\r\n            row.classList.remove(\"selected-row\");\r\n\r\n            let isChecked = false;\r\n            const checkboxs = document.getElementsByName(\"row-checkbox\");\r\n            for (let i = 0; i < checkboxs.length; i++) {\r\n                if (checkboxs[i].checked) {\r\n                    isChecked = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (!isChecked) {\r\n                setDeleteBtnIsHidden(true);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleCheckAllOnChange = function (e) {\r\n        const rows = document.getElementsByClassName(\"row-table\");\r\n        const checkboxs = document.getElementsByName(\"row-checkbox\");\r\n        if (e.target.checked) {\r\n            setDeleteBtnIsHidden(false);\r\n            for (let i = 0; i < rows.length; i++) {\r\n                rows[i].classList.add(\"selected-row\");\r\n                checkboxs[i].checked = true;\r\n            }\r\n        } else {\r\n            setDeleteBtnIsHidden(true);\r\n            for (let i = 0; i < rows.length; i++) {\r\n                rows[i].classList.remove(\"selected-row\");\r\n                checkboxs[i].checked = false;\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleEditOnClick = function (id) {\r\n        history.push(`${RoutesString.ADMIN_ROLE_EDIT}?id=${id}`);\r\n    };\r\n\r\n    const handleShowDetailOnClick = function (id) {\r\n        const showDetailBtn = document.getElementById(\"show-detail-\" + id);\r\n        const detailRow = document.getElementById(\"detail-row-\" + id);\r\n\r\n        if (detailRow.classList.contains(\"d-none\")) {\r\n            detailRow.classList.remove(\"d-none\");\r\n            ReactDOM.render(<FaAngleDoubleUp fill=\"green\" />, showDetailBtn);\r\n        } else {\r\n            detailRow.classList.add(\"d-none\");\r\n            ReactDOM.render(<FaAngleDoubleDown fill=\"green\" />, showDetailBtn);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"page\">\r\n            {isLoading && <LoadingBar />}\r\n\r\n            <Breadcrumbs currentItem={t(\"admin.role_list.ROLE_LIST\")} />\r\n\r\n            <PageHeader\r\n                headerTitle={t(\"admin.role_list.ROLE_LIST\")}\r\n                addPageUrl={RoutesString.ADMIN_ROLE_EDIT}\r\n            />\r\n\r\n            <ConfirmModal\r\n                modal={confirmModal}\r\n                toggle={confirmToggle}\r\n                headerTitle={t(\"admin.common.DELETE_CONFIRM_HEADER\")}\r\n                bodyContent={t(\"admin.common.DELETE_CONFIRM_BODY\")}\r\n                handleOkButtonOnClick={handleOkButtonOnClick}\r\n                handleCancelButtonOnClick={handleCancelButtonOnClick}\r\n            />\r\n\r\n            <TableHeader\r\n                headerTitle={t(\"admin.role_list.ROLE_TABLE\")}\r\n                deleteBtnIsHidden={deleteBtnIsHidden}\r\n                handleDeleteOnClick={handleDeleteOnClick}\r\n                handleExportCSVOnClick={handleExportCSVOnClick}\r\n                handleRefreshOnClick={handleRefreshOnClick}\r\n            />\r\n\r\n            <TableTools\r\n                currentLimit={pageable.limit}\r\n                currentSearchKey={pageable.searchKey}\r\n                handleLimitOnChange={handleLimitOnChange}\r\n                handleSearchOnChange={handleSearchOnChange}\r\n                handleSearchOnClick={handleSearchOnClick}\r\n            />\r\n\r\n            <TableBody\r\n                titles={titles}\r\n                detailTitles={detailTitles}\r\n                items={roles}\r\n                currentSorter={pageable.sorter}\r\n                handleCheckItemOnChange={handleCheckItemOnChange}\r\n                handleCheckAllOnChange={handleCheckAllOnChange}\r\n                handleSortOnClick={handleSortOnClick}\r\n                handleEditOnClick={handleEditOnClick}\r\n                handleShowDetailOnClick={handleShowDetailOnClick}\r\n            />\r\n\r\n            <TableFooter\r\n                currentUrl={buildUrlWithoutPagination(pageable)}\r\n                currentStartPage={pageable.startPage}\r\n                currentPage={pageable.page}\r\n                currentLimit={pageable.limit}\r\n                currentTotal={total}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { FaHome } from \"react-icons/fa\";\n\nimport { RoutesString } from \"pages/routesString\";\n\nexport default function Breadcrumbs({ items, currentItem }) {\n  return (\n    <Breadcrumb>\n      <BreadcrumbItem active={!currentItem}>\n        <Link to={RoutesString.WELCOME}>\n          <FaHome />\n        </Link>\n      </BreadcrumbItem>\n      {items &&\n        items.map(({ href, title }) => {\n          return (\n            <BreadcrumbItem>\n              <Link to={href}>{title}</Link>\n            </BreadcrumbItem>\n          );\n        })}\n      {currentItem && <BreadcrumbItem active>{currentItem}</BreadcrumbItem>}\n    </Breadcrumb>\n  );\n}\n","import React from \"react\";\r\nimport { Button, Modal, ModalFooter, ModalHeader, ModalBody, Input } from \"reactstrap\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nexport default function ConfirmModal({\r\n    modal,\r\n    toggle,\r\n    headerTitle,\r\n    bodyContent,\r\n    handleOkButtonOnClick,\r\n    handleCancelButtonOnClick,\r\n    isModalDelete = false,\r\n    titleOk = \"\",\r\n    titleCancel = \"\",\r\n}) {\r\n    const { t } = useTranslation();\r\n\r\n    return (\r\n        <Modal isOpen={modal} toggle={toggle}>\r\n            <ModalHeader toggle={toggle}>{headerTitle}</ModalHeader>\r\n            <ModalBody>{bodyContent}</ModalBody>\r\n            <ModalFooter>\r\n                <Button\r\n                    color={`${isModalDelete ? \"danger\" : \"primary\"}`}\r\n                    onClick={handleOkButtonOnClick}\r\n                >\r\n                    {t(titleOk || \"admin.common.OK\")}\r\n                </Button>\r\n                <Button color=\"warning\" onClick={handleCancelButtonOnClick}>\r\n                    {t(titleCancel || \"admin.common.CANCEL\")}\r\n                </Button>\r\n            </ModalFooter>\r\n        </Modal>\r\n    );\r\n}\r\n\r\n\r\nexport function InputModal({\r\n    modal,\r\n    toggle,\r\n    headerTitle,\r\n    handleOkButtonOnClick,\r\n    handleCancelButtonOnClick,\r\n    isModalDelete = false,\r\n    titleOk = \"\",\r\n    titleCancel = \"\",\r\n}) {\r\n    const { t } = useTranslation();\r\n    const [text, setText] = useState('');\r\n\r\n    return (\r\n        <Modal isOpen={modal} toggle={toggle}>\r\n            <ModalHeader toggle={toggle}>{headerTitle}</ModalHeader>\r\n            <ModalBody>\r\n                <Input value={text} onChange={e => setText(e?.target?.value)}/>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n                <Button\r\n                    color={`${isModalDelete ? \"danger\" : \"primary\"}`}\r\n                    onClick={() => handleOkButtonOnClick(text)}\r\n                >\r\n                    {t(titleOk || \"admin.common.OK\")}\r\n                </Button>\r\n                <Button color=\"warning\" onClick={handleCancelButtonOnClick}>\r\n                    {t(titleCancel || \"admin.common.CANCEL\")}\r\n                </Button>\r\n            </ModalFooter>\r\n        </Modal>\r\n    );\r\n}","import React from \"react\";\nimport { Pagination, PaginationItem, PaginationLink } from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\n\nimport \"./MyPagination.css\";\n\nexport default function MyPagination({ url, startPage, page, limit, total }) {\n  const history = useHistory();\n\n  return (\n    <Pagination>\n      <PaginationItem disabled={page === 1}>\n        <PaginationLink\n          first\n          onClick={() => {\n            history.push(`${url}startPage=1&page=1&limit=${limit}`);\n          }}\n        />\n      </PaginationItem>\n      <PaginationItem disabled={page === 1}>\n        <PaginationLink\n          previous\n          onClick={() => {\n            history.push(\n              `${url}startPage=${\n                page <= startPage ? startPage - 1 : startPage\n              }&page=${page - 1}&limit=${limit}`\n            );\n          }}\n        />\n      </PaginationItem>\n      <PaginationItem active={page === startPage} disabled={total <= 0}>\n        <PaginationLink\n          onClick={() => {\n            history.push(\n              `${url}startPage=${startPage}&page=${startPage}&limit=${limit}`\n            );\n          }}\n        >\n          {startPage}\n        </PaginationLink>\n      </PaginationItem>\n      <PaginationItem\n        active={page === startPage + 1}\n        disabled={(startPage + 1) * limit - total >= limit}\n      >\n        <PaginationLink\n          onClick={() => {\n            history.push(\n              `${url}startPage=${startPage}&page=${\n                startPage + 1\n              }&limit=${limit}`\n            );\n          }}\n        >\n          {startPage + 1}\n        </PaginationLink>\n      </PaginationItem>\n      <PaginationItem\n        active={page === startPage + 2}\n        disabled={(startPage + 2) * limit - total >= limit}\n      >\n        <PaginationLink\n          onClick={() => {\n            history.push(\n              `${url}startPage=${startPage}&page=${\n                startPage + 2\n              }&limit=${limit}`\n            );\n          }}\n        >\n          {startPage + 2}\n        </PaginationLink>\n      </PaginationItem>\n      <PaginationItem disabled={(page + 1) * limit - total >= limit}>\n        <PaginationLink\n          next\n          onClick={() => {\n            history.push(\n              `${url}startPage=${\n                page >= startPage + 2 ? startPage + 1 : startPage\n              }&page=${page + 1}&limit=${limit}`\n            );\n          }}\n        />\n      </PaginationItem>\n      <PaginationItem disabled={(page + 1) * limit - total >= limit}>\n        <PaginationLink\n          last\n          onClick={() => {\n            history.push(\n              `${url}startPage=${\n                parseInt(total / limit) + (total % limit === 0 ? 0 : 1)\n              }&page=${\n                parseInt(total / limit) + (total % limit === 0 ? 0 : 1)\n              }&limit=${limit}`\n            );\n          }}\n        />\n      </PaginationItem>\n    </Pagination>\n  );\n}\n","const downloadCSV = function (csv, filename) {\n  // CSV file\n  const csvFile = new Blob([csv], { type: \"text/csv\" });\n\n  // Download link\n  const downloadLink = document.createElement(\"a\");\n\n  // File name\n  downloadLink.download = filename;\n\n  // Create a link to the file\n  downloadLink.href = window.URL.createObjectURL(csvFile);\n\n  // Hide download link\n  downloadLink.style.display = \"none\";\n\n  // Add the link to DOM\n  document.body.appendChild(downloadLink);\n\n  // Click download link\n  downloadLink.click();\n};\n\nexport default function exportToCSV(filename, dataset, exportHead, exportRow) {\n  const csv = [];\n\n  let row = exportHead();\n  csv.push(row.join(\",\"));\n  for (let i = 0; i < dataset.length; i++) {\n    row = exportRow(dataset[i]);\n    csv.push(row.join(\",\"));\n  }\n\n  // Download CSV file\n  downloadCSV(csv.join(\"\\n\"), filename);\n}\n","import axiosClient from \"./axiosClient\";\r\nimport queryString from \"query-string\";\r\n\r\nconst tableName = \"roles\";\r\nexport default {\r\n    getAll: function (filter = {}) {\r\n        const query = queryString.stringify({limit:-1,page:0, ...filter });\r\n        const url = `${tableName}?${query}`;\r\n        return axiosClient.get(url);\r\n    },\r\n    getList: function (pageable) {\r\n        let url = `${tableName}?page=${pageable.page - 1}`;\r\n        if (pageable.limit) {\r\n            url += `&limit=${pageable.limit}`;\r\n        }\r\n        if (pageable.sorter.sortBy && pageable.sorter.sortType) {\r\n            url += `&sortBy=${pageable.sorter.sortBy}&sortType=${pageable.sorter.sortType}`;\r\n        }\r\n        if (pageable.searchKey) {\r\n            url += `&search=${pageable.searchKey}`;\r\n        }\r\n        if (pageable.filter.isDeleted !== null) {\r\n            url += `&isDeleted=${pageable.filter.isDeleted}`;\r\n        }\r\n        return axiosClient.get(url);\r\n    },\r\n    getById: function (id) {\r\n        const url = `${tableName}/${id}`;\r\n        return axiosClient.get(url);\r\n    },\r\n    post: function (body) {\r\n        const url = `${tableName}`;\r\n        return axiosClient.post(url, JSON.stringify(body));\r\n    },\r\n    putById: function (id, body) {\r\n        const url = `${tableName}/${id}`;\r\n        return axiosClient.put(url, JSON.stringify(body));\r\n    },\r\n    deleteById: function (id) {\r\n        const url = `${tableName}/${id}`;\r\n        return axiosClient.delete(url);\r\n    },\r\n    getRolePermission: async (roleId, filter = {}) => {\r\n        let url = `/resources/permission/${roleId}`;\r\n        if (Object.keys(filter).length) {\r\n            const query = queryString.stringify({ ...filter });\r\n            url += `?${query}`;\r\n        }\r\n        return await axiosClient.get(url);\r\n    },\r\n};\r\n"],"sourceRoot":""}