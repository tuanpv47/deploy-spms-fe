{"version":3,"sources":["views/common/ChiTietNganhDaoTao/ViewChiTietNganhDaoTao.js","components/common/TableBasic/TableBasic.js","components/ViewFilePdf/ViewFilePdf.js","stores/admin/CTNganhDaoTaoStore/CTNganhDaoTaoStore.js"],"names":["ViewChiTietNganhDaoTao","props","useState","isLoading","setIsLoading","useChiTietNganhDaoTao","stateChiTietNganhDaoTao","actionChiTietNganhDaoTao","idChiTietNganhDaoTao","setIdChiTietNganhDaoTao","khoaTuyen","setKhoaTuyen","isOpenPreviewPdf","setIsOpenPreviewPdf","toggle","useEffect","a","getChiTietNganhDaoTao","limit","titleList","title","field","i18n","t","actionTitle","handle","item","nganhDaoTao","id","khoa","className","data","size","isOpen","url","CONFIG","API","EXPORT_PDF","queryString","stringify","TableBasic","bordered","map","index","scope","titleItem","lodash","color","onClick","ViewFilePdf","scrollModePluginInstance","scrollModePlugin","zoomPluginInstance","zoomPlugin","CurrentScale","ZoomInButton","ZoomOutButton","getFilePluginInstance","getFilePlugin","fileNameGenerator","file","name","DownloadButton","style","border","display","flexDirection","height","alignItems","backgroundColor","borderBottom","padding","marginLeft","workerUrl","fileUrl","renderError","justifyContent","borderRadius","plugins","require","createStore","createHook","initialState","total","page","isError","message","actions","filter","setState","query","axiosClient","get","CHITIETNGANHDAOTAO","results","contents","response","toast","error","getChiTietNganhDaoTaoID","param"],"mappings":"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","file":"static/js/48.5e0cda17.chunk.js","sourcesContent":["import Loading from \"components/common/loading/Loading\";\r\nimport TableBasic from \"components/common/TableBasic/TableBasic\";\r\nimport ViewFilePdf from \"components/ViewFilePdf/ViewFilePdf\";\r\nimport i18n from \"i18n/i18n\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport useChiTietNganhDaoTao from \"stores/admin/CTNganhDaoTaoStore/CTNganhDaoTaoStore\";\r\nimport { Modal, ModalHeader } from \"reactstrap\";\r\nimport queryString from \"query-string\";\r\nimport CONFIG from \"config/config\";\r\nimport \"./ViewChiTietNganhDaoTao.css\";\r\n\r\nconst ViewChiTietNganhDaoTao = (props) => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [\r\n        stateChiTietNganhDaoTao,\r\n        actionChiTietNganhDaoTao,\r\n    ] = useChiTietNganhDaoTao();\r\n    const [idChiTietNganhDaoTao, setIdChiTietNganhDaoTao] = useState(null);\r\n    const [khoaTuyen, setKhoaTuyen] = useState(null);\r\n    const [isOpenPreviewPdf, setIsOpenPreviewPdf] = useState(false);\r\n    const [isOpenEditor, setIsOpenEditor] = useState(false);\r\n\r\n    const toggle = () => setIsOpenPreviewPdf(!isOpenPreviewPdf);\r\n    useEffect(() => {\r\n        (async () => {\r\n            setIsLoading(true);\r\n            await actionChiTietNganhDaoTao.getChiTietNganhDaoTao({\r\n                limit: 10000,\r\n            });\r\n            setIsLoading(false);\r\n        })();\r\n    }, []);\r\n    const titleList = [\r\n        { title: \"ID\", field: \"id\" },\r\n        { title: i18n.t(\"MAJORS_CODE\"), field: \"nganhDaoTao.maNganhDaoTao\" },\r\n        { title: i18n.t(\"MAJORS\"), field: \"nganhDaoTao.ten\" },\r\n        { title: i18n.t(\"SCHOOL_YEAR\"), field: \"khoa\" },\r\n        {\r\n            title: i18n.t(\"PROGRAM_NAME\"),\r\n            field: \"nganhDaoTao.chuongTrinhDaoTao.ten\",\r\n        },\r\n        {\r\n            title: \"Action\",\r\n            actionTitle: \"Preview Pdf\",\r\n            handle: (item) => {\r\n                setIdChiTietNganhDaoTao(item?.nganhDaoTao?.id);\r\n                setKhoaTuyen(item?.khoa);\r\n                setIsOpenPreviewPdf(true);\r\n            },\r\n        },\r\n        // {\r\n        //     title: \"Action#2\",\r\n        //     actionTitle: \"Edit Pdf - Mode: html\",\r\n        //     handle: (item) => {\r\n        //         history.push(\r\n        //             RoutesString.ADMIN_CHUONG_TRINH_DAO_TAO_HTML_MODE.replace(\r\n        //                 \":id\",\r\n        //                 item?.nganhDaoTao?.id\r\n        //             ).replace(\":khoa\", item?.khoa)\r\n        //         );\r\n        //     },\r\n        // },\r\n        // {\r\n        //     title: \"Action#3\",\r\n        //     actionTitle: \"Edit Pdf - Mode: UI\",\r\n        //     handle: (item) => {\r\n        //         history.push(\r\n        //             RoutesString.ADMIN_CTDT_EDITOR_MODE_UI.replace(\r\n        //                 \":id\",\r\n        //                 item?.nganhDaoTao?.id\r\n        //             ).replace(\":khoa\", item?.khoa)\r\n        //         );\r\n        //     },\r\n        // },\r\n    ];\r\n\r\n    return (\r\n        <div className=\"viewchitietnganhdaotao__wrapper\">\r\n            <div className=\"viewchitietnganhdaotao__body\">\r\n                <div className=\"viewchitietnganhdaotao__top\">\r\n                    <h4>{i18n.t(\"LIST_MAJOR_DETAIL\")}</h4>\r\n                </div>\r\n                <div className=\"viewchitietnganhdaotao__content\">\r\n                    {isLoading ? (\r\n                        <div className=\"loading\">\r\n                            <Loading />\r\n                        </div>\r\n                    ) : (\r\n                        <TableBasic\r\n                            titleList={titleList}\r\n                            data={stateChiTietNganhDaoTao?.data}\r\n                        />\r\n                    )}\r\n                </div>\r\n                <div className=\"viewchitietnganhdaotao__view-pdf\">\r\n                    <Modal\r\n                        className=\"overlay-pdf\"\r\n                        size=\"lg\"\r\n                        isOpen={isOpenPreviewPdf}\r\n                        toggle={toggle}\r\n                    >\r\n                        <ModalHeader toggle={toggle}>PDF</ModalHeader>\r\n                        <ViewFilePdf\r\n                            url={`${\r\n                                CONFIG.API.EXPORT_PDF\r\n                            }?${queryString.stringify({\r\n                                nganhDaoTao: idChiTietNganhDaoTao,\r\n                                khoa: khoaTuyen,\r\n                            })}`}\r\n                        />\r\n                    </Modal>\r\n                </div>\r\n                {/* <div className=\"viewchitietnganhdaotao__view-pdf\">\r\n                    <Modal\r\n                        className=\"overlay-pdf\"\r\n                        size=\"lg\"\r\n                        isOpen={isOpenEditor}\r\n                        toggle={() => setIsOpenEditor(!isOpenEditor)}\r\n                    >\r\n                        <ModalHeader\r\n                            toggle={() => setIsOpenEditor(!isOpenEditor)}\r\n                        >\r\n                            Editor\r\n                        </ModalHeader>\r\n                        <ViewModeHtml\r\n                            nganhDaoTao={idChiTietNganhDaoTao}\r\n                            khoa={khoaTuyen}\r\n                        />\r\n                    </Modal>\r\n                </div> */}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ViewChiTietNganhDaoTao;\r\n","import React from \"react\";\r\nimport { Table, Button } from \"reactstrap\";\r\nimport * as lodash from \"lodash\";\r\nimport i18n from \"i18n/i18n\";\r\n\r\nconst TableBasic = ({ titleList = [], data = [], actionTitle = \"\" }) => {\r\n    return (\r\n        <div>\r\n            <Table bordered>\r\n                <thead>\r\n                    <tr>\r\n                        <th>STT</th>\r\n                        {titleList?.map((item, index) => (\r\n                            <th key={index}>{item?.title}</th>\r\n                        ))}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {data?.map((item, index) => (\r\n                        <tr key={index}>\r\n                            <th scope=\"row\">{index}</th>\r\n                            {titleList?.map((titleItem) => (\r\n                                <td key={`${index}-${titleItem?.field}`}>\r\n                                    {titleItem?.field ? (\r\n                                        lodash.get(item, titleItem?.field, \"\")\r\n                                    ) : (\r\n                                        <Button\r\n                                            color=\"primary\"\r\n                                            size=\"sm\"\r\n                                            onClick={() =>\r\n                                                titleItem?.handle({\r\n                                                    ...item,\r\n                                                })\r\n                                            }\r\n                                        >\r\n                                            {titleItem?.actionTitle ||\r\n                                                i18n.t(\r\n                                                    actionTitle || \"PREVIEW_PDF\"\r\n                                                )}\r\n                                        </Button>\r\n                                    )}\r\n                                </td>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TableBasic;\r\n","import React from \"react\";\nimport { Viewer, Worker } from \"@react-pdf-viewer/core\";\nimport { scrollModePlugin } from \"@react-pdf-viewer/scroll-mode\";\nimport { getFilePlugin } from \"@react-pdf-viewer/get-file\";\nimport { zoomPlugin } from \"@react-pdf-viewer/zoom\";\nimport i18n from \"i18n/i18n\";\n// Import styles\nimport \"@react-pdf-viewer/core/lib/styles/index.css\";\nimport \"@react-pdf-viewer/scroll-mode/lib/styles/index.css\";\nimport \"@react-pdf-viewer/zoom/lib/styles/index.css\";\nimport \"@react-pdf-viewer/default-layout/lib/styles/index.css\";\n\nconst ViewFilePdf = ({ url }) => {\n  const scrollModePluginInstance = scrollModePlugin();\n  const zoomPluginInstance = zoomPlugin();\n  const { CurrentScale, ZoomInButton, ZoomOutButton } = zoomPluginInstance;\n  const getFilePluginInstance = getFilePlugin({\n    fileNameGenerator: (file) => {\n      return file?.name;\n    },\n  });\n  const { DownloadButton } = getFilePluginInstance;\n  const renderError = () => {\n    return (\n      <div\n        style={{\n          alignItems: \"center\",\n          border: \"1px solid rgba(0, 0, 0, 0.3)\",\n          display: \"flex\",\n          height: \"100%\",\n          justifyContent: \"center\",\n          padding: \"1.5rem\",\n        }}\n      >\n        <div\n          style={{\n            backgroundColor: \"#e53e3e\",\n            borderRadius: \"0.25rem\",\n            color: \"#fff\",\n            padding: \"0.5rem\",\n          }}\n        >\n          {i18n.t(\"ERROR_LOAD_DOCUMENT_PDF\")}\n        </div>\n      </div>\n    );\n  };\n  return (\n    <>\n      <div\n        className=\"tools\"\n        style={{\n          border: \"1px solid rgba(0, 0, 0, 0.3)\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          height: \"100%\",\n        }}\n      >\n        <div\n          className=\"btn-download\"\n          style={{\n            alignItems: \"center\",\n            backgroundColor: \"#eeeeee\",\n            borderBottom: \"1px solid rgba(0, 0, 0, 0.1)\",\n            display: \"flex\",\n            padding: \"4px\",\n          }}\n        >\n          <DownloadButton />\n          <div style={{ padding: \"0px 2px\", marginLeft: \"auto\" }}>\n            <ZoomOutButton />\n          </div>\n          <div style={{ padding: \"0px 2px\" }}>\n            <CurrentScale />\n          </div>\n          <div style={{ padding: \"0px 2px\" }}>\n            <ZoomInButton />\n          </div>\n        </div>\n      </div>\n      <Worker workerUrl=\"https://unpkg.com/pdfjs-dist@2.6.347/build/pdf.worker.js\">\n        <Viewer\n          fileUrl={`${url}`}\n          renderError={renderError}\n          plugins={[\n            scrollModePluginInstance,\n            getFilePluginInstance,\n            zoomPluginInstance,\n          ]}\n        />\n      </Worker>\n    </>\n  );\n};\n\nexport default ViewFilePdf;\n","const { createStore, createHook } = require(\"react-sweet-state\");\r\nimport axiosClient from \"api/common/axiosClient\";\r\nimport CONFIG from \"config/config\";\r\nimport queryString from \"query-string\";\r\nimport { toast } from \"react-toastify\";\r\nconst ChiTietNganhDaoTao = \"ChiTIetNganhDaoTaoStore\";\r\nimport i18n from \"i18n/i18n\";\r\n\r\nconst initialState = {\r\n    data: [],\r\n    total: 0,\r\n    page: 0,\r\n    isError: false,\r\n    message: \"\",\r\n    item: null,\r\n};\r\n\r\nconst actions = {\r\n    getChiTietNganhDaoTao: (filter) => async ({ setState }) => {\r\n        try {\r\n            const query = queryString.stringify({ ...filter });\r\n            const results = await axiosClient.get(\r\n                `${CONFIG.API.CHITIETNGANHDAOTAO}?${query}`\r\n            );\r\n            if (results) {\r\n                const { contents = [], total = 0, page = 0 } = results;\r\n                setState({\r\n                    data: contents,\r\n                    total,\r\n                    page,\r\n                    isError: false,\r\n                });\r\n            } else {\r\n                setState({\r\n                    data: [],\r\n                });\r\n            }\r\n        } catch (error) {\r\n            const data = error?.response?.data;\r\n            toast.error(i18n.t(`${data?.message || \"ERROR\"}`));\r\n            setState({\r\n                isError: true,\r\n                data: [],\r\n                item: null,\r\n            });\r\n        }\r\n    },\r\n    getChiTietNganhDaoTaoID: (param) => async ({ setState }) => {\r\n        try {\r\n            const results = await axiosClient.get(\r\n                `${CONFIG.API.CHITIETNGANHDAOTAO}/${param}`\r\n            );\r\n            if (results) {\r\n                setState({\r\n                    item: { ...results },\r\n                });\r\n            } else {\r\n                setState({\r\n                    item: null,\r\n                });\r\n            }\r\n        } catch (error) {\r\n            setState({\r\n                isError: true,\r\n            });\r\n        }\r\n    },\r\n};\r\nconst Store = createStore({\r\n    initialState,\r\n    actions,\r\n    name: ChiTietNganhDaoTao,\r\n});\r\nconst useChiTietNganhDaoTao = createHook(Store);\r\nexport default useChiTietNganhDaoTao;\r\n"],"sourceRoot":""}