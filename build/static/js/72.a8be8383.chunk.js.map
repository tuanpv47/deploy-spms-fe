{"version":3,"sources":["views/admin/teaching-activity/TeachingActivityEdit/components/PageHeader/PageHeader.js","views/admin/teaching-activity/TeachingActivityEdit/TeachingActivityEdit.js","components/admin/Breadcrumbs/Breadcrumbs.js","components/common/AsteriskIcon/AsteriskIcon.js","api/common/teaching-activity.js"],"names":["PageHeader","headerTitle","className","toUpperCase","TeachingActivityEdit","t","useTranslation","history","useHistory","location","useLocation","useState","id","setId","isUpdatePage","setIsUpdatePage","ten","initialValues","setInitialValues","color","isOpen","messages","notification","setNotification","isLoading","setIsLoading","useEffect","a","parsed","queryString","parse","window","search","updateForm","teachingActivityAPI","getById","res","response","status","String","message","toast","error","handleEditOnClick","values","isValid","body","putById","data","includes","post","push","RoutesString","ADMIN_TEACHING_ACTIVITY_EDIT","handleDeleteOnClick","e","preventDefault","deleteById","LoadingBar","Breadcrumbs","currentItem","items","href","ADMIN_TEACHING_ACTIVITY_LIST","title","enableReinitialize","validationSchema","Yup","shape","required","i18n","errors","dirty","handleChange","handleReset","Form","Notification","FormGroup","Label","for","AsteriskIcon","InputGroup","InputGroupAddon","addonType","InputGroupText","Input","type","name","placeholder","value","onChange","invalid","FormText","Button","disabled","onClick","active","to","WELCOME","map","style","tableName","getAll","filter","query","stringify","limit","page","url","axiosClient","get","getList","pageable","sorter","sortBy","sortType","searchKey","JSON","put","delete"],"mappings":"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","file":"static/js/72.a8be8383.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./PageHeader.css\";\r\n\r\nexport default function PageHeader({ headerTitle }) {\r\n  return (\r\n    <div className=\"page-header\">\r\n      <div className=\"d-flex flex-wrap justify-content-between\">\r\n        <h1>{headerTitle.toUpperCase()}</h1>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n  FaCode,\r\n  FaExchangeAlt,\r\n  FaPlus,\r\n  FaRemoveFormat,\r\n  FaSync,\r\n  FaTextWidth,\r\n  FaTrash,\r\n} from \"react-icons/fa\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  FormText,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  Label,\r\n} from \"reactstrap\";\r\nimport queryString from \"query-string\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport \"./TeachingActivityEdit.css\";\r\n\r\nimport { RoutesString } from \"pages/routesString\";\r\nimport teachingActivityAPI from \"api/common/teaching-activity\";\r\nimport Notification from \"components/common/Notification/Notification\";\r\nimport Breadcrumbs from \"components/admin/Breadcrumbs/Breadcrumbs\";\r\nimport LoadingBar from \"components/common/LoadingBar/LoadingBar\";\r\nimport AsteriskIcon from \"components/common/AsteriskIcon/AsteriskIcon\";\r\nimport PageHeader from \"./components/PageHeader/PageHeader\";\r\nimport i18n from \"i18n/i18n\";\r\n\r\nexport default function TeachingActivityEdit() {\r\n  const { t } = useTranslation();\r\n\r\n  const history = useHistory();\r\n\r\n  const location = useLocation();\r\n\r\n  const [id, setId] = useState(null);\r\n  const [isUpdatePage, setIsUpdatePage] = useState(false);\r\n  const [initialValues, setInitialValues] = useState({\r\n    // ma: \"\",\r\n    ten: \"\"\r\n  });\r\n  const [notification, setNotification] = useState({\r\n    color: \"danger\",\r\n    isOpen: false,\r\n    messages: [],\r\n  });\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(async () => {\r\n    const parsed = queryString.parse(window.location.search);\r\n    if (parsed.id) {\r\n      setId(parsed.id);\r\n      setIsUpdatePage(true);\r\n      updateForm(parsed.id);\r\n    }\r\n  }, [location]);\r\n\r\n  const updateForm = async function (id) {\r\n    setIsLoading(true);\r\n    try {\r\n      const res = await teachingActivityAPI.getById(id);\r\n      setInitialValues({\r\n        // ma: res.ma,\r\n        ten: res.ten\r\n      });\r\n    } catch (err) {\r\n      if (err.response) {\r\n        if (err?.response?.status === 403 || String(err?.response?.message) === 'NOT_OWNER') {\r\n          toast.error(t(\"RESPONSE_MESSAGE403\"));\r\n        }\r\n        else if (err?.response?.status === 401) {\r\n          toast.error(t(\"RESPONSE_MESSAGE401\"));\r\n        } else if (err?.response?.status === 400) {\r\n          toast.error(t(\"RESPONSE_MESSAGE400\"));\r\n        } else if (err?.response?.status === 409) {\r\n          toast.error(t(\"RESPONSE_MESSAGE409\"));\r\n        } else if (err?.response?.status === 404) {\r\n          toast.error(t(\"RESPONSE_MESSAGE404\"));\r\n        } else {\r\n          toast.error(t(\"RESPONSE_MESSAGE500\"));\r\n        }\r\n      }\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleEditOnClick = async function (values, isValid) {\r\n    if (!isValid) {\r\n      return;\r\n    }\r\n    if (isUpdatePage) {\r\n      const body = values;\r\n      try {\r\n        const res = await teachingActivityAPI.putById(id, body);\r\n        if (res.status === 200) {\r\n          setNotification({\r\n            color: \"success\",\r\n            isOpen: true,\r\n            messages: [t(\"admin.UPDATE_SUCCESS\")],\r\n          });\r\n          updateForm(id);\r\n        }\r\n      } catch (err) {\r\n        if (err?.response) {\r\n          if (err?.response?.status === 403 || String(err?.response?.message) === 'NOT_OWNER') {\r\n            toast.error(t(\"RESPONSE_MESSAGE403\"));\r\n          }\r\n          else if (err?.response?.status === 401) {\r\n            toast.error(t(\"RESPONSE_MESSAGE401\"));\r\n          } else if (err?.response?.status === 400) {\r\n            toast.error(t(\"RESPONSE_MESSAGE400\"));\r\n          } else if (err?.response?.status === 409) {\r\n            toast.error(t(\"RESPONSE_MESSAGE409\"));\r\n          } else if (err?.response?.status === 404) {\r\n            toast.error(t(\"RESPONSE_MESSAGE404\"));\r\n          } else {\r\n            if (String(err?.response?.data?.error)?.includes(\"ER_DUP_ENTRY\")) {\r\n              toast.error(t(\"ER_DUP_ENTRY\"));\r\n            } else if (String(err?.response?.data?.error)?.includes(\"ID_NOT_FOUND\")) {\r\n              toast.error(t(\"RESPONSE_MESSAGE404\"));\r\n            } else {\r\n              toast.error(t(\"RESPONSE_MESSAGE500\"));\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      const body = values;\r\n      try {\r\n        const res = await teachingActivityAPI.post(body);\r\n        if (res.id) {\r\n          setNotification({\r\n            color: \"danger\",\r\n            isOpen: false,\r\n            messages: [],\r\n          });\r\n          history.push(\r\n            `${RoutesString.ADMIN_TEACHING_ACTIVITY_EDIT}?id=${res.id}`\r\n          );\r\n        }\r\n      } catch (err) {\r\n        if (err?.response) {\r\n          if (err?.response?.status === 403 || String(err?.response?.message) === 'NOT_OWNER') {\r\n            toast.error(t(\"RESPONSE_MESSAGE403\"));\r\n          }\r\n          else if (err?.response?.status === 401) {\r\n            toast.error(t(\"RESPONSE_MESSAGE401\"));\r\n          } else if (err?.response?.status === 400) {\r\n            toast.error(t(\"RESPONSE_MESSAGE400\"));\r\n          } else if (err?.response?.status === 409) {\r\n            toast.error(t(\"RESPONSE_MESSAGE409\"));\r\n          } else if (err?.response?.status === 404) {\r\n            toast.error(t(\"RESPONSE_MESSAGE404\"));\r\n          } else {\r\n            if (String(err?.response?.data?.error)?.includes(\"ER_DUP_ENTRY\")) {\r\n              toast.error(t(\"ER_DUP_ENTRY\"));\r\n            } else if (String(err?.response?.data?.error)?.includes(\"ID_NOT_FOUND\")) {\r\n              toast.error(t(\"RESPONSE_MESSAGE404\"));\r\n            } else {\r\n              toast.error(t(\"RESPONSE_MESSAGE500\"));\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDeleteOnClick = async function (e) {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await teachingActivityAPI.deleteById(id);\r\n      if (res.status === 200) {\r\n        setNotification({\r\n          color: \"success\",\r\n          isOpen: true,\r\n          messages: [t(\"admin.common.DELETED\")],\r\n        });\r\n        // updateForm(id);\r\n      }\r\n    } catch (err) {\r\n      if (err.response) {\r\n        if (err?.response?.status === 403 || String(err?.response?.message) === 'NOT_OWNER') {\r\n          toast.error(t(\"RESPONSE_MESSAGE403\"));\r\n        }\r\n        else if (err?.response?.status === 401) {\r\n          toast.error(t(\"RESPONSE_MESSAGE401\"));\r\n        } else if (err?.response?.status === 400) {\r\n          toast.error(t(\"DELETE_ERROR\") + \": \" + t(\"RESPONSE_MESSAGE400\"));\r\n        } else if (err?.response?.status === 409) {\r\n          toast.error(t(\"DELETE_ERROR\") + \": \" + t(\"RESPONSE_MESSAGE409\"));\r\n        } else if (err?.response?.status === 404) {\r\n          toast.error(t(\"DELETE_ERROR\") + \": \" + t(\"RESPONSE_MESSAGE404\"));\r\n        } else {\r\n          if (String(err?.response?.data?.error)?.includes(\"ID_NOT_FOUND\")) {\r\n            toast.error(t(\"RESPONSE_MESSAGE404\"));\r\n          } else {\r\n            toast.error(t(\"DELETE_ERROR\") + \": \" + t(\"RESPONSE_MESSAGE500\"));\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      {isLoading && <LoadingBar />}\r\n\r\n      <Breadcrumbs\r\n        currentItem={\r\n          isUpdatePage\r\n            ? t(\"admin.teaching_activity_edit.UPDATE_TEACHING_ACTIVITY\")\r\n            : t(\"admin.teaching_activity_edit.ADD_TEACHING_ACTIVITY\")\r\n        }\r\n        items={[\r\n          {\r\n            href: RoutesString.ADMIN_TEACHING_ACTIVITY_LIST,\r\n            title: t(\"admin.teaching_activity_list.TEACHING_ACTIVITY_LIST\"),\r\n          },\r\n        ]}\r\n      />\r\n\r\n      <PageHeader\r\n        headerTitle={\r\n          isUpdatePage\r\n            ? t(\"admin.teaching_activity_edit.UPDATE_TEACHING_ACTIVITY\")\r\n            : t(\"admin.teaching_activity_edit.ADD_TEACHING_ACTIVITY\")\r\n        }\r\n      />\r\n\r\n      <div className=\"page-content\">\r\n        <Formik\r\n          initialValues={initialValues}\r\n          enableReinitialize={true}\r\n          validationSchema={Yup.object().shape({\r\n            // ma: Yup.string().required(i18n.t(\"REQUIRED_FIELD_WARNING\")),\r\n            ten: Yup.string().required(i18n.t(\"REQUIRED_FIELD_WARNING\")),\r\n          })}\r\n        >\r\n          {({ values, errors, dirty, isValid, handleChange, handleReset }) => (\r\n            <Form>\r\n              <Notification\r\n                color={notification.color}\r\n                isOpen={notification.isOpen}\r\n                messages={notification.messages}\r\n              />\r\n              {/* <FormGroup className=\"row\">\r\n                <Label for=\"ma\" className=\"col-lg-3\">\r\n                  {t(\"admin.teaching_activity_edit.CODE\")} <AsteriskIcon />\r\n                </Label>\r\n                <div className=\"col-lg-6\">\r\n                  <InputGroup>\r\n                    <InputGroupAddon addonType=\"prepend\">\r\n                      <InputGroupText>\r\n                        <FaCode />\r\n                      </InputGroupText>\r\n                    </InputGroupAddon>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"ma\"\r\n                      placeholder={t(\r\n                        \"admin.teaching_activity_edit.CODE_PLACEHOLDER\"\r\n                      )}\r\n                      value={values.ma}\r\n                      onChange={handleChange}\r\n                      invalid={errors.ma}\r\n                      readOnly={isUpdatePage}\r\n                    />\r\n                  </InputGroup>\r\n                  {errors.ma && <FormText color=\"danger\">{errors.ma}</FormText>}\r\n                </div>\r\n              </FormGroup>{\" \"}\r\n              <br /> */}\r\n              <FormGroup className=\"row\">\r\n                <Label for=\"ten\" className=\"col-lg-3\">\r\n                  {t(\"admin.teaching_activity_edit.NAME\")} <AsteriskIcon />\r\n                </Label>\r\n                <div className=\"col-lg-6\">\r\n                  <InputGroup>\r\n                    <InputGroupAddon addonType=\"prepend\">\r\n                      <InputGroupText>\r\n                        <FaTextWidth />\r\n                      </InputGroupText>\r\n                    </InputGroupAddon>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"ten\"\r\n                      placeholder={t(\r\n                        \"admin.teaching_activity_edit.NAME_PLACEHOLDER\"\r\n                      )}\r\n                      value={values.ten}\r\n                      onChange={handleChange}\r\n                      invalid={errors.ten}\r\n                    />\r\n                  </InputGroup>\r\n                  {errors.ten && (\r\n                    <FormText color=\"danger\">{errors.ten}</FormText>\r\n                  )}\r\n                </div>\r\n              </FormGroup>{\" \"}\r\n              <br />\r\n              <FormGroup>\r\n                <Button\r\n                  color=\"success\"\r\n                  disabled={isUpdatePage ? !isValid : !(isValid && dirty)}\r\n                  onClick={() =>\r\n                    handleEditOnClick(\r\n                      values,\r\n                      isUpdatePage ? isValid : isValid && dirty\r\n                    )\r\n                  }\r\n                >\r\n                  {isUpdatePage ? (\r\n                    <>\r\n                      <FaExchangeAlt /> {t(\"admin.common.UPDATE\")}\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <FaPlus /> {t(\"admin.common.ADD\")}\r\n                    </>\r\n                  )}\r\n                </Button>\r\n                &emsp;\r\n                {isUpdatePage && (\r\n                  <>\r\n                    <Button onClick={handleReset}>\r\n                      <FaSync /> {t(\"admin.common.REFRESH\")}\r\n                    </Button>\r\n                    &emsp;\r\n                    <Button color=\"danger\" onClick={handleDeleteOnClick}>\r\n                      <FaTrash /> {t(\"admin.common.DELETE\")}\r\n                    </Button>\r\n                  </>\r\n                )}\r\n              </FormGroup>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { FaHome } from \"react-icons/fa\";\n\nimport { RoutesString } from \"pages/routesString\";\n\nexport default function Breadcrumbs({ items, currentItem }) {\n  return (\n    <Breadcrumb>\n      <BreadcrumbItem active={!currentItem}>\n        <Link to={RoutesString.WELCOME}>\n          <FaHome />\n        </Link>\n      </BreadcrumbItem>\n      {items &&\n        items.map(({ href, title }) => {\n          return (\n            <BreadcrumbItem>\n              <Link to={href}>{title}</Link>\n            </BreadcrumbItem>\n          );\n        })}\n      {currentItem && <BreadcrumbItem active>{currentItem}</BreadcrumbItem>}\n    </Breadcrumb>\n  );\n}\n","import React from \"react\";\n\nexport default function AsteriskIcon() {\n  return <span style={{ color: \"red\" }}>(*)</span>;\n}\n","import axiosClient from \"./axiosClient\";\r\nimport queryString from \"query-string\";\r\n\r\nconst tableName = \"hoat-dong-day-hoc\";\r\nexport default {\r\n  getAll: function (filter = {}) {\r\n    const query = queryString.stringify({limit:-1,page:0, ...filter });\r\n    const url = `${tableName}?${query}`;\r\n    return axiosClient.get(url);\r\n  },\r\n  getList: function (pageable) {\r\n    let url = `${tableName}?page=${pageable.page - 1}`;\r\n    if (pageable.limit) {\r\n      url += `&limit=${pageable.limit}`;\r\n    }\r\n    if (pageable.sorter.sortBy && pageable.sorter.sortType) {\r\n      url += `&sortBy=${pageable.sorter.sortBy}&sortType=${pageable.sorter.sortType}`;\r\n    }\r\n    if (pageable.searchKey) {\r\n      url += `&searchKey=${pageable.searchKey}`;\r\n    }\r\n    return axiosClient.get(url);\r\n  },\r\n  getById: function (id) {\r\n    const url = `${tableName}/${id}`;\r\n    return axiosClient.get(url);\r\n  },\r\n  post: function (body) {\r\n    const url = `${tableName}`;\r\n    return axiosClient.post(url, JSON.stringify(body));\r\n  },\r\n  putById: function (id, body) {\r\n    const url = `${tableName}/${id}`;\r\n    return axiosClient.put(url, JSON.stringify(body));\r\n  },\r\n  deleteById: function (id) {\r\n    const url = `${tableName}/${id}`;\r\n    return axiosClient.delete(url);\r\n  },\r\n};\r\n"],"sourceRoot":""}