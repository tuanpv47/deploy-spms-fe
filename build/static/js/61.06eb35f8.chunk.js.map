{"version":3,"sources":["views/admin/user/UserEdit/components/PageHeader/PageHeader.js","views/admin/user/UserEdit/UserEdit.js","components/admin/Breadcrumbs/Breadcrumbs.js","components/common/AsteriskIcon/AsteriskIcon.js","api/common/role.js","api/common/user.js"],"names":["PageHeader","titleHeader","className","toUpperCase","UserEdit","t","useTranslation","history","useHistory","useLocation","useState","id","setId","isUpdatePage","setIsUpdatePage","email","username","firstName","lastName","isActive","role","initialValues","setInitialValues","color","isOpen","messages","notification","setNotification","isLoading","setIsLoading","status","value","name","roles","setRoles","useEffect","a","parsed","queryString","parse","window","location","search","updateForm","roleAPI","getAll","rolesRes","contents","userAPI","getById","res","response","String","message","toast","error","handleEditOnClick","values","isValid","body","putById","data","includes","post","Number","success","push","RoutesString","ADMIN_USER_LIST","warning","i18n","handleDeleteOnClick","e","preventDefault","DELETE_SUCCESS_CODE","deleteById","LoadingBar","Breadcrumbs","currentItem","items","href","title","enableReinitialize","validationSchema","Yup","shape","required","password","min","matches","errors","dirty","handleChange","handleReset","Form","Notification","FormGroup","Label","for","AsteriskIcon","InputGroup","InputGroupAddon","addonType","InputGroupText","Input","type","placeholder","onChange","invalid","readOnly","FormText","map","item","index","toString","Button","disabled","isErrors","onClick","active","to","WELCOME","style","tableName","filter","query","stringify","limit","page","url","axiosClient","get","getList","pageable","sorter","sortBy","sortType","searchKey","isDeleted","JSON","put","delete","getRolePermission","roleId","Object","keys","length"],"mappings":"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","file":"static/js/61.06eb35f8.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./PageHeader.css\";\n\nexport default function PageHeader({ titleHeader }) {\n  return (\n    <div className=\"page-header\">\n      <div className=\"d-flex flex-wrap justify-content-between\">\n        <h1>{titleHeader.toUpperCase()}</h1>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n    FaEnvelope,\r\n    FaExchangeAlt,\r\n    FaLock,\r\n    FaPlus,\r\n    FaRemoveFormat,\r\n    FaSync,\r\n    FaTextWidth,\r\n    FaTrash,\r\n    FaUserAlt,\r\n    FaUsersCog,\r\n} from \"react-icons/fa\";\r\nimport {\r\n    Button,\r\n    Form,\r\n    FormGroup,\r\n    FormText,\r\n    Input,\r\n    InputGroup,\r\n    InputGroupAddon,\r\n    InputGroupText,\r\n    Label,\r\n} from \"reactstrap\";\r\nimport queryString from \"query-string\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport \"./UserEdit.css\";\r\n\r\nimport { RoutesString } from \"pages/routesString\";\r\nimport roleAPI from \"api/common/role\";\r\nimport userAPI from \"api/common/user\";\r\nimport Breadcrumbs from \"components/admin/Breadcrumbs/Breadcrumbs\";\r\nimport AsteriskIcon from \"components/common/AsteriskIcon/AsteriskIcon\";\r\nimport Notification from \"components/common/Notification/Notification\";\r\nimport LoadingBar from \"components/common/LoadingBar/LoadingBar\";\r\nimport PageHeader from \"./components/PageHeader/PageHeader\";\r\nimport i18n from \"i18n/i18n\";\r\nimport { isErrors } from \"utils/utils\";\r\n\r\nexport default function UserEdit() {\r\n    const { t } = useTranslation();\r\n\r\n    const history = useHistory();\r\n\r\n    const location = useLocation();\r\n\r\n    const [id, setId] = useState(null);\r\n    const [isUpdatePage, setIsUpdatePage] = useState(false);\r\n    const [initialValues, setInitialValues] = useState({\r\n        email: \"\",\r\n        username: \"\",\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        isActive: true,\r\n        role: \"\",\r\n    });\r\n    const [notification, setNotification] = useState({\r\n        color: \"danger\",\r\n        isOpen: false,\r\n        messages: [],\r\n    });\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const status = [\r\n        {\r\n            value: true,\r\n            name: t(\"admin.user_edit.ACTIVE\"),\r\n        },\r\n        {\r\n            value: false,\r\n            name: t(\"admin.user_edit.BLOCK\"),\r\n        },\r\n    ];\r\n    const [roles, setRoles] = useState([]);\r\n\r\n    useEffect(async () => {\r\n        const parsed = queryString.parse(window.location.search);\r\n        if (parsed.id) {\r\n            setId(parsed.id);\r\n            setIsUpdatePage(true);\r\n            updateForm(parsed.id);\r\n        }\r\n        try {\r\n            const rolesRes = await roleAPI.getAll();\r\n            setRoles(rolesRes.contents);\r\n            if (!parsed.id) {\r\n                setInitialValues({\r\n                    ...initialValues,\r\n                    role: rolesRes.contents[0].id,\r\n                });\r\n            }\r\n            \r\n        } catch (err) {// eslint-disable-next-line\r\n        }\r\n    }, []);\r\n\r\n    const updateForm = async function (id) {\r\n        setIsLoading(true);\r\n        try {\r\n            const res = await userAPI.getById(id);\r\n            setInitialValues({\r\n                email: res.email,\r\n                username: res.username,\r\n                firstName: res.firstName,\r\n                lastName: res.lastName,\r\n                isActive: res.isActive,\r\n                role: res?.role?.id,\r\n            });\r\n        } catch (err) {\r\n            if (err.response) {\r\n                if (err?.response?.status === 403 || String(err?.response?.message) === 'NOT_OWNER') {\r\n                    toast.error(t(\"RESPONSE_MESSAGE403\"));\r\n                }\r\n                else if (err?.response?.status === 401) {\r\n                    toast.error(t(\"RESPONSE_MESSAGE401\"));\r\n                } else if (err?.response?.status === 400) {\r\n                    toast.error(t(\"RESPONSE_MESSAGE400\"));\r\n                } else if (err?.response?.status === 409) {\r\n                    toast.error(t(\"RESPONSE_MESSAGE409\"));\r\n                } else if (err?.response?.status === 404) {\r\n                    toast.error(t(\"RESPONSE_MESSAGE404\"));\r\n                } else {\r\n                    toast.error(t(\"RESPONSE_MESSAGE500\"));\r\n                }\r\n            }\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleEditOnClick = async function (values, isValid) {\r\n        if (!isValid) {\r\n            return;\r\n        }\r\n        if (isUpdatePage) {\r\n            const body = values;\r\n            try {\r\n                const res = await userAPI.putById(id, {...body, role: body.role + '', isActive: !!body?.isActive});\r\n                if (res.status === 200) {\r\n                    setNotification({\r\n                        color: \"success\",\r\n                        isOpen: true,\r\n                        messages: [t(\"admin.UPDATE_SUCCESS\")],\r\n                    });\r\n                    updateForm(id);\r\n                }\r\n            } catch (err) {\r\n                if (err?.response) {\r\n                    if (err?.response?.status === 403 || String(err?.response?.message) === 'NOT_OWNER') {\r\n                        toast.error(t(\"RESPONSE_MESSAGE403\"));\r\n                    }\r\n                    else if (err?.response?.status === 401) {\r\n                        toast.error(t(\"RESPONSE_MESSAGE401\"));\r\n                    } else if (err?.response?.status === 400) {\r\n                        toast.error(t(\"RESPONSE_MESSAGE400\"));\r\n                    } else if (err?.response?.status === 409) {\r\n                        toast.error(t(\"RESPONSE_MESSAGE409\"));\r\n                    } else if (err?.response?.status === 404) {\r\n                        toast.error(t(\"RESPONSE_MESSAGE404\"));\r\n                    } else {\r\n                        if (String(err?.response?.data?.error)?.includes(\"ER_DUP_ENTRY\")) {\r\n                            toast.error(t(\"ER_DUP_ENTRY\"));\r\n                        } else if (String(err?.response?.data?.error)?.includes(\"ID_NOT_FOUND\")) {\r\n                            toast.error(t(\"RESPONSE_MESSAGE404\"));\r\n                        } else {\r\n                            toast.error(t(\"RESPONSE_MESSAGE500\"));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            const body = values;\r\n            try {\r\n                const res = await userAPI.post({\r\n                    ...body,\r\n                    role:\r\n                        typeof values?.role === \"number\"\r\n                            ? values?.role\r\n                            : Number(values?.role),\r\n                });\r\n                if (res?.id) {\r\n                    toast.success(t(\"admin.ADD_SUCCESS\"));\r\n                    setNotification({\r\n                        color: \"danger\",\r\n                        isOpen: false,\r\n                        messages: [],\r\n                    });\r\n                    history.push(`${RoutesString.ADMIN_USER_LIST}`);\r\n                } else {\r\n                    toast.warning(\r\n                        i18n.t(`admin.user_edit.${res?.message}` || \"ERROR\")\r\n                    );\r\n                }\r\n            } catch (err) {\r\n                if (err?.response) {\r\n                    if (err?.response?.status === 403 || String(err?.response?.message) === 'NOT_OWNER') {\r\n                        toast.error(t(\"RESPONSE_MESSAGE403\"));\r\n                    }\r\n                    else if (err?.response?.status === 401) {\r\n                        toast.error(t(\"RESPONSE_MESSAGE401\"));\r\n                    } else if (err?.response?.status === 400) {\r\n                        toast.error(t(\"RESPONSE_MESSAGE400\"));\r\n                    } else if (err?.response?.status === 409) {\r\n                        toast.error(t(\"RESPONSE_MESSAGE409\"));\r\n                    } else if (err?.response?.status === 404) {\r\n                        toast.error(t(\"RESPONSE_MESSAGE404\"));\r\n                    } else {\r\n                        if (String(err?.response?.data?.error)?.includes(\"ER_DUP_ENTRY\")) {\r\n                            toast.error(t(\"ER_DUP_ENTRY\"));\r\n                        } else if (String(err?.response?.data?.error)?.includes(\"ID_NOT_FOUND\")) {\r\n                            toast.error(t(\"RESPONSE_MESSAGE404\"));\r\n                        } else {\r\n                            toast.error(t(\"RESPONSE_MESSAGE500\"));\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleDeleteOnClick = async function (e) {\r\n        e.preventDefault();\r\n        const DELETE_SUCCESS_CODE = 200;\r\n        try {\r\n            const res = await userAPI.deleteById(id);\r\n            if (res.status === DELETE_SUCCESS_CODE) {\r\n\r\n                toast.success(t(\"admin.common.DELETED\"));\r\n                history.push(`${RoutesString.ADMIN_USER_LIST}`);\r\n            }\r\n        } catch (err) {\r\n            if (err.response) {\r\n                if (err?.response?.status === 403 || String(err?.response?.message) === 'NOT_OWNER') {\r\n                    toast.error(t(\"RESPONSE_MESSAGE403\"));\r\n                }\r\n                else if (err?.response?.status === 401) {\r\n                    toast.error(t(\"RESPONSE_MESSAGE401\"));\r\n                } else if (err?.response?.status === 400) {\r\n                    toast.error(t(\"DELETE_ERROR\") + \": \" + t(\"RESPONSE_MESSAGE400\"));\r\n                } else if (err?.response?.status === 409) {\r\n                    toast.error(t(\"DELETE_ERROR\") + \": \" + t(\"RESPONSE_MESSAGE409\"));\r\n                } else if (err?.response?.status === 404) {\r\n                    toast.error(t(\"DELETE_ERROR\") + \": \" + t(\"RESPONSE_MESSAGE404\"));\r\n                } else {\r\n                    if (String(err?.response?.data?.error)?.includes(\"ID_NOT_FOUND\")) {\r\n                        toast.error(t(\"RESPONSE_MESSAGE404\"));\r\n                    } else {\r\n                        toast.error(t(\"DELETE_ERROR\") + \": \" + t(\"RESPONSE_MESSAGE500\"));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"page\">\r\n            {isLoading && <LoadingBar />}\r\n\r\n            <Breadcrumbs\r\n                currentItem={\r\n                    isUpdatePage\r\n                        ? t(\"admin.user_edit.UPDATE_ACCOUNT\")\r\n                        : t(\"admin.user_edit.ADD_ACCOUNT\")\r\n                }\r\n                items={[\r\n                    {\r\n                        href: RoutesString.ADMIN_USER_LIST,\r\n                        title: t(\"admin.user_list.ACCOUNT_LIST\"),\r\n                    },\r\n                ]}\r\n            />\r\n\r\n            <PageHeader\r\n                titleHeader={\r\n                    isUpdatePage\r\n                        ? t(\"admin.user_edit.UPDATE_ACCOUNT\")\r\n                        : t(\"admin.user_edit.ADD_ACCOUNT\")\r\n                }\r\n            />\r\n\r\n            <div className=\"page-content\">\r\n                <Formik\r\n                    initialValues={initialValues}\r\n                    enableReinitialize={true}\r\n                    validationSchema={isUpdatePage ? Yup.object().shape({\r\n                        email: Yup.string()\r\n                            .required(i18n.t(\"REQUIRED_FIELD_WARNING\"))\r\n                            .email(i18n.t('admin.user_edit.EMAIL_INVALID')),\r\n                        username: Yup.string().required(i18n.t(\"REQUIRED_FIELD_WARNING\")),\r\n                        // password: Yup.string().required(i18n.t(\"REQUIRED_FIELD_WARNING\")),\r\n                        firstName: Yup.string().required(\r\n                            i18n.t(\"REQUIRED_FIELD_WARNING\")\r\n                        ),\r\n                        lastName: Yup.string().required(\r\n                            i18n.t(\"REQUIRED_FIELD_WARNING\")\r\n                        ),\r\n                    }) : Yup.object().shape({\r\n                        email: Yup.string()\r\n                            .required(i18n.t(\"REQUIRED_FIELD_WARNING\"))\r\n                            .email(i18n.t('admin.user_edit.EMAIL_INVALID')),\r\n                        username: Yup.string().required(i18n.t(\"REQUIRED_FIELD_WARNING\")),\r\n                        password: Yup.string().required(i18n.t(\"REQUIRED_FIELD_WARNING\")).min(8, i18n.t(\"admin.PASSWORD_LENGTH_WARNING\")).matches(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/, i18n.t(\"admin.PASSWORD_LENGTH_WARNING\")),\r\n                        firstName: Yup.string().required(\r\n                            i18n.t(\"REQUIRED_FIELD_WARNING\")\r\n                        ),\r\n                        lastName: Yup.string().required(\r\n                            i18n.t(\"REQUIRED_FIELD_WARNING\")\r\n                        ),\r\n                    })}\r\n                >\r\n                    {({\r\n                        values,\r\n                        errors,\r\n                        dirty,\r\n                        isValid,\r\n                        handleChange,\r\n                        handleReset,\r\n                    }) => (\r\n                        <Form>\r\n                            <Notification\r\n                                color={notification.color}\r\n                                isOpen={notification.isOpen}\r\n                                messages={notification.messages}\r\n                            />\r\n                            <FormGroup className=\"row\">\r\n                                <Label for=\"email\" className=\"col-lg-3\">\r\n                                    Email <AsteriskIcon />\r\n                                </Label>\r\n                                <div className=\"col-lg-6\">\r\n                                    <InputGroup>\r\n                                        <InputGroupAddon addonType=\"prepend\">\r\n                                            <InputGroupText>\r\n                                                <FaEnvelope />\r\n                                            </InputGroupText>\r\n                                        </InputGroupAddon>\r\n                                        <Input\r\n                                            type=\"email\"\r\n                                            name=\"email\"\r\n                                            placeholder={t(\r\n                                                \"admin.user_edit.EMAIL_PLACEHOLDER\"\r\n                                            )}\r\n                                            value={values.email}\r\n                                            onChange={handleChange}\r\n                                            invalid={errors.email}\r\n                                            readOnly={isUpdatePage}\r\n                                        />\r\n                                    </InputGroup>\r\n                                    {errors.email && (\r\n                                        <FormText color=\"danger\">\r\n                                            {errors.email}\r\n                                        </FormText>\r\n                                    )}\r\n                                </div>\r\n                            </FormGroup>{\" \"}\r\n                            <br />\r\n                            <FormGroup className=\"row\">\r\n                                <Label for=\"username\" className=\"col-lg-3\">\r\n                                    {t(\"admin.user_edit.USERNAME\")}{\" \"}\r\n                                    <AsteriskIcon />\r\n                                </Label>\r\n                                <div className=\"col-lg-6\">\r\n                                    <InputGroup>\r\n                                        <InputGroupAddon addonType=\"prepend\">\r\n                                            <InputGroupText>\r\n                                                <FaUserAlt />\r\n                                            </InputGroupText>\r\n                                        </InputGroupAddon>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"username\"\r\n                                            placeholder={t(\r\n                                                \"admin.user_edit.USERNAME_PLACEHOLDER\"\r\n                                            )}\r\n                                            value={values.username}\r\n                                            onChange={handleChange}\r\n                                            invalid={errors.username}\r\n                                            readOnly={isUpdatePage}\r\n                                        />\r\n                                    </InputGroup>\r\n                                    {errors.username && (\r\n                                        <FormText color=\"danger\">\r\n                                            {errors.username}\r\n                                        </FormText>\r\n                                    )}\r\n                                </div>\r\n                            </FormGroup>{\" \"}\r\n                            <br />\r\n                            {!isUpdatePage && (\r\n                                <>\r\n                                    <FormGroup className=\"row\">\r\n                                        <Label\r\n                                            for=\"password\"\r\n                                            className=\"col-lg-3\"\r\n                                        >\r\n                                            {t(\"admin.user_edit.PASSWORD\")}{\" \"}\r\n                                            <AsteriskIcon />\r\n                                        </Label>\r\n                                        <div className=\"col-lg-6\">\r\n                                            <InputGroup>\r\n                                                <InputGroupAddon addonType=\"prepend\">\r\n                                                    <InputGroupText>\r\n                                                        <FaUserAlt />\r\n                                                    </InputGroupText>\r\n                                                </InputGroupAddon>\r\n                                                <Input\r\n                                                    type=\"password\"\r\n                                                    name=\"password\"\r\n                                                    placeholder={t(\r\n                                                        \"admin.user_edit.PASSWORD_PLACEHOLDER\"\r\n                                                    )}\r\n                                                    value={values.password}\r\n                                                    onChange={handleChange}\r\n                                                    invalid={errors.password}\r\n                                                    readOnly={isUpdatePage}\r\n                                                />\r\n                                            </InputGroup>\r\n                                            {errors.password && (\r\n                                                <FormText color=\"danger\">\r\n                                                    {errors.password}\r\n                                                </FormText>\r\n                                            )}\r\n                                        </div>\r\n                                    </FormGroup>{\" \"}\r\n                                    <br />\r\n                                </>\r\n                            )}\r\n                            <FormGroup className=\"row\">\r\n                                <Label for=\"firstName\" className=\"col-lg-3\">\r\n                                    {t(\"admin.user_edit.FIRSTNAME\")}{\" \"}\r\n                                    <AsteriskIcon />\r\n                                </Label>\r\n                                <div className=\"col-lg-6\">\r\n                                    <InputGroup>\r\n                                        <InputGroupAddon addonType=\"prepend\">\r\n                                            <InputGroupText>\r\n                                                <FaTextWidth />\r\n                                            </InputGroupText>\r\n                                        </InputGroupAddon>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"firstName\"\r\n                                            placeholder={t(\r\n                                                \"admin.user_edit.FIRSTNAME_PLACEHOLDER\"\r\n                                            )}\r\n                                            value={values.firstName}\r\n                                            onChange={handleChange}\r\n                                            invalid={errors.firstName}\r\n                                            // readOnly={isUpdatePage}\r\n                                        />\r\n                                    </InputGroup>\r\n                                    {errors.firstName && (\r\n                                        <FormText color=\"danger\">\r\n                                            {errors.firstName}\r\n                                        </FormText>\r\n                                    )}\r\n                                </div>\r\n                            </FormGroup>{\" \"}\r\n                            <br />\r\n                            <FormGroup className=\"row\">\r\n                                <Label for=\"lastName\" className=\"col-lg-3\">\r\n                                    {t(\"admin.user_edit.LASTNAME\")}{\" \"}\r\n                                    <AsteriskIcon />\r\n                                </Label>\r\n                                <div className=\"col-lg-6\">\r\n                                    <InputGroup>\r\n                                        <InputGroupAddon addonType=\"prepend\">\r\n                                            <InputGroupText>\r\n                                                <FaTextWidth />\r\n                                            </InputGroupText>\r\n                                        </InputGroupAddon>\r\n                                        <Input\r\n                                            type=\"text\"\r\n                                            name=\"lastName\"\r\n                                            placeholder={t(\r\n                                                \"admin.user_edit.LASTNAME_PLACEHOLDER\"\r\n                                            )}\r\n                                            value={values.lastName}\r\n                                            onChange={handleChange}\r\n                                            invalid={errors.lastName}\r\n                                            // readOnly={isUpdatePage}\r\n                                        />\r\n                                    </InputGroup>\r\n                                    {errors.lastName && (\r\n                                        <FormText color=\"danger\">\r\n                                            {errors.lastName}\r\n                                        </FormText>\r\n                                    )}\r\n                                </div>\r\n                            </FormGroup>{\" \"}\r\n                            <br />\r\n                            <FormGroup className=\"row\">\r\n                                <Label for=\"isActive\" className=\"col-lg-3\">\r\n                                    {t(\"admin.user_edit.STATUS\")}\r\n                                </Label>\r\n                                <div className=\"col-lg-6\">\r\n                                    <InputGroup>\r\n                                        <InputGroupAddon addonType=\"prepend\">\r\n                                            <InputGroupText>\r\n                                                <FaLock />\r\n                                            </InputGroupText>\r\n                                        </InputGroupAddon>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"isActive\"\r\n                                            value={values.isActive}\r\n                                            onChange={handleChange}\r\n                                        >\r\n                                            {status &&\r\n                                                status.map((item, index) => {\r\n                                                    return (\r\n                                                        <option\r\n                                                            key={index}\r\n                                                            value={item.value}\r\n                                                        >\r\n                                                            {item.name}\r\n                                                        </option>\r\n                                                    );\r\n                                                })}\r\n                                        </Input>\r\n                                    </InputGroup>\r\n                                </div>\r\n                            </FormGroup>{\" \"}\r\n                            <br />\r\n                            <FormGroup className=\"row\">\r\n                                <Label for=\"role\" className=\"col-lg-3\">\r\n                                    {t(\"admin.user_edit.ROLE\")}\r\n                                </Label>\r\n                                <div className=\"col-lg-6\">\r\n                                    <InputGroup>\r\n                                        <InputGroupAddon addonType=\"prepend\">\r\n                                            <InputGroupText>\r\n                                                <FaUsersCog />\r\n                                            </InputGroupText>\r\n                                        </InputGroupAddon>\r\n                                        <Input\r\n                                            type=\"select\"\r\n                                            name=\"role\"\r\n                                            value={values.role}\r\n                                            onChange={handleChange}\r\n                                        >\r\n                                            {roles &&\r\n                                                roles.map((item, index) => {\r\n                                                    return (\r\n                                                        <option\r\n                                                            key={index}\r\n                                                            value={item.id.toString()}\r\n                                                        >\r\n                                                            {item.name}\r\n                                                        </option>\r\n                                                    );\r\n                                                })}\r\n                                        </Input>\r\n                                    </InputGroup>\r\n                                </div>\r\n                            </FormGroup>{\" \"}\r\n                            <br />\r\n                            <FormGroup>\r\n                                <Button\r\n                                    color=\"success\"\r\n                                    disabled={\r\n                                        isErrors(errors)\r\n                                    }\r\n                                    onClick={() =>\r\n                                        handleEditOnClick(\r\n                                            values,\r\n                                            isUpdatePage\r\n                                                ? isValid\r\n                                                : isValid && dirty\r\n                                        )\r\n                                    }\r\n                                >\r\n                                    {isUpdatePage ? (\r\n                                        <>\r\n                                            <FaExchangeAlt />{\" \"}\r\n                                            {t(\"admin.common.UPDATE\")}\r\n                                        </>\r\n                                    ) : (\r\n                                        <>\r\n                                            <FaPlus /> {t(\"admin.common.ADD\")}\r\n                                        </>\r\n                                    )}\r\n                                </Button>\r\n                                &emsp;\r\n                                {isUpdatePage && (\r\n                                    <>\r\n                                        <Button onClick={handleReset}>\r\n                                            <FaSync />{\" \"}\r\n                                            {t(\"admin.common.REFRESH\")}\r\n                                        </Button>\r\n                                        &emsp;\r\n                                        <Button\r\n                                            color=\"danger\"\r\n                                            onClick={handleDeleteOnClick}\r\n                                        >\r\n                                            <FaTrash />{\" \"}\r\n                                            {t(\"admin.common.DELETE\")}\r\n                                        </Button>\r\n                                    </>\r\n                                )}\r\n                            </FormGroup>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { FaHome } from \"react-icons/fa\";\n\nimport { RoutesString } from \"pages/routesString\";\n\nexport default function Breadcrumbs({ items, currentItem }) {\n  return (\n    <Breadcrumb>\n      <BreadcrumbItem active={!currentItem}>\n        <Link to={RoutesString.WELCOME}>\n          <FaHome />\n        </Link>\n      </BreadcrumbItem>\n      {items &&\n        items.map(({ href, title }) => {\n          return (\n            <BreadcrumbItem>\n              <Link to={href}>{title}</Link>\n            </BreadcrumbItem>\n          );\n        })}\n      {currentItem && <BreadcrumbItem active>{currentItem}</BreadcrumbItem>}\n    </Breadcrumb>\n  );\n}\n","import React from \"react\";\n\nexport default function AsteriskIcon() {\n  return <span style={{ color: \"red\" }}>(*)</span>;\n}\n","import axiosClient from \"./axiosClient\";\r\nimport queryString from \"query-string\";\r\n\r\nconst tableName = \"roles\";\r\nexport default {\r\n    getAll: function (filter = {}) {\r\n        const query = queryString.stringify({limit:-1,page:0, ...filter });\r\n        const url = `${tableName}?${query}`;\r\n        return axiosClient.get(url);\r\n    },\r\n    getList: function (pageable) {\r\n        let url = `${tableName}?page=${pageable.page - 1}`;\r\n        if (pageable.limit) {\r\n            url += `&limit=${pageable.limit}`;\r\n        }\r\n        if (pageable.sorter.sortBy && pageable.sorter.sortType) {\r\n            url += `&sortBy=${pageable.sorter.sortBy}&sortType=${pageable.sorter.sortType}`;\r\n        }\r\n        if (pageable.searchKey) {\r\n            url += `&search=${pageable.searchKey}`;\r\n        }\r\n        if (pageable.filter.isDeleted !== null) {\r\n            url += `&isDeleted=${pageable.filter.isDeleted}`;\r\n        }\r\n        return axiosClient.get(url);\r\n    },\r\n    getById: function (id) {\r\n        const url = `${tableName}/${id}`;\r\n        return axiosClient.get(url);\r\n    },\r\n    post: function (body) {\r\n        const url = `${tableName}`;\r\n        return axiosClient.post(url, JSON.stringify(body));\r\n    },\r\n    putById: function (id, body) {\r\n        const url = `${tableName}/${id}`;\r\n        return axiosClient.put(url, JSON.stringify(body));\r\n    },\r\n    deleteById: function (id) {\r\n        const url = `${tableName}/${id}`;\r\n        return axiosClient.delete(url);\r\n    },\r\n    getRolePermission: async (roleId, filter = {}) => {\r\n        let url = `/resources/permission/${roleId}`;\r\n        if (Object.keys(filter).length) {\r\n            const query = queryString.stringify({ ...filter });\r\n            url += `?${query}`;\r\n        }\r\n        return await axiosClient.get(url);\r\n    },\r\n};\r\n","import queryString from \"query-string\";\r\nimport axiosClient from \"./axiosClient\";\r\n\r\nconst tableName = \"users\";\r\nexport default {\r\n  getAll: function (filter={}) {\r\n    const query = queryString.stringify({page:0, ...filter });\r\n    const url = `${tableName}?${query}`;\r\n    return axiosClient.get(url);\r\n  },\r\n  getList: function (pageable) {\r\n    let url = `${tableName}?page=${pageable.page - 1}`;\r\n    if (pageable.limit) {\r\n      url += `&limit=${pageable.limit}`;\r\n    }\r\n    if (pageable.sorter.sortBy && pageable.sorter.sortType) {\r\n      url += `&sortBy=${pageable.sorter.sortBy}&sortType=${pageable.sorter.sortType}`;\r\n    }\r\n    if (pageable.searchKey) {\r\n      url += `&search=${pageable.searchKey}`;\r\n    }\r\n    if (pageable.filter.role) {\r\n      url += `&role=${pageable.filter.role}`;\r\n    }\r\n    if (pageable.filter.isActive !== null) {\r\n      url += `&isActive=${pageable.filter.isActive}`;\r\n    }\r\n    return axiosClient.get(url);\r\n  },\r\n  getById: function (id) {\r\n    const url = `${tableName}/${id}`;\r\n    return axiosClient.get(url);\r\n  },\r\n  post: function (body) {\r\n    const url = `${tableName}`;\r\n    return axiosClient.post(url, JSON.stringify(body));\r\n  },\r\n  putById: function (id, body) {\r\n    const url = `${tableName}/${id}`;\r\n    return axiosClient.put(url, JSON.stringify(body));\r\n  },\r\n  deleteById: function (id) {\r\n    const url = `${tableName}/${id}`;\r\n    return axiosClient.delete(url);\r\n  },\r\n};\r\n"],"sourceRoot":""}