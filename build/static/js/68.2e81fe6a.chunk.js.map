{"version":3,"sources":["views/admin/role/RoleEdit/components/PageHeader/PageHeader.js","views/admin/role/RoleEdit/RoleEdit.js","components/admin/Breadcrumbs/Breadcrumbs.js","components/common/AsteriskIcon/AsteriskIcon.js","api/common/role.js"],"names":["PageHeader","headerTitle","className","toUpperCase","RoleEdit","t","useTranslation","history","useHistory","location","useLocation","useState","id","setId","isUpdatePage","setIsUpdatePage","value","name","initialValues","setInitialValues","color","isOpen","messages","notification","setNotification","isLoading","setIsLoading","useEffect","a","parsed","queryString","parse","window","search","updateForm","roleAPI","getById","res","undefined","toString","response","status","String","message","toast","error","handleEditOnClick","values","isValid","body","putById","data","includes","post","push","RoutesString","ADMIN_ROLE_EDIT","handleDeleteOnClick","e","preventDefault","deleteById","success","ADMIN_ROLE_LIST","LoadingBar","Breadcrumbs","currentItem","items","href","title","enableReinitialize","validationSchema","Yup","shape","required","i18n","errors","dirty","handleChange","handleReset","Form","Notification","FormGroup","Label","for","AsteriskIcon","InputGroup","InputGroupAddon","addonType","InputGroupText","Input","type","placeholder","onChange","invalid","readOnly","FormText","Button","disabled","onClick","active","to","WELCOME","map","style","tableName","getAll","filter","query","stringify","limit","page","url","axiosClient","get","getList","pageable","sorter","sortBy","sortType","searchKey","isDeleted","JSON","put","delete","getRolePermission","roleId","Object","keys","length"],"mappings":"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","file":"static/js/68.2e81fe6a.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./PageHeader.css\";\n\nexport default function PageHeader({ headerTitle }) {\n  return (\n    <div className=\"page-header\">\n      <div className=\"d-flex flex-wrap justify-content-between\">\n        <h1>{headerTitle.toUpperCase()}</h1>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n  FaCode,\r\n  FaExchangeAlt,\r\n  FaPlus,\r\n  FaRemoveFormat,\r\n  FaSync,\r\n  FaTextWidth,\r\n  FaTrash,\r\n} from \"react-icons/fa\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  FormText,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  Label,\r\n} from \"reactstrap\";\r\nimport queryString from \"query-string\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport \"./RoleEdit.css\";\r\n\r\nimport { RoutesString } from \"pages/routesString\";\r\nimport roleAPI from \"api/common/role\";\r\nimport Notification from \"components/common/Notification/Notification\";\r\nimport Breadcrumbs from \"components/admin/Breadcrumbs/Breadcrumbs\";\r\nimport LoadingBar from \"components/common/LoadingBar/LoadingBar\";\r\nimport AsteriskIcon from \"components/common/AsteriskIcon/AsteriskIcon\";\r\nimport PageHeader from \"./components/PageHeader/PageHeader\";\r\nimport i18n from \"i18n/i18n\";\r\n\r\nexport default function RoleEdit() {\r\n  const { t } = useTranslation();\r\n\r\n  const history = useHistory();\r\n\r\n  const location = useLocation();\r\n\r\n  const [id, setId] = useState(null);\r\n  const [isUpdatePage, setIsUpdatePage] = useState(false);\r\n  const [initialValues, setInitialValues] = useState({\r\n    value: \"\",\r\n    name: \"\"\r\n  });\r\n  const [notification, setNotification] = useState({\r\n    color: \"danger\",\r\n    isOpen: false,\r\n    messages: [],\r\n  });\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(async () => {\r\n    const parsed = queryString.parse(window.location.search);\r\n    if (parsed.id) {\r\n      setId(parsed.id);\r\n      setIsUpdatePage(true);\r\n      updateForm(parsed.id);\r\n    }\r\n  }, [location]);\r\n\r\n  const updateForm = async function (id) {\r\n    setIsLoading(true);\r\n    try {\r\n      const res = await roleAPI.getById(id);\r\n      setInitialValues({\r\n        value: res.value !== undefined && res.value.toString(),\r\n        name: res.name\r\n      });\r\n    } catch (err) {\r\n      if (err.response) {\r\n        if (err?.response?.status === 403 || String(err?.response?.message) === 'NOT_OWNER') {\r\n          toast.error(t(\"RESPONSE_MESSAGE403\"));\r\n        }\r\n        else if (err?.response?.status === 401) {\r\n          toast.error(t(\"RESPONSE_MESSAGE401\"));\r\n        } else if (err?.response?.status === 400) {\r\n          toast.error(t(\"RESPONSE_MESSAGE400\"));\r\n        } else if (err?.response?.status === 409) {\r\n          toast.error(t(\"RESPONSE_MESSAGE409\"));\r\n        } else if (err?.response?.status === 404) {\r\n          toast.error(t(\"RESPONSE_MESSAGE404\"));\r\n        } else {\r\n          toast.error(t(\"RESPONSE_MESSAGE500\"));\r\n        }\r\n      }\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleEditOnClick = async function (values, isValid) {\r\n    if (!isValid) {\r\n      return;\r\n    }\r\n    if (isUpdatePage) {\r\n      const body = values;\r\n      try {\r\n        const res = await roleAPI.putById(id, body);\r\n        if (res.status === 200) {\r\n          setNotification({\r\n            color: \"success\",\r\n            isOpen: true,\r\n            messages: [t(\"admin.UPDATE_SUCCESS\")],\r\n          });\r\n          updateForm(id);\r\n        }\r\n      } catch (err) {\r\n        if (err?.response) {\r\n          if (err?.response?.status === 403 || String(err?.response?.message) === 'NOT_OWNER') {\r\n            toast.error(t(\"RESPONSE_MESSAGE403\"));\r\n          }\r\n          else if (err?.response?.status === 401) {\r\n            toast.error(t(\"RESPONSE_MESSAGE401\"));\r\n          } else if (err?.response?.status === 400) {\r\n            toast.error(t(\"RESPONSE_MESSAGE400\"));\r\n          } else if (err?.response?.status === 409) {\r\n            toast.error(t(\"RESPONSE_MESSAGE409\"));\r\n          } else if (err?.response?.status === 404) {\r\n            toast.error(t(\"RESPONSE_MESSAGE404\"));\r\n          } else {\r\n            if (String(err?.response?.data?.error)?.includes(\"ER_DUP_ENTRY\")) {\r\n              toast.error(t(\"ER_DUP_ENTRY\"));\r\n            } else if (String(err?.response?.data?.error)?.includes(\"ID_NOT_FOUND\")) {\r\n              toast.error(t(\"RESPONSE_MESSAGE404\"));\r\n            } else {\r\n              toast.error(t(\"RESPONSE_MESSAGE500\"));\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      const body = values;\r\n      try {\r\n        const res = await roleAPI.post(body);\r\n        history.push(`${RoutesString.ADMIN_ROLE_EDIT}?id=${res.id}`);\r\n      } catch (err) {\r\n        if (err?.response) {\r\n          if (err?.response?.status === 403 || String(err?.response?.message) === 'NOT_OWNER') {\r\n            toast.error(t(\"RESPONSE_MESSAGE403\"));\r\n          }\r\n          else if (err?.response?.status === 401) {\r\n            toast.error(t(\"RESPONSE_MESSAGE401\"));\r\n          } else if (err?.response?.status === 400) {\r\n            toast.error(t(\"RESPONSE_MESSAGE400\"));\r\n          } else if (err?.response?.status === 409) {\r\n            toast.error(t(\"RESPONSE_MESSAGE409\"));\r\n          } else if (err?.response?.status === 404) {\r\n            toast.error(t(\"RESPONSE_MESSAGE404\"));\r\n          } else {\r\n            if (String(err?.response?.data?.error)?.includes(\"ER_DUP_ENTRY\")) {\r\n              toast.error(t(\"ER_DUP_ENTRY\"));\r\n            } else if (String(err?.response?.data?.error)?.includes(\"ID_NOT_FOUND\")) {\r\n              toast.error(t(\"RESPONSE_MESSAGE404\"));\r\n            } else {\r\n              toast.error(t(\"RESPONSE_MESSAGE500\"));\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDeleteOnClick = async function (e) {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await roleAPI.deleteById(id);\r\n      if (res.status === 200) {\r\n        toast.success(t(\"admin.common.DELETED\"));\r\n        history.push(`${RoutesString.ADMIN_ROLE_LIST}`);\r\n      }\r\n    } catch (err) {\r\n      if (err.response) {\r\n        if (err?.response?.status === 403 || String(err?.response?.message) === 'NOT_OWNER') {\r\n          toast.error(t(\"RESPONSE_MESSAGE403\"));\r\n        }\r\n        else if (err?.response?.status === 401) {\r\n          toast.error(t(\"RESPONSE_MESSAGE401\"));\r\n        } else if (err?.response?.status === 400) {\r\n          toast.error(t(\"DELETE_ERROR\") + \": \" + t(\"RESPONSE_MESSAGE400\"));\r\n        } else if (err?.response?.status === 409) {\r\n          toast.error(t(\"DELETE_ERROR\") + \": \" + t(\"RESPONSE_MESSAGE409\"));\r\n        } else if (err?.response?.status === 404) {\r\n          toast.error(t(\"DELETE_ERROR\") + \": \" + t(\"RESPONSE_MESSAGE404\"));\r\n        } else {\r\n          if (String(err?.response?.data?.error)?.includes(\"ID_NOT_FOUND\")) {\r\n            toast.error(t(\"RESPONSE_MESSAGE404\"));\r\n          } else {\r\n            toast.error(t(\"DELETE_ERROR\") + \": \" + t(\"RESPONSE_MESSAGE500\"));\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      {isLoading && <LoadingBar />}\r\n\r\n      <Breadcrumbs\r\n        currentItem={\r\n          isUpdatePage\r\n            ? t(\"admin.role_edit.UPDATE_ROLE\")\r\n            : t(\"admin.role_edit.ADD_ROLE\")\r\n        }\r\n        items={[\r\n          {\r\n            href: RoutesString.ADMIN_ROLE_LIST,\r\n            title: t(\"admin.role_list.ROLE_LIST\"),\r\n          },\r\n        ]}\r\n      />\r\n\r\n      <PageHeader\r\n        headerTitle={\r\n          isUpdatePage\r\n            ? t(\"admin.role_edit.UPDATE_ROLE\")\r\n            : t(\"admin.role_edit.ADD_ROLE\")\r\n        }\r\n      />\r\n\r\n      <div className=\"page-content\">\r\n        <Formik\r\n          initialValues={initialValues}\r\n          enableReinitialize={true}\r\n          validationSchema={Yup.object().shape({\r\n            value: Yup.string().required(i18n.t(\"REQUIRED_FIELD_WARNING\")),\r\n            name: Yup.string().required(i18n.t(\"REQUIRED_FIELD_WARNING\")),\r\n          })}\r\n        >\r\n          {({ values, errors, dirty, isValid, handleChange, handleReset }) => (\r\n            <Form>\r\n              <Notification\r\n                color={notification.color}\r\n                isOpen={notification.isOpen}\r\n                messages={notification.messages}\r\n              />\r\n              <FormGroup className=\"row\">\r\n                <Label for=\"value\" className=\"col-lg-3\">\r\n                  {t(\"admin.role_edit.CODE\")} <AsteriskIcon />\r\n                </Label>\r\n                <div className=\"col-lg-6\">\r\n                  <InputGroup>\r\n                    <InputGroupAddon addonType=\"prepend\">\r\n                      <InputGroupText>\r\n                        <FaCode />\r\n                      </InputGroupText>\r\n                    </InputGroupAddon>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      placeholder={t(\"admin.role_edit.CODE_PLACEHOLDER\")}\r\n                      value={values.name}\r\n                      onChange={handleChange}\r\n                      invalid={errors.name}\r\n                      readOnly={isUpdatePage}\r\n                    />\r\n                  </InputGroup>\r\n                  {errors.name && (\r\n                    <FormText color=\"danger\">{errors.name}</FormText>\r\n                  )}\r\n                </div>\r\n              </FormGroup>{\" \"}\r\n              <br />\r\n              <FormGroup className=\"row\">\r\n                <Label for=\"name\" className=\"col-lg-3\">\r\n                  {t(\"admin.role_edit.NAME\")} <AsteriskIcon />\r\n                </Label>\r\n                <div className=\"col-lg-6\">\r\n                  <InputGroup>\r\n                    <InputGroupAddon addonType=\"prepend\">\r\n                      <InputGroupText>\r\n                        <FaTextWidth />\r\n                      </InputGroupText>\r\n                    </InputGroupAddon>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"value\"\r\n                      placeholder={t(\"admin.role_edit.NAME_PLACEHOLDER\")}\r\n                      value={values.value}\r\n                      onChange={handleChange}\r\n                      invalid={errors.value}\r\n                    />\r\n                  </InputGroup>\r\n                  {errors.value && (\r\n                    <FormText color=\"danger\">{errors.value}</FormText>\r\n                  )}\r\n                </div>\r\n              </FormGroup>{\" \"}\r\n              <br />\r\n              <FormGroup>\r\n                <Button\r\n                  color=\"success\"\r\n                  disabled={isUpdatePage ? !isValid : !(isValid && dirty)}\r\n                  onClick={() =>\r\n                    handleEditOnClick(\r\n                      values,\r\n                      isUpdatePage ? isValid : isValid && dirty\r\n                    )\r\n                  }\r\n                >\r\n                  {isUpdatePage ? (\r\n                    <>\r\n                      <FaExchangeAlt /> {t(\"admin.common.UPDATE\")}\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <FaPlus /> {t(\"admin.common.ADD\")}\r\n                    </>\r\n                  )}\r\n                </Button>\r\n                &emsp;\r\n                {isUpdatePage && (\r\n                  <>\r\n                    <Button onClick={handleReset}>\r\n                      <FaSync /> {t(\"admin.common.REFRESH\")}\r\n                    </Button>\r\n                    &emsp;\r\n                    <Button color=\"danger\" onClick={handleDeleteOnClick}>\r\n                      <FaTrash /> {t(\"admin.common.DELETE\")}\r\n                    </Button>\r\n                  </>\r\n                )}\r\n              </FormGroup>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { FaHome } from \"react-icons/fa\";\n\nimport { RoutesString } from \"pages/routesString\";\n\nexport default function Breadcrumbs({ items, currentItem }) {\n  return (\n    <Breadcrumb>\n      <BreadcrumbItem active={!currentItem}>\n        <Link to={RoutesString.WELCOME}>\n          <FaHome />\n        </Link>\n      </BreadcrumbItem>\n      {items &&\n        items.map(({ href, title }) => {\n          return (\n            <BreadcrumbItem>\n              <Link to={href}>{title}</Link>\n            </BreadcrumbItem>\n          );\n        })}\n      {currentItem && <BreadcrumbItem active>{currentItem}</BreadcrumbItem>}\n    </Breadcrumb>\n  );\n}\n","import React from \"react\";\n\nexport default function AsteriskIcon() {\n  return <span style={{ color: \"red\" }}>(*)</span>;\n}\n","import axiosClient from \"./axiosClient\";\r\nimport queryString from \"query-string\";\r\n\r\nconst tableName = \"roles\";\r\nexport default {\r\n    getAll: function (filter = {}) {\r\n        const query = queryString.stringify({limit:-1,page:0, ...filter });\r\n        const url = `${tableName}?${query}`;\r\n        return axiosClient.get(url);\r\n    },\r\n    getList: function (pageable) {\r\n        let url = `${tableName}?page=${pageable.page - 1}`;\r\n        if (pageable.limit) {\r\n            url += `&limit=${pageable.limit}`;\r\n        }\r\n        if (pageable.sorter.sortBy && pageable.sorter.sortType) {\r\n            url += `&sortBy=${pageable.sorter.sortBy}&sortType=${pageable.sorter.sortType}`;\r\n        }\r\n        if (pageable.searchKey) {\r\n            url += `&search=${pageable.searchKey}`;\r\n        }\r\n        if (pageable.filter.isDeleted !== null) {\r\n            url += `&isDeleted=${pageable.filter.isDeleted}`;\r\n        }\r\n        return axiosClient.get(url);\r\n    },\r\n    getById: function (id) {\r\n        const url = `${tableName}/${id}`;\r\n        return axiosClient.get(url);\r\n    },\r\n    post: function (body) {\r\n        const url = `${tableName}`;\r\n        return axiosClient.post(url, JSON.stringify(body));\r\n    },\r\n    putById: function (id, body) {\r\n        const url = `${tableName}/${id}`;\r\n        return axiosClient.put(url, JSON.stringify(body));\r\n    },\r\n    deleteById: function (id) {\r\n        const url = `${tableName}/${id}`;\r\n        return axiosClient.delete(url);\r\n    },\r\n    getRolePermission: async (roleId, filter = {}) => {\r\n        let url = `/resources/permission/${roleId}`;\r\n        if (Object.keys(filter).length) {\r\n            const query = queryString.stringify({ ...filter });\r\n            url += `?${query}`;\r\n        }\r\n        return await axiosClient.get(url);\r\n    },\r\n};\r\n"],"sourceRoot":""}