{"version":3,"sources":["api/admin/statistic.js","views/admin/statistic/PercentUserByRole/PercentUserByRole.js","components/admin/Breadcrumbs/Breadcrumbs.js"],"names":["axiosClient","get","PercentUserByRole","t","useTranslation","useState","isLoading","setIsLoading","items","setItems","labels","datasets","label","data","backgroundColor","borderColor","borderWidth","setData","useEffect","a","statisticAPI","res","total","toTalSyllabus","totalTeacher","totalStudent","totalCTDDT","adminPercent","toFixed","teacherPercent","studentPercent","guestPercent","LoadingBar","Breadcrumbs","currentItem","Table","responsive","bordered","map","title","index","item","active","to","RoutesString","WELCOME","href"],"mappings":"gPAEe,EACW,WAEtB,OAAOA,IAAYC,IADV,wB,0BCME,SAASC,IAAqB,IACnCC,EAAMC,cAAND,EADkC,EAGRE,oBAAS,GAHD,mBAGnCC,EAHmC,KAGxBC,EAHwB,OAIhBF,mBAAS,IAJO,mBAInCG,EAJmC,KAI5BC,EAJ4B,OAKlBJ,mBAAS,CAC/BK,OAAQ,CACNP,EAAE,SACFA,EAAE,WACFA,EAAE,WACFA,EAAE,UAEJQ,SAAU,CACR,CACEC,MAAOT,EAAE,2BACTU,KAAM,GACNC,gBAAiB,CACf,0BACA,0BACA,0BACA,2BAEFC,YAAa,CACX,wBACA,wBACA,wBACA,yBAEFC,YAAa,MA5BuB,mBAKnCH,EALmC,KAK7BI,EAL6B,KAqE1C,OApCAC,oBAAS,sBAAC,sCAAAC,EAAA,6DACRZ,GAAa,GADL,kBAGYa,IAHZ,OAGAC,EAHA,OAIAC,EAAQD,EAAIE,cAAgBF,EAAIG,aAAeH,EAAII,aAAeJ,EAAIK,WACtEC,GAAgBN,EAAIE,cAAcD,EAAM,KAAKM,QAAQ,GACrDC,GAAkBR,EAAIG,aAAaF,EAAM,KAAKM,QAAQ,GACtDE,GAAkBT,EAAII,aAAaH,EAAM,KAAKM,QAAQ,GACtDG,EAAe,IAAMJ,EAAeE,EAAiBC,EAC3Db,EAAQ,2BACHJ,GADE,IAELF,SAAU,CAAC,2BAEJE,EAAKF,SAAS,IAFX,IAGNE,KAAM,CACJc,EACAE,EACAC,EACAC,SAKRtB,EAAS,CACPY,EAAIE,cACJF,EAAIG,aACJH,EAAII,aACJJ,EAAIK,aA3BA,2EAgCNnB,GAAa,GAhCP,6EAkCP,IAGD,qCACGD,GAAa,cAAC0B,EAAA,EAAD,IAEd,cAACC,EAAA,EAAD,CACEC,YAAa/B,EAAE,eAGjB,eAACgC,EAAA,EAAD,CAAOC,YAAU,EAACC,UAAQ,EAA1B,UACE,gCACE,6BACIxB,EAAKH,QAAUG,EAAKH,OAAO4B,KAAI,SAACC,EAAOC,GAAR,OAC7B,6BACGD,GADMC,UAQjB,gCACE,6BACIhC,GAASA,EAAM8B,KAAI,SAACG,EAAMD,GACxB,OAAO,6BAAiBC,GAARD,aAO1B,cAAC,IAAD,CAAK3B,KAAMA,S,8HCtGF,SAASoB,EAAT,GAA8C,IAAvBzB,EAAsB,EAAtBA,MAAO0B,EAAe,EAAfA,YAC3C,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAgBQ,QAASR,EAAzB,SACE,cAAC,IAAD,CAAMS,GAAIC,IAAaC,QAAvB,SACE,cAAC,IAAD,QAGHrC,GACCA,EAAM8B,KAAI,YAAsB,IAAnBQ,EAAkB,EAAlBA,KAAMP,EAAY,EAAZA,MACjB,OACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAMI,GAAIG,EAAV,SAAiBP,SAIxBL,GAAe,cAAC,IAAD,CAAgBQ,QAAM,EAAtB,SAAwBR","file":"static/js/89.6ef82bf7.chunk.js","sourcesContent":["import axiosClient from \"api/common/axiosClient\";\r\n\r\nexport default {\r\n  getNumberOfUsersByRole: function () {\r\n    const url = `thong-ke/intro-page`;\r\n    return axiosClient.get(url);\r\n  }\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport { toast } from \"react-toastify\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport statisticAPI from \"api/admin/statistic\";\r\nimport LoadingBar from 'components/common/LoadingBar/LoadingBar';\r\nimport Breadcrumbs from 'components/admin/Breadcrumbs/Breadcrumbs';\r\nimport { Table } from 'reactstrap';\r\n\r\nexport default function PercentUserByRole() {\r\n  const { t } = useTranslation();\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [items, setItems] = useState([]);\r\n  const [data, setData] = useState({\r\n    labels: [\r\n      t(\"ADMIN\"),\r\n      t(\"TEACHER\"),\r\n      t(\"STUDENT\"),\r\n      t(\"GUEST\")\r\n    ],\r\n    datasets: [\r\n      {\r\n        label: t(\"PERCENT OF USER BY ROLE\"),\r\n        data: [],\r\n        backgroundColor: [\r\n          'rgba(255, 99, 132, 0.2)',\r\n          'rgba(54, 162, 235, 0.2)',\r\n          'rgba(255, 206, 86, 0.2)',\r\n          'rgba(75, 192, 192, 0.2)'\r\n        ],\r\n        borderColor: [\r\n          'rgba(255, 99, 132, 1)',\r\n          'rgba(54, 162, 235, 1)',\r\n          'rgba(255, 206, 86, 1)',\r\n          'rgba(75, 192, 192, 1)'\r\n        ],\r\n        borderWidth: 1\r\n      },\r\n    ],\r\n  });\r\n\r\n  useEffect(async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const res = await statisticAPI.getNumberOfUsersByRole();\r\n      const total = res.toTalSyllabus + res.totalTeacher + res.totalStudent + res.totalCTDDT;\r\n      const adminPercent = (res.toTalSyllabus/total*100).toFixed(2);\r\n      const teacherPercent = (res.totalTeacher/total*100).toFixed(2);\r\n      const studentPercent = (res.totalStudent/total*100).toFixed(2);\r\n      const guestPercent = 100 - adminPercent - teacherPercent - studentPercent;\r\n      setData({\r\n        ...data,\r\n        datasets: [\r\n          {\r\n            ...data.datasets[0],\r\n            data: [\r\n              adminPercent,\r\n              teacherPercent,\r\n              studentPercent,\r\n              guestPercent\r\n            ]\r\n          }\r\n        ]\r\n      });\r\n      setItems([\r\n        res.toTalSyllabus,\r\n        res.totalTeacher,\r\n        res.totalStudent,\r\n        res.totalCTDDT\r\n      ]);\r\n      \r\n    } catch (err) {// eslint-disable-next-line\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {isLoading && <LoadingBar />}\r\n\r\n      <Breadcrumbs\r\n        currentItem={t(\"Statistic\")}\r\n      />\r\n\r\n      <Table responsive bordered>\r\n        <thead>\r\n          <tr>\r\n            { data.labels && data.labels.map((title, index) => (\r\n                <th key={index}>\r\n                  {title}\r\n                </th>\r\n              ))\r\n            }\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          <tr>\r\n            { items && items.map((item, index) => {\r\n                return <td key={index}>{item}</td>;\r\n              })\r\n            }\r\n          </tr>\r\n        </tbody>\r\n      </Table>\r\n\r\n      <Pie data={data} />\r\n    </>\r\n  );\r\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { FaHome } from \"react-icons/fa\";\n\nimport { RoutesString } from \"pages/routesString\";\n\nexport default function Breadcrumbs({ items, currentItem }) {\n  return (\n    <Breadcrumb>\n      <BreadcrumbItem active={!currentItem}>\n        <Link to={RoutesString.WELCOME}>\n          <FaHome />\n        </Link>\n      </BreadcrumbItem>\n      {items &&\n        items.map(({ href, title }) => {\n          return (\n            <BreadcrumbItem>\n              <Link to={href}>{title}</Link>\n            </BreadcrumbItem>\n          );\n        })}\n      {currentItem && <BreadcrumbItem active>{currentItem}</BreadcrumbItem>}\n    </Breadcrumb>\n  );\n}\n"],"sourceRoot":""}