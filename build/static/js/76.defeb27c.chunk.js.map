{"version":3,"sources":["views/admin/permissions/mock.js","views/admin/permissions/mapMethodToAction.js","views/admin/permissions/components/ActionModal.js","views/admin/permissions/Permissions.js","components/admin/ConfirmModal/ConfirmModal.js","api/common/role.js"],"names":["module","exports","id","name","permissions","description","resources","actions","method","isEnable","MapMethodToAction","get","post","put","delete","ActionModal","props","t","useTranslation","Modal","isOpen","modal","toggle","ModalBody","bodyContent","ModalFooter","Button","color","isModalDelete","onClick","handleOkButtonOnClick","titleOk","handleCancelButtonOnClick","titleCancel","BodyContent","style","padding","permissionSelected","permission","map","action","index","Label","Input","type","checked","onChange","e","cloneData","reducePermissions","per","perIndex","handleCheckBox","handleCheckInput","target","i18n","toLowerCase","String","PermissionPage","useState","role","setRole","rolePermissionList","setRolePermissionList","setPermissionSelected","isLoading","setIsLoading","searchRole","params","useParams","isOpenEdit","setIsOpenEdit","titleList","React","useMemo","title","field","render","isAction","useEffect","a","roleId","toast","error","getPermissions","Promise","all","roleAPI","getById","getRolePermission","roleResult","results","contents","response","status","data","includes","submitUpdate","value","prepareBody","putById","success","handleSearchRoleResource","searchKey","query","className","Loading","placeholder","Table","bordered","item","rolePermission","titleItem","lodash","fill","UncontrolledDropdown","DropdownToggle","caret","DropdownMenu","DropdownItem","perSelected","ConfirmModal","headerTitle","tableName","getAll","filter","queryString","stringify","limit","page","url","axiosClient","getList","pageable","sorter","sortBy","sortType","isDeleted","body","JSON","deleteById","Object","keys","length"],"mappings":"oHAAAA,EAAOC,QAAU,CACb,CACIC,GAAI,EACJC,KAAM,QACNC,YAAa,CACT,CACIF,GAAI,EACJG,YAAa,6CACbC,UAAW,UACXC,QAAS,CACL,CAAEC,OAAQ,MAAOC,UAAU,GAC3B,CAAED,OAAQ,OAAQC,UAAU,GAC5B,CAAED,OAAQ,MAAOC,UAAU,GAC3B,CAAED,OAAQ,SAAUC,UAAU,KAGtC,CACIP,GAAI,EACJG,YAAa,sCACbC,UAAW,WACXC,QAAS,CACL,CAAEC,OAAQ,MAAOC,UAAU,GAC3B,CAAED,OAAQ,OAAQC,UAAU,GAC5B,CAAED,OAAQ,MAAOC,UAAU,GAC3B,CAAED,OAAQ,SAAUC,UAAU,S,mBCxBlDT,EAAOC,QAAQS,kBAAoB,CAC/BC,IAAK,OACLC,KAAM,SACNC,IAAK,SACLC,OAAQ,W,2SCwBGC,EAxBK,SAACC,GAAW,IACpBC,EAAMC,cAAND,EACR,OACI,eAACE,EAAA,EAAD,CAAOC,OAAQJ,EAAMK,MAAOC,OAAQN,EAAMM,OAA1C,UAEI,cAACC,EAAA,EAAD,UAAYP,EAAMQ,aAAe,KACjC,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CACIC,MAAK,UAAKX,EAAMY,cAAgB,SAAW,WAC3CC,QAASb,EAAMc,sBAFnB,SAIKb,EAAED,EAAMe,SAAW,qBAExB,cAACL,EAAA,EAAD,CACIC,MAAM,UACNE,QAASb,EAAMgB,0BAFnB,SAIKf,EAAED,EAAMiB,aAAe,gC,0BC0RtCC,EAAc,SAAClB,GAAW,IAAD,IAc3B,OACI,qBAAKmB,MAAO,CAAEC,QAAS,aAAvB,UACU,OAALpB,QAAK,IAALA,OAAA,EAAAA,EAAOqB,sBAAP,OACGrB,QADH,IACGA,GADH,UACGA,EAAOqB,0BADV,iBACG,EAA2BC,kBAD9B,aACG,EAAuCC,KAAI,SAACC,EAAQC,GAAT,aACvC,8BACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CACIC,KAAK,WACLC,SAAe,OAANL,QAAM,IAANA,OAAA,EAAAA,EAAQ/B,YAAY,EAC7BqC,SAAU,SAACC,GAAD,aAtBb,SAACN,EAAOI,GAAa,IAAD,EACrCG,EAAS,sBAAQhC,QAAR,IAAQA,OAAR,EAAQA,EAAOqB,oBACtBY,EAAiB,OAAGD,QAAH,IAAGA,GAAH,UAAGA,EAAWV,kBAAd,aAAG,EAAuBC,KAC7C,SAACW,EAAKC,GACF,OAAIA,IAAaV,EACN,2BAAKS,GAAZ,IAAiBzC,SAAUoC,IAExBK,KAGV,OAALlC,QAAK,IAALA,KAAOoC,eAAP,2BAA2BJ,GAA3B,IAAsCV,WAAYW,KAatBI,CAAiBZ,EAAD,OAAQM,QAAR,IAAQA,GAAR,UAAQA,EAAGO,cAAX,aAAQ,EAAWT,YAExC,IAPP,YASaU,IAAKtC,EAAL,0BAA0BP,oBAEvB,kBADJ,OAAO8B,QAAP,IAAOA,OAAP,EAAOA,EAAQhC,QAAf,OAEMgC,QAFN,IAEMA,GAFN,UAEMA,EAAQhC,cAFd,aAEM,EAAgBgD,cAChBC,OAAM,OACJjB,QADI,IACJA,OADI,EACJA,EAAQhC,QACVgD,sBAhBZf,UA0BfiB,UAjUQ,SAAC1C,GAAW,IAAD,EACN2C,mBAAS,MADH,mBACvBC,EADuB,KACjBC,EADiB,OAEsBF,mBAAS,MAF/B,mBAEvBG,EAFuB,KAEHC,EAFG,OAGsBJ,mBAAS,MAH/B,mBAGvBtB,EAHuB,KAGH2B,EAHG,OAIIL,oBAAS,GAJb,mBAIvBM,EAJuB,KAIZC,EAJY,OAKIP,oBAAS,GALb,gCAMMA,mBAAS,OANf,mBAMvBQ,EANuB,KAOxBC,GAPwB,KAOfC,eAPe,EAUUV,oBAAS,GAVnB,gCAWMA,oBAAS,IAXf,mBAWvBW,EAXuB,KAWXC,EAXW,OAYUZ,oBAAS,GAZnB,mBAcxBa,IAdwB,UAcZC,IAAMC,SACpB,iBAAM,CACF,CAAEC,MAAM,GAAD,OAAKpB,IAAKtC,EAAE,6BAA+B2D,MAAO,eAEzD,CACID,MAAM,GAAD,OAAKpB,IAAKtC,EAAE,2BACjB4D,QAAQ,GAEZ,CAAEF,MAAM,GAAD,OAAKpB,IAAKtC,EAAE,iCAAmC6D,UAAU,MAEpE,KAGJC,qBAAU,WACN,sBAAC,4BAAAC,EAAA,6DACGd,GAAa,IACLe,EAAWb,EAAXa,SAEJC,IAAMC,MAAM5B,IAAKtC,EAAE,sCAJ1B,SAMSmE,GAAeH,GANxB,OAOGf,GAAa,GAPhB,0CAAD,KASD,QAACE,QAAD,IAACA,OAAD,EAACA,EAAQa,SAEZ,IAAMG,GAAc,uCAAG,WAAOH,GAAP,2CAAAD,EAAA,+EAIqBK,QAAQC,IAAI,CAACC,IAAQC,QAAQP,GAASM,IAAQE,kBAAkBR,KAJrF,mCAIRS,EAJQ,KAIIC,EAJJ,KAKf9B,EAAQ6B,GACR3B,EAAsB4B,EAAQC,UAAY,IAN3B,mDAQf,kCAAI,KAAKC,YACyB,OAA1B,2CAAKA,gBAAL,eAAeC,SAA4C,OAA1B,2CAAKD,gBAAL,eAAeC,QAChDZ,IAAMC,MAAM5B,IAAKtC,EAAE,wBACc,OAA1B,2CAAK4E,gBAAL,eAAeC,QACtBZ,IAAMC,MAAM5B,IAAKtC,EAAE,wBACc,OAA1B,2CAAK4E,gBAAL,eAAeC,QACtBZ,IAAMC,MAAM5B,IAAKtC,EAAE,wBACc,OAA1B,2CAAK4E,gBAAL,eAAeC,QACtBZ,IAAMC,MAAM5B,IAAKtC,EAAE,yBAEnB,UAAIwC,OAAM,OAAC,EAAD,6BAAC,KAAKoC,gBAAN,iBAAC,EAAeE,YAAhB,aAAC,EAAqBZ,cAAhC,aAAI,EAAoCa,SAAS,iBAC7Cd,IAAMC,MAAM5B,IAAKtC,EAAE,kBAChB,UAAIwC,OAAM,OAAC,EAAD,6BAAC,KAAKoC,gBAAN,iBAAC,EAAeE,YAAhB,aAAC,EAAqBZ,cAAhC,aAAI,EAAoCa,SAAS,iBACpDd,IAAMC,MAAM5B,IAAKtC,EAAE,wBAEnBiE,IAAMC,MAAM5B,IAAKtC,EAAE,yBAvBhB,0DAAH,sDAwCdgF,GAAY,uCAAG,kCAAAjB,EAAA,6DACT7E,EAAgByD,EAAhBzD,KAAM+F,EAAUtC,EAAVsC,MACN5D,EAAeD,EAAfC,WAEF6D,EAAc,CAChBhG,OACA+F,QACA9F,YAAakC,GAPA,SASXiD,IAAQa,QAAR,OAAgBhC,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAQa,OAAQkB,GATrB,uBAUXf,GAAc,OAAChB,QAAD,IAACA,OAAD,EAACA,EAAQa,QAVZ,OAWjBV,GAAc,GACdW,IAAMmB,QAAQ9C,IAAKtC,EAAE,kBAZJ,2CAAH,qDAmBZqF,GAAwB,uCAAG,WAAOC,GAAP,mBAAAvB,EAAA,6DACrBC,EAAWb,EAAXa,OACJuB,EAAQ,GACZA,EAAQD,EAAS,2BAAQC,GAAR,IAAeD,cAAcC,EAHjB,SAITjB,IAAQE,kBAAkBR,EAAQuB,GAJzB,OAIzBb,EAJyB,OAM7B5B,EAAsB4B,EAAQC,UAAY,IANb,2CAAH,sDAS9B,OACI,qBAAKa,UAAU,OAAf,SACKxC,EACG,cAACyC,EAAA,EAAD,IAEA,gCACI,gCACI,6BAAKnD,IAAKtC,EAAE,4CACX2C,GACG,qCACI,8BAAIL,IAAKtC,EAAE,wBAAX,KAAsC2C,EAAKzD,QAC3C,8BAAIoD,IAAKtC,EAAE,wBAAX,KAAsC2C,EAAKsC,eAIvD,8BACI,cAACvD,EAAA,EAAD,CACIuD,MAAO/B,EACPrB,SAAU,SAACC,GAAD,aACNuD,IACK,OAADvD,QAAC,IAADA,GAAA,UAAAA,EAAGO,cAAH,eAAW4C,QAAS,OAG5BS,YAAW,UAAKpD,IAAKtC,EAAE,8CAG/B,eAAC2F,EAAA,EAAD,CAAOC,UAAQ,EAAf,UACI,gCACI,oCACKrC,SADL,IACKA,QADL,EACKA,GAAWjC,KAAI,SAACuE,EAAMrE,GAAP,OACZ,oCAAiBqE,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAMnC,OAAdlC,UAIrB,gCACKqB,IAAkB,OACfA,QADe,IACfA,OADe,EACfA,EAAoBvB,KAChB,SAACwE,EAAgBtE,GAAjB,OACI,oCACK+B,SADL,IACKA,QADL,EACKA,GAAWjC,KAAI,SAACyE,EAAW9G,GAAZ,aACZ,gCACc,OAAT8G,QAAS,IAATA,OAAA,EAAAA,EAAWpC,QACRqC,MACIF,EADJ,OAEIC,QAFJ,IAEIA,OAFJ,EAEIA,EAAWpC,MACX,KAEE,OAAToC,QAAS,IAATA,OAAA,EAAAA,EAAWnC,UAAX,OAKGkC,QALH,IAKGA,GALH,UAKGA,EAAgBzE,kBALnB,aAKG,EAA4BC,KACxB,SAACC,EAAQC,GAAT,aACI,sBAEIN,MAAO,CACHC,QACI,YAJZ,WAYW,OAANI,QAAM,IAANA,OAAA,EAAAA,EAAQ/B,UACL,cAAC,IAAD,CACIyG,KACI,YAIR,cAAC,IAAD,CACIA,KACI,YArBhB,YA0Ba3D,IAAKtC,EAAL,0BAA0BP,oBAEvB,kBADJ,OAAO8B,QAAP,IAAOA,OAAP,EAAOA,EAAQhC,QAAf,OAEMgC,QAFN,IAEMA,GAFN,UAEMA,EAAQhC,cAFd,aAEM,EAAgBgD,cAChBC,OAAM,OACJjB,QADI,IACJA,OADI,EACJA,EAAQhC,QACVgD,oBA/BTf,OAqCpBuE,EAAUlC,UACP,8BACI,eAACqC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CACIC,OAAK,EADT,SAGK9D,IAAKtC,EAAE,YAEZ,cAACqG,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CACI1F,QAAS,kBA3IzEmC,EA6IwE+C,QA5IxExC,GAAc,IAyI8C,SAOKhB,IAAKtC,EAAE,mBApEhC,UAAYwB,EAAZ,YAAqBvC,QAF7B,UAAYuC,EAAZ,eA8FpB,cAAC,EAAD,CACIpB,MAAOiD,EACPhD,OAAQ,kBAAMiD,GAAeD,IAC7B9C,YACI,cAAC,EAAD,CACIa,mBAAoBA,EACpBe,eAvJL,SAACoE,GACpBxD,EAAsBwD,MAyJN1F,sBAAuBmE,GACvBjE,0BAA2B,kBACvBuC,GAAeD,IAEnBhC,WAAYD,W,yJClRrB,SAASoF,EAAT,GAUX,IATApG,EASD,EATCA,MACAC,EAQD,EARCA,OACAoG,EAOD,EAPCA,YACAlG,EAMD,EANCA,YACAM,EAKD,EALCA,sBACAE,EAID,EAJCA,0BAID,IAHCJ,qBAGD,aAFCG,eAED,MAFW,GAEX,MADCE,mBACD,MADe,GACf,EACShB,EAAMC,cAAND,EAER,OACI,eAAC,IAAD,CAAOG,OAAQC,EAAOC,OAAQA,EAA9B,UACI,cAAC,IAAD,CAAaA,OAAQA,EAArB,SAA8BoG,IAC9B,cAAC,IAAD,UAAYlG,IACZ,eAAC,IAAD,WACI,cAAC,IAAD,CACIG,MAAK,UAAKC,EAAgB,SAAW,WACrCC,QAASC,EAFb,SAIKb,EAAEc,GAAW,qBAElB,cAAC,IAAD,CAAQJ,MAAM,UAAUE,QAASG,EAAjC,SACKf,EAAEgB,GAAe,iC,+FC1BhC0F,EAAY,QACH,KACXC,OAAQ,WAAwB,IAAdC,EAAa,uDAAJ,GACjBrB,EAAQsB,IAAYC,UAAZ,aAAuBC,OAAO,EAAEC,KAAK,GAAMJ,IACnDK,EAAG,UAAMP,EAAN,YAAmBnB,GAC5B,OAAO2B,IAAYxH,IAAIuH,IAE3BE,QAAS,SAAUC,GACf,IAAIH,EAAG,UAAMP,EAAN,iBAAwBU,EAASJ,KAAO,GAa/C,OAZII,EAASL,QACTE,GAAG,iBAAcG,EAASL,QAE1BK,EAASC,OAAOC,QAAUF,EAASC,OAAOE,WAC1CN,GAAG,kBAAeG,EAASC,OAAOC,OAA/B,qBAAkDF,EAASC,OAAOE,WAErEH,EAAS9B,YACT2B,GAAG,kBAAeG,EAAS9B,YAEG,OAA9B8B,EAASR,OAAOY,YAChBP,GAAG,qBAAkBG,EAASR,OAAOY,YAElCN,IAAYxH,IAAIuH,IAE3B1C,QAAS,SAAUtF,GACf,IAAMgI,EAAG,UAAMP,EAAN,YAAmBzH,GAC5B,OAAOiI,IAAYxH,IAAIuH,IAE3BtH,KAAM,SAAU8H,GACZ,IAAMR,EAAG,UAAMP,GACf,OAAOQ,IAAYvH,KAAKsH,EAAKS,KAAKZ,UAAUW,KAEhDtC,QAAS,SAAUlG,EAAIwI,GACnB,IAAMR,EAAG,UAAMP,EAAN,YAAmBzH,GAC5B,OAAOiI,IAAYtH,IAAIqH,EAAKS,KAAKZ,UAAUW,KAE/CE,WAAY,SAAU1I,GAClB,IAAMgI,EAAG,UAAMP,EAAN,YAAmBzH,GAC5B,OAAOiI,IAAYrH,OAAOoH,IAE9BzC,kBAAkB,WAAD,4BAAE,WAAOR,GAAP,+BAAAD,EAAA,6DAAe6C,EAAf,+BAAwB,GACnCK,EADW,gCACoBjD,GAC/B4D,OAAOC,KAAKjB,GAAQkB,SACdvC,EAAQsB,IAAYC,UAAZ,eAA2BF,IACzCK,GAAG,WAAQ1B,IAJA,SAMF2B,IAAYxH,IAAIuH,GANd,mFAAF,mDAAC","file":"static/js/76.defeb27c.chunk.js","sourcesContent":["module.exports = [\r\n    {\r\n        id: 9, //role id\r\n        name: \"Admin\", // role name,\r\n        permissions: [\r\n            {\r\n                id: 1,\r\n                description: \"phân quyền trên môn học\", // mô tả thông tin permission\r\n                resources: \"mon-hoc\", // table name in mysql\r\n                actions: [\r\n                    { method: \"get\", isEnable: true },\r\n                    { method: \"post\", isEnable: false },\r\n                    { method: \"put\", isEnable: false },\r\n                    { method: \"delete\", isEnable: false },\r\n                ],\r\n            },\r\n            {\r\n                id: 2,\r\n                description: \"phân quyền trên syllabus\", // mô tả thông tin permission\r\n                resources: \"syllabus\", // table name in mysql\r\n                actions: [\r\n                    { method: \"get\", isEnable: true },\r\n                    { method: \"post\", isEnable: true },\r\n                    { method: \"put\", isEnable: true },\r\n                    { method: \"delete\", isEnable: true },\r\n                ],\r\n            },\r\n        ],\r\n    },\r\n];\r\n","module.exports.MapMethodToAction = {\r\n    get: \"READ\",\r\n    post: \"CREATE\",\r\n    put: \"UPDATE\",\r\n    delete: \"DELETE\",\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Modal, ModalFooter, ModalHeader, ModalBody } from \"reactstrap\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst ActionModal = (props) => {\r\n    const { t } = useTranslation();\r\n    return (\r\n        <Modal isOpen={props.modal} toggle={props.toggle}>\r\n            {/* <ModalHeader toggle={props.toggle}>{props.headerTitle}</ModalHeader> */}\r\n            <ModalBody>{props.bodyContent || \"\"}</ModalBody>\r\n            <ModalFooter>\r\n                <Button\r\n                    color={`${props.isModalDelete ? \"danger\" : \"primary\"}`}\r\n                    onClick={props.handleOkButtonOnClick}\r\n                >\r\n                    {t(props.titleOk || \"admin.common.OK\")}\r\n                </Button>\r\n                <Button\r\n                    color=\"warning\"\r\n                    onClick={props.handleCancelButtonOnClick}\r\n                >\r\n                    {t(props.titleCancel || \"admin.common.CANCEL\")}\r\n                </Button>\r\n            </ModalFooter>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default ActionModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { RoutesString } from \"pages/routesString\";\r\nimport { useHistory, useLocation, useParams } from \"react-router\";\r\nimport LoadingBar from \"components/common/LoadingBar/LoadingBar\";\r\nimport ConfirmModal from \"components/admin/ConfirmModal/ConfirmModal\";\r\nimport { toast } from \"react-toastify\";\r\nimport roleAPI from \"api/common/role\";\r\n\r\nimport \"./Permissions.css\";\r\nimport Loading from \"components/common/loading/Loading\";\r\nimport { Table, Button } from \"reactstrap\";\r\nimport * as lodash from \"lodash\";\r\nimport mockData from \"./mock\";\r\nimport {\r\n    UncontrolledDropdown,\r\n    DropdownToggle,\r\n    DropdownMenu,\r\n    DropdownItem,\r\n    Label,\r\n    Input,\r\n} from \"reactstrap\";\r\nimport ActionModal from \"./components/ActionModal\";\r\nimport { FaRegCheckCircle, FaRegTimesCircle } from \"react-icons/fa\";\r\nimport { MapMethodToAction } from \"./mapMethodToAction\";\r\nimport i18n from \"i18n/i18n\";\r\n\r\nconst PermissionPage = (props) => {\r\n    const [role, setRole] = useState(null);\r\n    const [rolePermissionList, setRolePermissionList] = useState(null);\r\n    const [permissionSelected, setPermissionSelected] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [isRefresh, setIsRefresh] = useState(false);\r\n    const [searchRole, setSearchRole] = useState(null);\r\n    const params = useParams();\r\n    // const [total, setTotal] = useState(0);\r\n\r\n    const [confirmModal, setConfirmModal] = useState(false);\r\n    const [isOpenEdit, setIsOpenEdit] = useState(false);\r\n    const [isOpenDelete, setIsOpenDelete] = useState(false);\r\n\r\n    const titleList = React.useMemo(\r\n        () => [\r\n            { title: `${i18n.t('ROLE_PERMISSION.RESOURCE')}`, field: \"description\" },\r\n            // { title: \"Tài nguyên\", field: \"name\" },\r\n            {\r\n                title: `${i18n.t('ROLE_PERMISSION.ACTION')}`,\r\n                render: true,\r\n            },\r\n            { title: `${i18n.t('ROLE_PERMISSION.GRANT_REVOKE')}`, isAction: true },\r\n        ],\r\n        []\r\n    );\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            setIsLoading(true);\r\n            const { roleId } = params;\r\n            if (!roleId) {\r\n                toast.error(i18n.t('ROLE_PERMISSION.ROLE_ID_NOT_FOUND'));\r\n            }\r\n            await getPermissions(roleId);\r\n            setIsLoading(false);\r\n        })();\r\n    }, [params?.roleId]);\r\n\r\n    const getPermissions = async (roleId) => {\r\n        try {\r\n            // const roleResult = await roleAPI.getById(roleId);\r\n            // const results = await roleAPI.getRolePermission(roleId);\r\n            const [roleResult, results] = await Promise.all([roleAPI.getById(roleId), roleAPI.getRolePermission(roleId)])\r\n            setRole(roleResult);\r\n            setRolePermissionList(results.contents || []);\r\n        } catch (err) {\r\n            if (err?.response) {\r\n                if (err?.response?.status === 403 || err?.response?.status === 401) {\r\n                    toast.error(i18n.t(\"RESPONSE_MESSAGE401\"));\r\n                } else if (err?.response?.status === 400) {\r\n                    toast.error(i18n.t(\"RESPONSE_MESSAGE400\"));\r\n                } else if (err?.response?.status === 409) {\r\n                    toast.error(i18n.t(\"RESPONSE_MESSAGE409\"));\r\n                } else if (err?.response?.status === 404) {\r\n                    toast.error(i18n.t(\"RESPONSE_MESSAGE404\"));\r\n                } else {\r\n                    if (String(err?.response?.data?.error)?.includes(\"ER_DUP_ENTRY\")) {\r\n                        toast.error(i18n.t(\"ER_DUP_ENTRY\"));\r\n                    } else if (String(err?.response?.data?.error)?.includes(\"ID_NOT_FOUND\")) {\r\n                        toast.error(i18n.t(\"RESPONSE_MESSAGE404\"));\r\n                    } else {\r\n                        toast.error(i18n.t(\"RESPONSE_MESSAGE500\"));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleOpenEditModal = (permission) => {\r\n        setPermissionSelected(permission);\r\n        setIsOpenEdit(true);\r\n    };\r\n\r\n    // const handleOpenDeleteModal = (permission) => {\r\n    //     setIsOpenDelete(true);\r\n    //     setPermissionSelected({ ...permission });\r\n    // };\r\n\r\n    const submitUpdate = async () => {\r\n        const { name, value } = role;\r\n        const { permission } = permissionSelected;\r\n\r\n        const prepareBody = {\r\n            name,\r\n            value,\r\n            permissions: permission,\r\n        };\r\n        await roleAPI.putById(params?.roleId, prepareBody);\r\n        await getPermissions(params?.roleId);\r\n        setIsOpenEdit(false);\r\n        toast.success(i18n.t(\"admin.SUCCESS\"));\r\n    };\r\n\r\n    const handleCheckBox = (perSelected) => {\r\n        setPermissionSelected(perSelected);\r\n    };\r\n\r\n    const handleSearchRoleResource = async (searchKey) => {\r\n        const { roleId } = params;\r\n        let query = {};\r\n        query = searchKey ? { ...query, searchKey } : query;\r\n        let results = await roleAPI.getRolePermission(roleId, query);\r\n\r\n        setRolePermissionList(results.contents || []);\r\n    };\r\n\r\n    return (\r\n        <div className=\"page\">\r\n            {isLoading ? (\r\n                <Loading />\r\n            ) : (\r\n                <div>\r\n                    <div>\r\n                        <h2>{i18n.t('ROLE_PERMISSION.ROLE_PERMISSION_MANAGE')}</h2>\r\n                        {role && (\r\n                            <>\r\n                                <p>{i18n.t('ROLE_PERMISSION.CODE')}: {role.name}</p>\r\n                                <p>{i18n.t('ROLE_PERMISSION.NAME')}: {role.value}</p>\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                    <div>\r\n                        <Input\r\n                            value={searchRole}\r\n                            onChange={(e) =>\r\n                                handleSearchRoleResource(\r\n                                    e?.target?.value || null\r\n                                )\r\n                            }\r\n                            placeholder={`${i18n.t('ROLE_PERMISSION.RESOURCE_PLACE_HOLDER')}`}\r\n                        />\r\n                    </div>\r\n                    <Table bordered>\r\n                        <thead>\r\n                            <tr>\r\n                                {titleList?.map((item, index) => (\r\n                                    <th key={index}>{item?.title}</th>\r\n                                ))}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {rolePermissionList &&\r\n                                rolePermissionList?.map(\r\n                                    (rolePermission, index) => (\r\n                                        <tr key={`${index}-`}>\r\n                                            {titleList?.map((titleItem, id) => (\r\n                                                <td key={`${index}-${id}`}>\r\n                                                    {titleItem?.field &&\r\n                                                        lodash.get(\r\n                                                            rolePermission,\r\n                                                            titleItem?.field,\r\n                                                            \"\"\r\n                                                        )}\r\n                                                    {titleItem?.render &&\r\n                                                        // titleItem?.render([\r\n                                                        //     ...rolePermission?.permission,\r\n                                                        // ])\r\n\r\n                                                        rolePermission?.permission?.map(\r\n                                                            (action, index) => (\r\n                                                                <div\r\n                                                                    key={index}\r\n                                                                    style={{\r\n                                                                        padding:\r\n                                                                            \"5px 20px\",\r\n                                                                    }}\r\n                                                                >\r\n                                                                    {/* <Input\r\n                                                                    readOnly\r\n                                                                    type=\"checkbox\"\r\n                                                                    checked={action?.isEnable || false}\r\n                                                                />{\" \"} */}\r\n                                                                    {action?.isEnable ? (\r\n                                                                        <FaRegCheckCircle\r\n                                                                            fill={\r\n                                                                                \"#2ecc71\"\r\n                                                                            }\r\n                                                                        />\r\n                                                                    ) : (\r\n                                                                        <FaRegTimesCircle\r\n                                                                            fill={\r\n                                                                                \"#c0392b\"\r\n                                                                            }\r\n                                                                        />\r\n                                                                    )}\r\n                                                                    {\r\n                                                                        `  ${i18n.t(`ROLE_PERMISSION.${MapMethodToAction[\r\n                                                                            typeof action?.method ===\r\n                                                                                \"string\"\r\n                                                                                ? action?.method?.toLowerCase()\r\n                                                                                : String(\r\n                                                                                    action?.method\r\n                                                                                ).toLowerCase()\r\n                                                                        ]}`)}`\r\n                                                                    }\r\n                                                                </div>\r\n                                                            )\r\n                                                        )}\r\n                                                    {titleItem.isAction && (\r\n                                                        <div>\r\n                                                            <UncontrolledDropdown>\r\n                                                                <DropdownToggle\r\n                                                                    caret\r\n                                                                >\r\n                                                                    {i18n.t('ACTION')}\r\n                                                                </DropdownToggle>\r\n                                                                <DropdownMenu>\r\n                                                                    <DropdownItem\r\n                                                                        onClick={() =>\r\n                                                                            handleOpenEditModal(\r\n                                                                                rolePermission\r\n                                                                            )\r\n                                                                        }\r\n                                                                    >\r\n                                                                        {i18n.t('EDIT')}\r\n                                                                    </DropdownItem>\r\n                                                                    {/* <DropdownItem\r\n                                                                        onClick={() =>\r\n                                                                            handleOpenDeleteModal(\r\n                                                                                rolePermission\r\n                                                                            )\r\n                                                                        }\r\n                                                                    >\r\n                                                                        Delete\r\n                                                                    </DropdownItem> */}\r\n                                                                </DropdownMenu>\r\n                                                            </UncontrolledDropdown>\r\n                                                        </div>\r\n                                                    )}\r\n                                                </td>\r\n                                            ))}\r\n                                        </tr>\r\n                                    )\r\n                                )}\r\n                        </tbody>\r\n                    </Table>\r\n\r\n                    {/* Edit modal */}\r\n                    <ActionModal\r\n                        modal={isOpenEdit}\r\n                        toggle={() => setIsOpenEdit(!isOpenEdit)}\r\n                        bodyContent={\r\n                            <BodyContent\r\n                                permissionSelected={permissionSelected}\r\n                                handleCheckBox={handleCheckBox}\r\n                            />\r\n                        }\r\n                        handleOkButtonOnClick={submitUpdate}\r\n                        handleCancelButtonOnClick={() =>\r\n                            setIsOpenEdit(!isOpenEdit)\r\n                        }\r\n                        permission={permissionSelected}\r\n                    />\r\n\r\n                    {/* Delete modal */}\r\n                    {/* <ActionModal\r\n                        modal={isOpenDelete}\r\n                        toggle={() => setIsOpenDelete(!isOpenDelete)}\r\n                        isModalDelete={true}\r\n                        bodyContent={\r\n                            <BodyContent\r\n                                actions={permissionSelected?.permission}\r\n                            />\r\n                        }\r\n                        handleOkButtonOnClick={() => {}}\r\n                        handleCancelButtonOnClick={() =>\r\n                            setIsOpenDelete(!isOpenDelete)\r\n                        }\r\n                        permission={permissionSelected}\r\n                    /> */}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst BodyContent = (props) => {\r\n    const handleCheckInput = (index, checked) => {\r\n        let cloneData = { ...props?.permissionSelected };\r\n        const reducePermissions = cloneData?.permission?.map(\r\n            (per, perIndex) => {\r\n                if (perIndex === index) {\r\n                    return { ...per, isEnable: checked };\r\n                }\r\n                return per;\r\n            }\r\n        );\r\n        props?.handleCheckBox({ ...cloneData, permission: reducePermissions });\r\n    };\r\n\r\n    return (\r\n        <div style={{ padding: \"10px 50px\" }}>\r\n            {props?.permissionSelected &&\r\n                props?.permissionSelected?.permission?.map((action, index) => (\r\n                    <div key={index}>\r\n                        <Label>\r\n                            <Input\r\n                                type=\"checkbox\"\r\n                                checked={action?.isEnable || false}\r\n                                onChange={(e) =>\r\n                                    handleCheckInput(index, e?.target?.checked)\r\n                                }\r\n                            />{\" \"}\r\n                            {\r\n                                `  ${i18n.t(`ROLE_PERMISSION.${MapMethodToAction[\r\n                                    typeof action?.method ===\r\n                                        \"string\"\r\n                                        ? action?.method?.toLowerCase()\r\n                                        : String(\r\n                                            action?.method\r\n                                        ).toLowerCase()\r\n                                ]}`)}`\r\n                            }\r\n                        </Label>\r\n                    </div>\r\n                ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PermissionPage;\r\n","import React from \"react\";\r\nimport { Button, Modal, ModalFooter, ModalHeader, ModalBody, Input } from \"reactstrap\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nexport default function ConfirmModal({\r\n    modal,\r\n    toggle,\r\n    headerTitle,\r\n    bodyContent,\r\n    handleOkButtonOnClick,\r\n    handleCancelButtonOnClick,\r\n    isModalDelete = false,\r\n    titleOk = \"\",\r\n    titleCancel = \"\",\r\n}) {\r\n    const { t } = useTranslation();\r\n\r\n    return (\r\n        <Modal isOpen={modal} toggle={toggle}>\r\n            <ModalHeader toggle={toggle}>{headerTitle}</ModalHeader>\r\n            <ModalBody>{bodyContent}</ModalBody>\r\n            <ModalFooter>\r\n                <Button\r\n                    color={`${isModalDelete ? \"danger\" : \"primary\"}`}\r\n                    onClick={handleOkButtonOnClick}\r\n                >\r\n                    {t(titleOk || \"admin.common.OK\")}\r\n                </Button>\r\n                <Button color=\"warning\" onClick={handleCancelButtonOnClick}>\r\n                    {t(titleCancel || \"admin.common.CANCEL\")}\r\n                </Button>\r\n            </ModalFooter>\r\n        </Modal>\r\n    );\r\n}\r\n\r\n\r\nexport function InputModal({\r\n    modal,\r\n    toggle,\r\n    headerTitle,\r\n    handleOkButtonOnClick,\r\n    handleCancelButtonOnClick,\r\n    isModalDelete = false,\r\n    titleOk = \"\",\r\n    titleCancel = \"\",\r\n}) {\r\n    const { t } = useTranslation();\r\n    const [text, setText] = useState('');\r\n\r\n    return (\r\n        <Modal isOpen={modal} toggle={toggle}>\r\n            <ModalHeader toggle={toggle}>{headerTitle}</ModalHeader>\r\n            <ModalBody>\r\n                <Input value={text} onChange={e => setText(e?.target?.value)}/>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n                <Button\r\n                    color={`${isModalDelete ? \"danger\" : \"primary\"}`}\r\n                    onClick={() => handleOkButtonOnClick(text)}\r\n                >\r\n                    {t(titleOk || \"admin.common.OK\")}\r\n                </Button>\r\n                <Button color=\"warning\" onClick={handleCancelButtonOnClick}>\r\n                    {t(titleCancel || \"admin.common.CANCEL\")}\r\n                </Button>\r\n            </ModalFooter>\r\n        </Modal>\r\n    );\r\n}","import axiosClient from \"./axiosClient\";\r\nimport queryString from \"query-string\";\r\n\r\nconst tableName = \"roles\";\r\nexport default {\r\n    getAll: function (filter = {}) {\r\n        const query = queryString.stringify({limit:-1,page:0, ...filter });\r\n        const url = `${tableName}?${query}`;\r\n        return axiosClient.get(url);\r\n    },\r\n    getList: function (pageable) {\r\n        let url = `${tableName}?page=${pageable.page - 1}`;\r\n        if (pageable.limit) {\r\n            url += `&limit=${pageable.limit}`;\r\n        }\r\n        if (pageable.sorter.sortBy && pageable.sorter.sortType) {\r\n            url += `&sortBy=${pageable.sorter.sortBy}&sortType=${pageable.sorter.sortType}`;\r\n        }\r\n        if (pageable.searchKey) {\r\n            url += `&search=${pageable.searchKey}`;\r\n        }\r\n        if (pageable.filter.isDeleted !== null) {\r\n            url += `&isDeleted=${pageable.filter.isDeleted}`;\r\n        }\r\n        return axiosClient.get(url);\r\n    },\r\n    getById: function (id) {\r\n        const url = `${tableName}/${id}`;\r\n        return axiosClient.get(url);\r\n    },\r\n    post: function (body) {\r\n        const url = `${tableName}`;\r\n        return axiosClient.post(url, JSON.stringify(body));\r\n    },\r\n    putById: function (id, body) {\r\n        const url = `${tableName}/${id}`;\r\n        return axiosClient.put(url, JSON.stringify(body));\r\n    },\r\n    deleteById: function (id) {\r\n        const url = `${tableName}/${id}`;\r\n        return axiosClient.delete(url);\r\n    },\r\n    getRolePermission: async (roleId, filter = {}) => {\r\n        let url = `/resources/permission/${roleId}`;\r\n        if (Object.keys(filter).length) {\r\n            const query = queryString.stringify({ ...filter });\r\n            url += `?${query}`;\r\n        }\r\n        return await axiosClient.get(url);\r\n    },\r\n};\r\n"],"sourceRoot":""}