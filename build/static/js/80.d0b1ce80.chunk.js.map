{"version":3,"sources":["components/common/UploadImage/UploadImage.js","api/common/uploadFile.api.js","views/user/UpdateProfile/UpdateProfile.js","components/common/AsteriskIcon/AsteriskIcon.js","components/user/Breadcrumbs/Breadcrumbs.js"],"names":["UploadImage","props","withIcon","buttonText","title","onChange","setImage","label","imgExtension","maxFileSize","fileSizeError","fileContainerStyle","boxShadow","display","upload","file","a","formData","FormData","append","axiosClient","post","headers","UpdateProfile","t","useTranslation","history","useHistory","isLogined","updateProfileLoginedStorage","useState","activeTab","setActiveTab","firstName","setFirstName","lastName","setLastName","username","setUsername","oldPasswordInput","setOldPasswordInput","passwordInput","setPasswordInput","password2Input","setPassword2Input","status","image","color","isOpen","messages","notification","setNotification","handleUpdateButtonOnClick","event","preventDefault","updateUser","userApi","updateProfile","id","message","toast","success","error","response","handleChangePasswordButtonOnClick","validatePassword","String","passwordne","password","newPassword","changePassword","push","err","data","includes","uploadImage","uploadFileApi","avatar","url","curUser","authenticationService","currentUserValue","localStorage","removeItem","setItem","JSON","stringify","window","location","reload","useEffect","Breadcrumbs","currentItem","Card","className","Row","Col","lg","Nav","vertical","NavItem","Container","fluid","onClick","NavLink","type","TabContent","TabPane","tabId","Form","FormGroup","row","src","defaultAvatar","width","height","alt","Label","for","InputGroup","InputGroupAddon","addonType","InputGroupText","Input","value","target","placeholder","AsteriskIcon","role","name","readOnly","Button","Notification","FormText","style","items","active","to","RoutesString","WELCOME","map","href"],"mappings":"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","file":"static/js/80.d0b1ce80.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport ImageUploader from \"react-images-upload\";\r\n\r\nconst maxFileSize = 5242880; //5MB\r\nconst UploadImage = (props) => {\r\n    return (\r\n        <>\r\n            <ImageUploader\r\n                withIcon={false}\r\n                buttonText={props?.title}\r\n                onChange={props.setImage}\r\n                label=\"\"\r\n                imgExtension={[\".jpg\", \".png\"]}\r\n                maxFileSize={maxFileSize}\r\n                fileSizeError=\" file size is too big\"\r\n                fileContainerStyle={{ boxShadow: \"none\", display: \"contents\" }}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UploadImage;\r\n","import axiosClient from \"./axiosClient\";\r\n\r\nexport default {\r\n    upload: async (file) => {\r\n        const formData = new FormData();\r\n        formData.append(\"file\", file);\r\n        const url = `/upload-file`;\r\n        return axiosClient.post(url, formData, {\r\n            headers: { \"Content-Type\": \"multipart/form-data\" },\r\n        });\r\n    },\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {\r\n    Form,\r\n    FormGroup,\r\n    FormText,\r\n    Input,\r\n    Label,\r\n    Col,\r\n    Button,\r\n    Card,\r\n    InputGroup,\r\n    InputGroupAddon,\r\n    InputGroupText,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    TabContent,\r\n    TabPane,\r\n    Row,\r\n    Container,\r\n} from \"reactstrap\";\r\nimport {\r\n    FaEdit,\r\n    FaTextWidth,\r\n    FaUser,\r\n    FaUsers,\r\n    FaExchangeAlt,\r\n    FaKey,\r\n} from \"react-icons/fa\";\r\n\r\nimport \"./UpdateProfile.css\";\r\n\r\nimport defaultAvatar from \"assets/images/default-avatar.png\";\r\nimport Breadcrumbs from \"components/user/Breadcrumbs/Breadcrumbs\";\r\nimport AsteriskIcon from \"components/common/AsteriskIcon/AsteriskIcon\";\r\nimport userApi from \"api/user/userApi\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport UploadImage from \"components/common/UploadImage/UploadImage\";\r\nimport uploadFileApi from \"api/common/uploadFile.api\";\r\nimport authenticationService from \"services/Authentication_service\";\r\nimport Notification from \"components/common/Notification/Notification\";\r\nimport { validatePassword } from \"utils/utils\";\r\nimport i18n from \"i18n/i18n\";\r\n\r\nexport default function UpdateProfile(props) {\r\n    const { t } = useTranslation();\r\n    let history = useHistory();\r\n    const { isLogined, updateProfileLoginedStorage } = props;\r\n    const [activeTab, setActiveTab] = useState(\"1\");\r\n    const [firstName, setFirstName] = useState(isLogined?.firstName || \"\");\r\n    const [lastName, setLastName] = useState(isLogined?.lastName || \"\");\r\n    const [username, setUsername] = useState(isLogined?.username || \"\");\r\n    const [oldPasswordInput, setOldPasswordInput] = useState(\"\");\r\n    const [passwordInput, setPasswordInput] = useState(\"\");\r\n    const [password2Input, setPassword2Input] = useState(\"\");\r\n    const [status, setStatus] = useState(\"\");\r\n    const [image, setImage] = useState(null);\r\n    const [notification, setNotification] = useState({\r\n        color: \"danger\",\r\n        isOpen: false,\r\n        messages: [],\r\n    })\r\n\r\n    const handleFirstNameChange = function (event) {\r\n        setFirstName(event.target.value);\r\n    };\r\n\r\n    const handleLastNameChange = function (event) {\r\n        setLastName(event.target.value);\r\n    };\r\n\r\n    const handleUsernameChange = function (event) {\r\n        setUsername(event.target.value);\r\n    };\r\n\r\n    const handleUpdateButtonOnClick = async (event) => {\r\n        event.preventDefault();\r\n        const updateUser = {\r\n            firstName,\r\n            lastName,\r\n            username,\r\n        };\r\n        try {\r\n            const response = await userApi.updateProfile(\r\n                isLogined.id,\r\n                updateUser\r\n            );\r\n            if (response.message === \"UPDATE_USER_SUCCESSFULLY\") {\r\n                const update = updateProfileLoginedStorage(updateUser);\r\n                toast.success(t(\"admin.UPDATE_SUCCESS\")\r\n                );\r\n            } else {\r\n                toast.error(t(\"admin.UPDATE_FAILED\"));\r\n            }\r\n        } catch (err) {\r\n            if (err.response.status === 400) {\r\n                toast.error(t(\"RESPONSE_MESSAGE400\"));\r\n            } else {\r\n                toast.error(t(\"RESPONSE_MESSAGE500\"));\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleOldPasswordInputChange = function (event) {\r\n        setNotification(null);\r\n        setOldPasswordInput(event.target.value);\r\n    };\r\n\r\n    const handlePasswordInputChange = function (event) {\r\n        setNotification(null);\r\n        setPasswordInput(event.target.value);\r\n    };\r\n\r\n    const handlePassword2InputChange = function (event) {\r\n        setNotification(null);\r\n        setPassword2Input(event.target.value);\r\n    };\r\n\r\n    const handleChangePasswordButtonOnClick = async (event) => {\r\n        event.preventDefault();\r\n        if (!validatePassword(String(passwordInput))) {\r\n            setNotification({\r\n                color: \"danger\",\r\n                isOpen: true,\r\n                messages: [t('PASSWORD_LENGTH_WARNING')],\r\n            });\r\n            return;\r\n        }\r\n        if (!validatePassword(String(password2Input))) {\r\n            setNotification({\r\n                color: \"danger\",\r\n                isOpen: true,\r\n                messages: [t('PASSWORD_LENGTH_WARNING')],\r\n            });\r\n            return;\r\n        }\r\n        if (passwordInput === password2Input) {\r\n            const passwordne = {\r\n                password: oldPasswordInput,\r\n                newPassword: passwordInput,\r\n            };\r\n            try {\r\n                const response = await userApi.changePassword(\r\n                    isLogined.id,\r\n                    passwordne\r\n                );\r\n                if (response.message === \"UPDATE_USER_SUCCESSFULLY\") {\r\n                    // do something\r\n                    toast.success(t(response.message));\r\n                    history.push(\"/\");\r\n                } else {\r\n                    // do something\r\n                    if (err?.response) {\r\n                        if (err?.response?.status === 403 || String(err?.response?.message) === 'NOT_OWNER') {\r\n                            toast.error(t(\"RESPONSE_MESSAGE403\"));\r\n                        }\r\n                        else if (err?.response?.status === 401) {\r\n                            toast.error(t(\"RESPONSE_MESSAGE401\"));\r\n                        } else if (err?.response?.status === 400) {\r\n                            toast.error(t(\"RESPONSE_MESSAGE400\"));\r\n                        } else if (err?.response?.status === 409) {\r\n                            toast.error(t(\"RESPONSE_MESSAGE409\"));\r\n                        } else if (err?.response?.status === 404) {\r\n                            toast.error(t(\"RESPONSE_MESSAGE404\"));\r\n                        } else {\r\n                            if (String(err?.response?.data?.error)?.includes(\"ER_DUP_ENTRY\")) {\r\n                                toast.error(t(\"ER_DUP_ENTRY\"));\r\n                            } else if (String(err?.response?.data?.error)?.includes(\"ID_NOT_FOUND\")) {\r\n                                toast.error(t(\"RESPONSE_MESSAGE404\"));\r\n                            } else {\r\n                                toast.error(t(\"RESPONSE_MESSAGE500\"));\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            } catch (err) {\r\n                if (err?.response?.data?.message === 'PASSWORD_INCORRECT') {\r\n                    toast.error(t(\"PASSWORD_INCORRECT\"));\r\n                }\r\n                else {\r\n                    toast.error(t(\"RESPONSE_MESSAGE500\"));\r\n                }\r\n            }\r\n        } else {\r\n            setNotification({\r\n                color: \"danger\",\r\n                isOpen: true,\r\n                messages: [t('admin.PASSWORD_MATCH_WARNING')],\r\n            });\r\n        }\r\n    };\r\n    const uploadImage = async (image) => {\r\n        try {\r\n            const { url: avatar } = await uploadFileApi.upload(image);\r\n            const curUser = authenticationService.currentUserValue;\r\n            localStorage.removeItem(\"curUser\");\r\n            localStorage.setItem(\r\n                \"curUser\",\r\n                JSON.stringify({ ...curUser, avatar })\r\n            );\r\n            window.location.reload();\r\n        } catch (error) {\r\n            toast.error(t('RESPONSE_MESSAGE500'));\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        (async () => {\r\n            if (image) {\r\n                await uploadImage(image[0]);\r\n            }\r\n        })();\r\n    }, [image]);\r\n\r\n    return (\r\n        <>\r\n            <Breadcrumbs currentItem={t(\"UPDATE_PROFILE\")} />\r\n            <Card className=\"cardT shadow-sm\">\r\n                <Row>\r\n                    <Col lg={3} className=\"contentLeft\">\r\n                        <div className=\"tabsbar\">\r\n                            <Nav vertical>\r\n                                <NavItem>\r\n                                    <Container\r\n                                        fluid\r\n                                        className={\r\n                                            activeTab === \"1\"\r\n                                                ? \"activeT\"\r\n                                                : \"\"\r\n                                        }\r\n                                        onClick={() => setActiveTab(\"1\")}\r\n                                    >\r\n                                        <NavLink type=\"button\">\r\n                                            {t(\"UPDATE_PROFILE\")}\r\n                                        </NavLink>\r\n                                    </Container>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <Container\r\n                                        fluid\r\n                                        className={\r\n                                            activeTab === \"2\"\r\n                                                ? \"activeT\"\r\n                                                : \"\"\r\n                                        }\r\n                                        onClick={() => setActiveTab(\"2\")}\r\n                                    >\r\n                                        <NavLink type=\"button\">\r\n                                            {t(\"CHANGE_PASSWORD\")}\r\n                                        </NavLink>\r\n                                    </Container>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </div>\r\n                    </Col>\r\n                    <Col lg={9}>\r\n                        <div className=\"contentRight\">\r\n                            <TabContent activeTab={activeTab}>\r\n                                <TabPane tabId=\"1\">\r\n                                    <Container>\r\n                                        <Form>\r\n                                            <FormGroup row>\r\n                                                <img\r\n                                                    src={\r\n                                                        isLogined?.avatar\r\n                                                            ? `${isLogined?.avatar}`\r\n                                                            : defaultAvatar\r\n                                                    }\r\n                                                    className=\"avatar\"\r\n                                                    width=\"100px\"\r\n                                                    height=\"100px\"\r\n                                                    alt=\"Avatar\"\r\n                                                />\r\n                                                <div className=\"mt-3\">\r\n                                                    <h4>\r\n                                                        {isLogined.firstName +\r\n                                                            \" \" +\r\n                                                            isLogined.lastName}\r\n                                                    </h4>\r\n                                                    <UploadImage\r\n                                                        title={t(\r\n                                                            \"CHANGEAVATAR\"\r\n                                                        )}\r\n                                                        setImage={setImage}\r\n                                                    />\r\n                                                </div>\r\n                                            </FormGroup>\r\n                                            <FormGroup\r\n                                                row\r\n                                                className=\"text-left mt-5\"\r\n                                            >\r\n                                                <Label for=\"firstname\" lg={2}>\r\n                                                    {t(\"FIRST_NAME\")}\r\n                                                </Label>\r\n                                                <Col lg={4}>\r\n                                                    <InputGroup>\r\n                                                        <InputGroupAddon addonType=\"prepend\">\r\n                                                            <InputGroupText>\r\n                                                                <FaUser />\r\n                                                            </InputGroupText>\r\n                                                        </InputGroupAddon>\r\n                                                        <Input\r\n                                                            type=\"text\"\r\n                                                            id=\"firstname\"\r\n                                                            value={firstName}\r\n                                                            onChange={\r\n                                                                handleFirstNameChange\r\n                                                            }\r\n                                                            placeholder=\"First name...\"\r\n                                                        ></Input>\r\n                                                    </InputGroup>\r\n                                                </Col>\r\n                                                <Label\r\n                                                    for=\"lastname\"\r\n                                                    lg={2}\r\n                                                    className=\"text-right\"\r\n                                                >\r\n                                                    {t(\"LAST_NAME\")}\r\n                                                </Label>\r\n                                                <Col lg={4}>\r\n                                                    <InputGroup>\r\n                                                        <InputGroupAddon addonType=\"prepend\">\r\n                                                            <InputGroupText>\r\n                                                                <FaUser />\r\n                                                            </InputGroupText>\r\n                                                        </InputGroupAddon>\r\n                                                        <Input\r\n                                                            type=\"text\"\r\n                                                            id=\"lastname\"\r\n                                                            value={lastName}\r\n                                                            onChange={\r\n                                                                handleLastNameChange\r\n                                                            }\r\n                                                            placeholder=\"Last name...\"\r\n                                                        ></Input>\r\n                                                    </InputGroup>\r\n                                                </Col>\r\n                                            </FormGroup>\r\n\r\n                                            <FormGroup\r\n                                                row\r\n                                                className=\"text-left mt-3\"\r\n                                            >\r\n                                                <Label for=\"username\" lg={2}>\r\n                                                    {t(\"USERNAME\")}{\" \"}\r\n                                                    <AsteriskIcon />\r\n                                                </Label>\r\n                                                <Col lg={10}>\r\n                                                    <InputGroup>\r\n                                                        <InputGroupAddon addonType=\"prepend\">\r\n                                                            <InputGroupText>\r\n                                                                <FaTextWidth />\r\n                                                            </InputGroupText>\r\n                                                        </InputGroupAddon>\r\n                                                        <Input\r\n                                                            type=\"search\"\r\n                                                            id=\"username\"\r\n                                                            placeholder=\"Username...\"\r\n                                                            onChange={\r\n                                                                handleUsernameChange\r\n                                                            }\r\n                                                            value={username}\r\n                                                        ></Input>\r\n                                                    </InputGroup>\r\n                                                </Col>\r\n                                            </FormGroup>\r\n\r\n                                            <FormGroup\r\n                                                row\r\n                                                className=\"text-left mt-3\"\r\n                                            >\r\n                                                <Label for=\"role\" lg={2}>\r\n                                                    {t(\"ROLE\")}\r\n                                                </Label>\r\n                                                <Col lg={10}>\r\n                                                    <InputGroup>\r\n                                                        <InputGroupAddon addonType=\"prepend\">\r\n                                                            <InputGroupText>\r\n                                                                <FaUsers />\r\n                                                            </InputGroupText>\r\n                                                        </InputGroupAddon>\r\n                                                        <Input\r\n                                                            type=\"search\"\r\n                                                            id=\"role\"\r\n                                                            value={\r\n                                                                isLogined?.role\r\n                                                                    ?.name || \"\"\r\n                                                            }\r\n                                                            readOnly\r\n                                                        ></Input>\r\n                                                    </InputGroup>\r\n                                                </Col>\r\n                                            </FormGroup>\r\n\r\n                                            <Button\r\n                                                onClick={\r\n                                                    handleUpdateButtonOnClick\r\n                                                }\r\n                                                className=\"buttonOrange2 mt-4\"\r\n                                            >\r\n                                                <FaEdit /> {t(\"UPDATE\")}\r\n                                            </Button>\r\n                                        </Form>\r\n                                    </Container>\r\n                                </TabPane>\r\n                                <TabPane tabId=\"2\">\r\n                                    <Container className=\"mt-5\">\r\n                                        {notification && <Notification\r\n                                            color={notification?.color}\r\n                                            isOpen={notification?.isOpen}\r\n                                            messages={notification?.messages}\r\n                                        />}\r\n                                        <Form>\r\n                                            <FormGroup\r\n                                                row\r\n                                                className=\"text-left mt-3\"\r\n                                            >\r\n                                                <Label for=\"oldPassword\" lg={3}>\r\n                                                    {t(\"OLDPASSWORD\")}{\" \"}\r\n                                                    <AsteriskIcon />\r\n                                                </Label>\r\n                                                <Col lg={9}>\r\n                                                    <InputGroup>\r\n                                                        <InputGroupAddon addonType=\"prepend\">\r\n                                                            <InputGroupText>\r\n                                                                <FaKey />\r\n                                                            </InputGroupText>\r\n                                                        </InputGroupAddon>\r\n                                                        <Input\r\n                                                            type=\"password\"\r\n                                                            id=\"oldpassword\"\r\n                                                            placeholder={`${t(\"OLDPASSWORD\")}...`}\r\n                                                            value={\r\n                                                                oldPasswordInput\r\n                                                            }\r\n                                                            onChange={\r\n                                                                handleOldPasswordInputChange\r\n                                                            }\r\n                                                        ></Input>\r\n                                                    </InputGroup>\r\n                                                </Col>\r\n                                            </FormGroup>\r\n\r\n                                            <FormGroup\r\n                                                row\r\n                                                className=\"text-left mt-3\"\r\n                                            >\r\n                                                <Label for=\"password\" lg={3}>\r\n                                                    {t(\"PASSWORD\")}{\" \"}\r\n                                                    <AsteriskIcon />\r\n                                                </Label>\r\n                                                <Col lg={9}>\r\n                                                    <InputGroup>\r\n                                                        <InputGroupAddon addonType=\"prepend\">\r\n                                                            <InputGroupText>\r\n                                                                <FaKey />\r\n                                                            </InputGroupText>\r\n                                                        </InputGroupAddon>\r\n                                                        <Input\r\n                                                            type=\"password\"\r\n                                                            id=\"password\"\r\n                                                            placeholder={`${t(\"PASSWORD\")}...`}\r\n                                                            value={\r\n                                                                passwordInput\r\n                                                            }\r\n                                                            onChange={\r\n                                                                handlePasswordInputChange\r\n                                                            }\r\n                                                        ></Input>\r\n                                                    </InputGroup>\r\n                                                </Col>\r\n                                            </FormGroup>\r\n\r\n                                            <FormGroup\r\n                                                row\r\n                                                className=\"text-left mt-3\"\r\n                                            >\r\n                                                <Label for=\"password2\" lg={3}>\r\n                                                    {t(\"PASSWORD_AGAINST\")}{\" \"}\r\n                                                    <AsteriskIcon />\r\n                                                </Label>\r\n                                                <Col lg={9}>\r\n                                                    <InputGroup>\r\n                                                        <InputGroupAddon addonType=\"prepend\">\r\n                                                            <InputGroupText>\r\n                                                                <FaKey />\r\n                                                            </InputGroupText>\r\n                                                        </InputGroupAddon>\r\n                                                        <Input\r\n                                                            type=\"password\"\r\n                                                            id=\"password2\"\r\n                                                            placeholder={`${t(\"PASSWORD_AGAINST\")}...`}\r\n                                                            value={\r\n                                                                password2Input\r\n                                                            }\r\n                                                            onChange={\r\n                                                                handlePassword2InputChange\r\n                                                            }\r\n                                                        ></Input>\r\n                                                    </InputGroup>\r\n                                                </Col>\r\n                                            </FormGroup>\r\n\r\n                                            <Button\r\n                                                onClick={\r\n                                                    handleChangePasswordButtonOnClick\r\n                                                }\r\n                                                className=\"buttonOrange2 mt-4\"\r\n                                            >\r\n                                                <FaExchangeAlt /> {t(\"CHANGE\")}\r\n                                            </Button>\r\n                                            <FormText color=\"danger\">\r\n                                                {status}\r\n                                            </FormText>\r\n                                        </Form>\r\n                                    </Container>\r\n                                </TabPane>\r\n                            </TabContent>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Card>\r\n        </>\r\n    );\r\n}\r\n","import React from \"react\";\n\nexport default function AsteriskIcon() {\n  return <span style={{ color: \"red\" }}>(*)</span>;\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { FaHome } from \"react-icons/fa\";\n\nimport { RoutesString } from \"pages/routesString\";\n\nexport default function Breadcrumbs({ items, currentItem }) {\n  return (\n    <Breadcrumb>\n      <BreadcrumbItem active={!currentItem}>\n        <Link to={RoutesString.WELCOME}>\n          <FaHome />\n        </Link>\n      </BreadcrumbItem>\n      {items &&\n        items.map(({ href, title }) => {\n          return (\n            <BreadcrumbItem>\n              <Link to={href}>{title}</Link>\n            </BreadcrumbItem>\n          );\n        })}\n      {currentItem && <BreadcrumbItem active>{currentItem}</BreadcrumbItem>}\n    </Breadcrumb>\n  );\n}\n"],"sourceRoot":""}