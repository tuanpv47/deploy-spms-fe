{"version":3,"sources":["views/Registration/VerifyToken/VerifyToken.js"],"names":["VerifyToken","props","useParams","token","history","useHistory","useState","isLoading","setIsLoading","useEffect","a","verifyToken","axiosClient","get","CONFIG","API","VERIFY_TOKEN_EMAIL","replace","result","message","data","AuthenticationService","logout","toast","success","i18n","t","refreshToken","curUser","localStorage","setItem","JSON","stringify","accessToken","window","location","push","RoutesString","LOGIN","warning","error"],"mappings":"oOA0DeA,UAhDK,SAACC,GAAW,IAAD,EACNC,cAAfC,aADqB,MACb,GADa,EAEvBC,EAAUC,cAFa,EAGKC,oBAAS,GAHd,mBAGtBC,EAHsB,KAGXC,EAHW,KAI7BC,qBAAU,WACR,sBAAC,sBAAAC,EAAA,sEACOC,EAAYR,GADnB,0CAAD,KAGC,IACH,IAAMQ,EAAW,uCAAG,WAAOR,GAAP,qBAAAO,EAAA,6DAClBF,GAAa,GADK,kBAGKI,IAAYC,IAAZ,UAChBC,IAAOC,IAAIC,mBAAmBC,QAAQ,SAAUd,KAJrC,OAGVe,EAHU,SAM2BA,EAAnCC,eANQ,MAME,eANF,EAMkBC,EAASF,EAATE,KAClCC,IAAsBC,SACN,wBAAZH,GACFI,IAAMC,QAAQC,IAAKC,EAAEP,KACjB,OAACC,QAAD,IAACA,OAAD,EAACA,EAAMjB,SAAS,OAACiB,QAAD,IAACA,OAAD,EAACA,EAAMO,gBAAgB,OAACP,QAAD,IAACA,OAAD,EAACA,EAAMQ,UAGhDC,aAAaC,QACX,QACAC,KAAKC,UAAU,CACbL,aAAY,OAAEP,QAAF,IAAEA,OAAF,EAAEA,EAAMO,aACpBM,YAAW,OAAEb,QAAF,IAAEA,OAAF,EAAEA,EAAMjB,SAGvB0B,aAAaC,QAAQ,UAAWC,KAAKC,UAAL,OAAeZ,QAAf,IAAeA,OAAf,EAAeA,EAAMQ,UACrDM,OAAOC,SAASlB,QAAQ,MAVxBb,EAAQgC,KAAKC,IAAaC,QAYP,mBAAZnB,GACTI,IAAMgB,QAAQd,IAAKC,EAAEP,IACrBf,EAAQgC,KAAKC,IAAaC,SAE1Bf,IAAMiB,MAAMf,IAAKC,EAAEP,IACnBf,EAAQgC,KAAKC,IAAaC,QA5BZ,kDA+BhBf,IAAMiB,MAAMf,IAAKC,EAAE,iBACnBtB,EAAQgC,KAAKC,IAAaC,OAhCV,QAkClB9B,GAAa,GAlCK,0DAAH,sDAoCjB,OAAO,mCAAGD,GAAa,cAAC,IAAD","file":"static/js/90.f3e80cca.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport CONFIG from \"config/config\";\nimport { toast } from \"react-toastify\";\nimport axiosClient from \"api/common/axiosClient\";\nimport i18n from \"i18n/i18n\";\nimport { RoutesString } from \"pages/routesString\";\nimport AuthenticationService from \"services/Authentication_service\";\nimport Loading from \"components/common/loading/Loading\";\n\nconst VerifyToken = (props) => {\n  const { token = \"\" } = useParams();\n  const history = useHistory();\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    (async () => {\n      await verifyToken(token);\n    })();\n  }, []);\n  const verifyToken = async (token) => {\n    setIsLoading(true);\n    try {\n      const result = await axiosClient.get(\n        `${CONFIG.API.VERIFY_TOKEN_EMAIL.replace(\":token\", token)}`\n      );\n      const { message = \"VERIFY_ERROR\", data } = result;\n      AuthenticationService.logout();\n      if (message === \"VERIFY_SUCCESSFULLY\") {\n        toast.success(i18n.t(message));\n        if (!data?.token || !data?.refreshToken || !data?.curUser) {\n          history.push(RoutesString.LOGIN);\n        } else {\n          localStorage.setItem(\n            \"token\",\n            JSON.stringify({\n              refreshToken: data?.refreshToken,\n              accessToken: data?.token,\n            })\n          );\n          localStorage.setItem(\"curUser\", JSON.stringify(data?.curUser));\n          window.location.replace(\"/\");\n        }\n      } else if (message === \"TOKEN_VERIFIED\") {\n        toast.warning(i18n.t(message));\n        history.push(RoutesString.LOGIN);\n      } else {\n        toast.error(i18n.t(message));\n        history.push(RoutesString.LOGIN);\n      }\n    } catch (error) {\n      toast.error(i18n.t(\"VERIFY_ERROR\"));\n      history.push(RoutesString.LOGIN);\n    }\n    setIsLoading(false);\n  };\n  return <>{isLoading && <Loading />}</>;\n};\n\nexport default VerifyToken;\n"],"sourceRoot":""}