{"version":3,"sources":["views/user/Home/Home.js","components/user/MyPagination/MyPagination.js","api/common/school-year.js","components/user/Breadcrumbs/Breadcrumbs.js"],"names":["Home","props","useTranslation","t","useState","id","name","history","useHistory","curUser","JSON","parse","localStorage","getItem","role","toLowerCase","studentRole","to","pathname","push","RoutesString","COMMON_CTDT","ADMIN_CHUONG_TRINH_DAO_TAO","LOGIN","MyPagination","url","startPage","page","limit","total","disabled","first","onClick","previous","active","next","last","parseInt","getAll","a","filter","query","queryString","stringify","CONFIG","API","NAM_HOC","axiosClient","get","toast","error","i18n","Breadcrumbs","items","currentItem","WELCOME","map","href","title"],"mappings":"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","file":"static/js/46.1208c142.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Button, Col, Form, FormGroup, Input, Label, Row } from \"reactstrap\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\nimport \"./Home.css\";\r\n\r\nimport Breadcrumbs from \"components/user/Breadcrumbs/Breadcrumbs\";\r\nimport EducationCard from \"components/user/EducationCard/EducationCard\";\r\nimport MyPagination from \"components/user/MyPagination/MyPagination\";\r\nimport educationMajorDetailAPI from \"api/common/education-major-detail\";\r\nimport schoolYearAPI from \"api/common/school-year\";\r\nimport educationLevelAPI from \"api/common/education-level\";\r\nimport { FaFilter, FaSort } from \"react-icons/fa\";\r\nimport ListItem from \"./ListItem\";\r\nimport { studentRole } from \"constants/constants\";\r\nimport { useHistory, useLocation } from \"react-router\";\r\nimport { RoutesString } from \"pages/routesString\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nexport default function Home(props) {\r\n    const { t } = useTranslation();\r\n\r\n    const [searchItems, setSearchItems] = useState([\r\n        {\r\n            id: 0,\r\n            name: \"Khoa học máy tính\",\r\n        },\r\n        {\r\n            id: 1,\r\n            name: \"Hệ thống thông tin\",\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Công nghệ phần mềm\",\r\n        },\r\n        {\r\n            id: 3,\r\n            name: \"Mạng máy tính\",\r\n        },\r\n        {\r\n            id: 4,\r\n            name: \"Công nghệ tri thức\",\r\n        },\r\n    ]);\r\n    const [searchKey, setSearchKey] = useState(\"từ khóa tìm kiếm\");\r\n    const [educationMajorDetails, setEducationMajorDetails] = useState([]);\r\n    const [educationMajorTotal, setEducationMajorTotal] = useState(0);\r\n    const [schoolYears, setSchoolYears] = useState([]);\r\n    const [educationLevels, setEducationLevels] = useState([]);\r\n    \r\n    const history = useHistory();\r\n    const curUser = JSON.parse(localStorage.getItem(\"curUser\"))\r\n    if(!curUser){\r\n      return <Redirect\r\n                to={{\r\n                  pathname: history.push(RoutesString.LOGIN),\r\n                }}\r\n              />\r\n    }\r\n    const isStudentRole = curUser?.role?.name?.toLowerCase() === studentRole ? true : false;\r\n    if(!isStudentRole){\r\n      // history.push(RoutesString.ADMIN_CHUONG_TRINH_DAO_TAO);\r\n      return <Redirect\r\n      to={{\r\n        pathname: history.push(RoutesString.ADMIN_CHUONG_TRINH_DAO_TAO),\r\n      }}\r\n    />\r\n    } return <Redirect\r\n    to={{\r\n      pathname: history.push(RoutesString.COMMON_CTDT),\r\n    }}\r\n  />\r\n\r\n    // useEffect(async () => {\r\n    //     const search = window.location.search;\r\n    //     const params = new URLSearchParams(search);\r\n    //     const page = params.get(\"page\") ? parseInt(params.get(\"page\")) - 1 : 0;\r\n    //     const limit = params.get(\"limit\") ? parseInt(params.get(\"limit\")) : 3;\r\n    //     const educationMajorDetailRes = await educationMajorDetailAPI.getList(\r\n    //         page,\r\n    //         limit\r\n    //     );\r\n    //     if (educationMajorDetailRes) {\r\n    //         setEducationMajorDetails(educationMajorDetailRes.contents);\r\n    //         setEducationMajorTotal(educationMajorDetailRes.total);\r\n    //     }\r\n    //     const schoolYearRes = await schoolYearAPI.getAll();\r\n    //     if (schoolYearRes) {\r\n    //         setSchoolYears(schoolYearRes.contents);\r\n    //     }\r\n    //     const educationLevelRes = await educationLevelAPI.getAll();\r\n    //     if (educationLevelRes) {\r\n    //         setEducationLevels(educationLevelRes.contents);\r\n    //     }\r\n    // }, []);\r\n\r\n    // const educationMajorDetailsRender = function () {\r\n    //     let items = [];\r\n    //     educationMajorDetails &&\r\n    //         educationMajorDetails.map((item, index) => {\r\n    //             if (index !== 0 && index % 3 === 0) {\r\n    //                 const item3 = items.pop(),\r\n    //                     item2 = items.pop(),\r\n    //                     item1 = items.pop();\r\n    //                 return (\r\n    //                     <Row key={index}>\r\n    //                         <Col lg={4}>\r\n    //                             {item1 && (\r\n    //                                 <a href=\"manage/3/2017/basic\">\r\n    //                                     <EducationCard\r\n    //                                         educationMajorDetail={item1}\r\n    //                                     />\r\n    //                                 </a>\r\n    //                             )}\r\n    //                         </Col>\r\n    //                         <Col lg={4}>\r\n    //                             {item2 && (\r\n    //                                 <EducationCard\r\n    //                                     educationMajorDetail={item2}\r\n    //                                 />\r\n    //                             )}\r\n    //                         </Col>\r\n    //                         <Col lg={4}>\r\n    //                             {item3 && (\r\n    //                                 <EducationCard\r\n    //                                     educationMajorDetail={item3}\r\n    //                                 />\r\n    //                             )}\r\n    //                         </Col>\r\n    //                     </Row>\r\n    //                 );\r\n    //             }\r\n    //             items.push(item);\r\n    //         });\r\n    //     if (items.length) {\r\n    //         return (\r\n    //             <Row key={0}>\r\n    //                 {items.map((item, index) => {\r\n    //                     return (\r\n    //                         <Col key={index} lg={4}>\r\n    //                             <a href=\"manage/3/2017/basic\">\r\n    //                                 <EducationCard\r\n    //                                     educationMajorDetail={item}\r\n    //                                 />\r\n    //                             </a>\r\n    //                         </Col>\r\n    //                     );\r\n    //                 })}\r\n    //             </Row>\r\n    //         );\r\n    //     }\r\n    // };\r\n\r\n    // return (\r\n    //     <div>\r\n    //         <div>\r\n    //             <Breadcrumbs />\r\n    //         </div>\r\n\r\n    //         <div className=\"container mb-3\">\r\n    //             <Autocomplete\r\n    //                 options={searchItems.map((item) => item.name)}\r\n    //                 renderInput={(params) => (\r\n    //                     <TextField\r\n    //                         {...params}\r\n    //                         label=\"Search input\"\r\n    //                         margin=\"normal\"\r\n    //                         variant=\"outlined\"\r\n    //                     />\r\n    //                 )}\r\n    //             />\r\n    //         </div>\r\n\r\n    //         <div className=\"mt-3\">\r\n    //             {/* <ListItem /> */}\r\n    //         </div>\r\n    //         {/*\r\n    //   <div>\r\n    //     <Form className=\"row\">\r\n    //       <FormGroup className=\"col-lg-3\">\r\n    //         <Label for=\"education-program-name\">\r\n    //           {t(\"EDUCATION_PROGRAM_NAME\")}\r\n    //         </Label>\r\n    //         <Input\r\n    //           type=\"text\"\r\n    //           id=\"education-program-code\"\r\n    //           placeholder=\"Nhập tên chương trình...\"\r\n    //         ></Input>\r\n    //       </FormGroup>\r\n    //       <FormGroup className=\"col-lg-3\">\r\n    //         <Label for=\"school-year\">{t(\"SCHOOL_YEAR\")}</Label>\r\n    //         <Input type=\"select\" name=\"select\" id=\"school-year\">\r\n    //           <option>Tất cả</option>\r\n    //           {schoolYears.map((item, index) => {\r\n    //             return <option key={index}>{item.ten}</option>;\r\n    //           })}\r\n    //         </Input>\r\n    //       </FormGroup>\r\n    //       <FormGroup className=\"col-lg-3\">\r\n    //         <Label for=\"education-level\">{t(\"EDUCATION_LEVEL\")}</Label>\r\n    //         <Input type=\"select\" name=\"select\" id=\"education-level\">\r\n    //           <option>Tất cả</option>\r\n    //           {educationLevels.map((item, index) => {\r\n    //             return <option key={index}>{item.ten}</option>;\r\n    //           })}\r\n    //         </Input>\r\n    //       </FormGroup>\r\n    //       <FormGroup className=\"col-lg-3\">\r\n    //         <Label for=\"mode-of-study\">{t(\"MODE_OF_STUDY\")}</Label>\r\n    //         <Input type=\"select\" name=\"select\" id=\"mode-of-study\">\r\n    //           <option>Tất cả</option>\r\n    //           <option>Đại trà</option>\r\n    //           <option>Cử nhân tài năng</option>\r\n    //           <option>Tiên tiến</option>\r\n    //           <option>Chất lượng cao</option>\r\n    //           <option>Việt - Pháp</option>\r\n    //         </Input>\r\n    //       </FormGroup>\r\n    //     </Form>\r\n    //     <div className=\"row mb-2\">\r\n    //       <div className=\"col-lg-2\">\r\n    //         <Button style={{ backgroundColor: \"orange\" }}>\r\n    //           <FaFilter /> {t(\"FILTER\")}\r\n    //         </Button>\r\n    //       </div>\r\n    //     </div>\r\n    //   </div>\r\n\r\n    //   <div className=\"row mb-3\">\r\n    //     <div className=\"col-lg-6\">\r\n    //       Kết quả tìm kiếm cho '<i>{searchKey}'</i>:{\" \"}\r\n    //       <b>{educationMajorTotal}</b> kết quả\r\n    //     </div>\r\n    //     <div className=\"col-lg-6\">\r\n    //       <div className=\"d-flex justify-content-end\">\r\n    //         <div>\r\n    //           <Input type=\"select\" name=\"select\" id=\"sort-by\">\r\n    //             <option>Khóa tuyển</option>\r\n    //             <option>Trình độ đào tạo</option>\r\n    //             <option>Loại hình đào tao</option>\r\n    //           </Input>\r\n    //         </div>{\" \"}\r\n    //         &emsp;\r\n    //         <div>\r\n    //           <Input type=\"select\" name=\"select\" id=\"sort-type\">\r\n    //             <option>Tăng dần</option>\r\n    //             <option>Giảm dần</option>\r\n    //           </Input>\r\n    //         </div>{\" \"}\r\n    //         &emsp;\r\n    //         <div>\r\n    //           <Button color=\"primary\">\r\n    //             <FaSort /> {t(\"SORT\")}\r\n    //           </Button>\r\n    //         </div>\r\n    //       </div>\r\n    //     </div>\r\n    //   </div>\r\n\r\n    //   <div>\r\n    //     {educationMajorDetailsRender()}\r\n    //     <MyPagination />\r\n    //   </div> */}\r\n    //     </div>\r\n    // );\r\n}\r\n","import React from \"react\";\nimport { Pagination, PaginationItem, PaginationLink } from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\n\nimport \"./MyPagination.css\";\n\nexport default function MyPagination({ url, startPage, page, limit, total }) {\n  const history = useHistory();\n\n  return (\n    <Pagination>\n      <PaginationItem disabled={page === 1}>\n        <PaginationLink\n          first\n          onClick={() => {\n            history.push(`${url}startPage=1&page=1&limit=${limit}`);\n          }}\n        />\n      </PaginationItem>\n      <PaginationItem disabled={page === 1}>\n        <PaginationLink\n          previous\n          onClick={() => {\n            history.push(\n              `${url}startPage=${\n                page <= startPage ? startPage - 1 : startPage\n              }&page=${page - 1}&limit=${limit}`\n            );\n          }}\n        />\n      </PaginationItem>\n      <PaginationItem active={page === startPage} disabled={total <= 0}>\n        <PaginationLink\n          onClick={() => {\n            history.push(\n              `${url}startPage=${startPage}&page=${startPage}&limit=${limit}`\n            );\n          }}\n        >\n          {startPage}\n        </PaginationLink>\n      </PaginationItem>\n      <PaginationItem\n        active={page === startPage + 1}\n        disabled={(startPage + 1) * limit - total >= limit}\n      >\n        <PaginationLink\n          onClick={() => {\n            history.push(\n              `${url}startPage=${startPage}&page=${\n                startPage + 1\n              }&limit=${limit}`\n            );\n          }}\n        >\n          {startPage + 1}\n        </PaginationLink>\n      </PaginationItem>\n      <PaginationItem\n        active={page === startPage + 2}\n        disabled={(startPage + 2) * limit - total >= limit}\n      >\n        <PaginationLink\n          onClick={() => {\n            history.push(\n              `${url}startPage=${startPage}&page=${\n                startPage + 2\n              }&limit=${limit}`\n            );\n          }}\n        >\n          {startPage + 2}\n        </PaginationLink>\n      </PaginationItem>\n      <PaginationItem disabled={(page + 1) * limit - total >= limit}>\n        <PaginationLink\n          next\n          onClick={() => {\n            history.push(\n              `${url}startPage=${\n                page >= startPage + 2 ? startPage + 1 : startPage\n              }&page=${page + 1}&limit=${limit}`\n            );\n          }}\n        />\n      </PaginationItem>\n      <PaginationItem disabled={(page + 1) * limit - total >= limit}>\n        <PaginationLink\n          last\n          onClick={() => {\n            history.push(\n              `${url}startPage=${\n                parseInt(total / limit) + (total % limit === 0 ? 0 : 1)\n              }&page=${\n                parseInt(total / limit) + (total % limit === 0 ? 0 : 1)\n              }&limit=${limit}`\n            );\n          }}\n        />\n      </PaginationItem>\n    </Pagination>\n  );\n}\n","import axiosClient from \"api/common/axiosClient\";\nimport CONFIG from \"config/config\";\nimport i18n from \"i18n/i18n\";\nimport queryString from \"query-string\";\nimport { toast } from \"react-toastify\";\n\nexport default {\n  getAll: async function (filter={}) {\n    const query = queryString.stringify({limit:-1, page:0, ...filter });\n    try {\n      const url = `${CONFIG.API.NAM_HOC}?${query}`;\n      return await axiosClient.get(url);\n    } catch (error) {\n      toast.error(i18n.t(\"ERROR\"));\n    }\n  },\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { FaHome } from \"react-icons/fa\";\n\nimport { RoutesString } from \"pages/routesString\";\n\nexport default function Breadcrumbs({ items, currentItem }) {\n  return (\n    <Breadcrumb>\n      <BreadcrumbItem active={!currentItem}>\n        <Link to={RoutesString.WELCOME}>\n          <FaHome />\n        </Link>\n      </BreadcrumbItem>\n      {items &&\n        items.map(({ href, title }) => {\n          return (\n            <BreadcrumbItem>\n              <Link to={href}>{title}</Link>\n            </BreadcrumbItem>\n          );\n        })}\n      {currentItem && <BreadcrumbItem active>{currentItem}</BreadcrumbItem>}\n    </Breadcrumb>\n  );\n}\n"],"sourceRoot":""}